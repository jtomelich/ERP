
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CodigobarraScalarFieldEnum = {
  id: 'id',
  producto_id: 'producto_id',
  codigo: 'codigo'
};

exports.Prisma.CompraScalarFieldEnum = {
  id: 'id',
  proveedor_id: 'proveedor_id',
  fecha: 'fecha',
  total: 'total'
};

exports.Prisma.CuentafinancieraScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  tipo_id: 'tipo_id',
  saldo: 'saldo'
};

exports.Prisma.DetallecompraScalarFieldEnum = {
  id: 'id',
  compra_id: 'compra_id',
  lote_id: 'lote_id',
  cantidad: 'cantidad',
  precio_unitario: 'precio_unitario'
};

exports.Prisma.DetalleordencompraScalarFieldEnum = {
  id: 'id',
  orden_id: 'orden_id',
  producto_id: 'producto_id',
  cantidad_solicitada: 'cantidad_solicitada',
  precio_estimado: 'precio_estimado'
};

exports.Prisma.DetalleventaScalarFieldEnum = {
  id: 'id',
  venta_id: 'venta_id',
  codigo_barra_id: 'codigo_barra_id',
  producto_id: 'producto_id',
  tipo_venta_id: 'tipo_venta_id',
  tipo_lista_id: 'tipo_lista_id',
  cantidad: 'cantidad',
  precio_unitario: 'precio_unitario'
};

exports.Prisma.EstadoordencompraScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.EstadoproduccionScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.EstadoventaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.InsumoproduccionScalarFieldEnum = {
  id: 'id',
  orden_id: 'orden_id',
  producto_id: 'producto_id',
  cantidad: 'cantidad'
};

exports.Prisma.ListaprecioScalarFieldEnum = {
  id: 'id',
  producto_id: 'producto_id',
  sucursal_id: 'sucursal_id',
  tipo_lista_id: 'tipo_lista_id',
  precio: 'precio'
};

exports.Prisma.LoteScalarFieldEnum = {
  id: 'id',
  codigo_barra_id: 'codigo_barra_id',
  fecha_vencimiento: 'fecha_vencimiento',
  cantidad: 'cantidad',
  ubicacion: 'ubicacion'
};

exports.Prisma.OrdencompraScalarFieldEnum = {
  id: 'id',
  proveedor_id: 'proveedor_id',
  fecha: 'fecha',
  estado_id: 'estado_id',
  observaciones: 'observaciones'
};

exports.Prisma.OrdencompracompraScalarFieldEnum = {
  id: 'id',
  orden_id: 'orden_id',
  compra_id: 'compra_id'
};

exports.Prisma.OrdenproduccionScalarFieldEnum = {
  id: 'id',
  producto_id: 'producto_id',
  fecha_inicio: 'fecha_inicio',
  fecha_fin: 'fecha_fin',
  estado_id: 'estado_id'
};

exports.Prisma.PermisoScalarFieldEnum = {
  id: 'id',
  rol_id: 'rol_id',
  screen_id: 'screen_id',
  puede_ver: 'puede_ver',
  puede_crear: 'puede_crear',
  puede_editar: 'puede_editar',
  puede_eliminar: 'puede_eliminar'
};

exports.Prisma.ProductoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  es_combo: 'es_combo',
  stock_minimo: 'stock_minimo'
};

exports.Prisma.ProductocomboScalarFieldEnum = {
  id: 'id',
  combo_id: 'combo_id',
  producto_id: 'producto_id',
  cantidad: 'cantidad'
};

exports.Prisma.ProductoterminadoScalarFieldEnum = {
  id: 'id',
  orden_id: 'orden_id',
  lote_id: 'lote_id',
  cantidad: 'cantidad'
};

exports.Prisma.ProveedorScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  nit: 'nit',
  contacto: 'contacto',
  telefono: 'telefono',
  correo: 'correo',
  direccion: 'direccion',
  tipo: 'tipo'
};

exports.Prisma.RolScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.ScreenScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion'
};

exports.Prisma.SucursalScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  direccion: 'direccion'
};

exports.Prisma.TipocuentaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.TipolistaprecioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.TipotransaccionScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.TipoventaScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.TransaccionfinancieraScalarFieldEnum = {
  id: 'id',
  cuenta_id: 'cuenta_id',
  fecha: 'fecha',
  tipo_id: 'tipo_id',
  monto: 'monto',
  descripcion: 'descripcion'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  correo: 'correo',
  contrasena: 'contrasena',
  rol_id: 'rol_id'
};

exports.Prisma.VentaScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  fecha: 'fecha',
  estado_id: 'estado_id',
  total: 'total'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  codigobarra: 'codigobarra',
  compra: 'compra',
  cuentafinanciera: 'cuentafinanciera',
  detallecompra: 'detallecompra',
  detalleordencompra: 'detalleordencompra',
  detalleventa: 'detalleventa',
  estadoordencompra: 'estadoordencompra',
  estadoproduccion: 'estadoproduccion',
  estadoventa: 'estadoventa',
  insumoproduccion: 'insumoproduccion',
  listaprecio: 'listaprecio',
  lote: 'lote',
  ordencompra: 'ordencompra',
  ordencompracompra: 'ordencompracompra',
  ordenproduccion: 'ordenproduccion',
  permiso: 'permiso',
  producto: 'producto',
  productocombo: 'productocombo',
  productoterminado: 'productoterminado',
  proveedor: 'proveedor',
  rol: 'rol',
  screen: 'screen',
  sucursal: 'sucursal',
  tipocuenta: 'tipocuenta',
  tipolistaprecio: 'tipolistaprecio',
  tipotransaccion: 'tipotransaccion',
  tipoventa: 'tipoventa',
  transaccionfinanciera: 'transaccionfinanciera',
  usuario: 'usuario',
  venta: 'venta'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
