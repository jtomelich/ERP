
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model codigobarra
 * 
 */
export type codigobarra = $Result.DefaultSelection<Prisma.$codigobarraPayload>
/**
 * Model compra
 * 
 */
export type compra = $Result.DefaultSelection<Prisma.$compraPayload>
/**
 * Model cuentafinanciera
 * 
 */
export type cuentafinanciera = $Result.DefaultSelection<Prisma.$cuentafinancieraPayload>
/**
 * Model detallecompra
 * 
 */
export type detallecompra = $Result.DefaultSelection<Prisma.$detallecompraPayload>
/**
 * Model detalleordencompra
 * 
 */
export type detalleordencompra = $Result.DefaultSelection<Prisma.$detalleordencompraPayload>
/**
 * Model detalleventa
 * 
 */
export type detalleventa = $Result.DefaultSelection<Prisma.$detalleventaPayload>
/**
 * Model estadoordencompra
 * 
 */
export type estadoordencompra = $Result.DefaultSelection<Prisma.$estadoordencompraPayload>
/**
 * Model estadoproduccion
 * 
 */
export type estadoproduccion = $Result.DefaultSelection<Prisma.$estadoproduccionPayload>
/**
 * Model estadoventa
 * 
 */
export type estadoventa = $Result.DefaultSelection<Prisma.$estadoventaPayload>
/**
 * Model insumoproduccion
 * 
 */
export type insumoproduccion = $Result.DefaultSelection<Prisma.$insumoproduccionPayload>
/**
 * Model listaprecio
 * 
 */
export type listaprecio = $Result.DefaultSelection<Prisma.$listaprecioPayload>
/**
 * Model lote
 * 
 */
export type lote = $Result.DefaultSelection<Prisma.$lotePayload>
/**
 * Model ordencompra
 * 
 */
export type ordencompra = $Result.DefaultSelection<Prisma.$ordencompraPayload>
/**
 * Model ordencompracompra
 * 
 */
export type ordencompracompra = $Result.DefaultSelection<Prisma.$ordencompracompraPayload>
/**
 * Model ordenproduccion
 * 
 */
export type ordenproduccion = $Result.DefaultSelection<Prisma.$ordenproduccionPayload>
/**
 * Model permiso
 * 
 */
export type permiso = $Result.DefaultSelection<Prisma.$permisoPayload>
/**
 * Model producto
 * 
 */
export type producto = $Result.DefaultSelection<Prisma.$productoPayload>
/**
 * Model productocombo
 * 
 */
export type productocombo = $Result.DefaultSelection<Prisma.$productocomboPayload>
/**
 * Model productoterminado
 * 
 */
export type productoterminado = $Result.DefaultSelection<Prisma.$productoterminadoPayload>
/**
 * Model proveedor
 * 
 */
export type proveedor = $Result.DefaultSelection<Prisma.$proveedorPayload>
/**
 * Model rol
 * 
 */
export type rol = $Result.DefaultSelection<Prisma.$rolPayload>
/**
 * Model screen
 * 
 */
export type screen = $Result.DefaultSelection<Prisma.$screenPayload>
/**
 * Model sucursal
 * 
 */
export type sucursal = $Result.DefaultSelection<Prisma.$sucursalPayload>
/**
 * Model tipocuenta
 * 
 */
export type tipocuenta = $Result.DefaultSelection<Prisma.$tipocuentaPayload>
/**
 * Model tipolistaprecio
 * 
 */
export type tipolistaprecio = $Result.DefaultSelection<Prisma.$tipolistaprecioPayload>
/**
 * Model tipotransaccion
 * 
 */
export type tipotransaccion = $Result.DefaultSelection<Prisma.$tipotransaccionPayload>
/**
 * Model tipoventa
 * 
 */
export type tipoventa = $Result.DefaultSelection<Prisma.$tipoventaPayload>
/**
 * Model transaccionfinanciera
 * 
 */
export type transaccionfinanciera = $Result.DefaultSelection<Prisma.$transaccionfinancieraPayload>
/**
 * Model usuario
 * 
 */
export type usuario = $Result.DefaultSelection<Prisma.$usuarioPayload>
/**
 * Model venta
 * 
 */
export type venta = $Result.DefaultSelection<Prisma.$ventaPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Codigobarras
 * const codigobarras = await prisma.codigobarra.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Codigobarras
   * const codigobarras = await prisma.codigobarra.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.codigobarra`: Exposes CRUD operations for the **codigobarra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Codigobarras
    * const codigobarras = await prisma.codigobarra.findMany()
    * ```
    */
  get codigobarra(): Prisma.codigobarraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.compra`: Exposes CRUD operations for the **compra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Compras
    * const compras = await prisma.compra.findMany()
    * ```
    */
  get compra(): Prisma.compraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cuentafinanciera`: Exposes CRUD operations for the **cuentafinanciera** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cuentafinancieras
    * const cuentafinancieras = await prisma.cuentafinanciera.findMany()
    * ```
    */
  get cuentafinanciera(): Prisma.cuentafinancieraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.detallecompra`: Exposes CRUD operations for the **detallecompra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Detallecompras
    * const detallecompras = await prisma.detallecompra.findMany()
    * ```
    */
  get detallecompra(): Prisma.detallecompraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.detalleordencompra`: Exposes CRUD operations for the **detalleordencompra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Detalleordencompras
    * const detalleordencompras = await prisma.detalleordencompra.findMany()
    * ```
    */
  get detalleordencompra(): Prisma.detalleordencompraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.detalleventa`: Exposes CRUD operations for the **detalleventa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Detalleventas
    * const detalleventas = await prisma.detalleventa.findMany()
    * ```
    */
  get detalleventa(): Prisma.detalleventaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estadoordencompra`: Exposes CRUD operations for the **estadoordencompra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estadoordencompras
    * const estadoordencompras = await prisma.estadoordencompra.findMany()
    * ```
    */
  get estadoordencompra(): Prisma.estadoordencompraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estadoproduccion`: Exposes CRUD operations for the **estadoproduccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estadoproduccions
    * const estadoproduccions = await prisma.estadoproduccion.findMany()
    * ```
    */
  get estadoproduccion(): Prisma.estadoproduccionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estadoventa`: Exposes CRUD operations for the **estadoventa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estadoventas
    * const estadoventas = await prisma.estadoventa.findMany()
    * ```
    */
  get estadoventa(): Prisma.estadoventaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.insumoproduccion`: Exposes CRUD operations for the **insumoproduccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Insumoproduccions
    * const insumoproduccions = await prisma.insumoproduccion.findMany()
    * ```
    */
  get insumoproduccion(): Prisma.insumoproduccionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listaprecio`: Exposes CRUD operations for the **listaprecio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Listaprecios
    * const listaprecios = await prisma.listaprecio.findMany()
    * ```
    */
  get listaprecio(): Prisma.listaprecioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.lote`: Exposes CRUD operations for the **lote** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Lotes
    * const lotes = await prisma.lote.findMany()
    * ```
    */
  get lote(): Prisma.loteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ordencompra`: Exposes CRUD operations for the **ordencompra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ordencompras
    * const ordencompras = await prisma.ordencompra.findMany()
    * ```
    */
  get ordencompra(): Prisma.ordencompraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ordencompracompra`: Exposes CRUD operations for the **ordencompracompra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ordencompracompras
    * const ordencompracompras = await prisma.ordencompracompra.findMany()
    * ```
    */
  get ordencompracompra(): Prisma.ordencompracompraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ordenproduccion`: Exposes CRUD operations for the **ordenproduccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ordenproduccions
    * const ordenproduccions = await prisma.ordenproduccion.findMany()
    * ```
    */
  get ordenproduccion(): Prisma.ordenproduccionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permiso`: Exposes CRUD operations for the **permiso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permisos
    * const permisos = await prisma.permiso.findMany()
    * ```
    */
  get permiso(): Prisma.permisoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.producto`: Exposes CRUD operations for the **producto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productos
    * const productos = await prisma.producto.findMany()
    * ```
    */
  get producto(): Prisma.productoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productocombo`: Exposes CRUD operations for the **productocombo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productocombos
    * const productocombos = await prisma.productocombo.findMany()
    * ```
    */
  get productocombo(): Prisma.productocomboDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productoterminado`: Exposes CRUD operations for the **productoterminado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productoterminados
    * const productoterminados = await prisma.productoterminado.findMany()
    * ```
    */
  get productoterminado(): Prisma.productoterminadoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.proveedor`: Exposes CRUD operations for the **proveedor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proveedors
    * const proveedors = await prisma.proveedor.findMany()
    * ```
    */
  get proveedor(): Prisma.proveedorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rol`: Exposes CRUD operations for the **rol** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Rols
    * const rols = await prisma.rol.findMany()
    * ```
    */
  get rol(): Prisma.rolDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.screen`: Exposes CRUD operations for the **screen** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Screens
    * const screens = await prisma.screen.findMany()
    * ```
    */
  get screen(): Prisma.screenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sucursal`: Exposes CRUD operations for the **sucursal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sucursals
    * const sucursals = await prisma.sucursal.findMany()
    * ```
    */
  get sucursal(): Prisma.sucursalDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipocuenta`: Exposes CRUD operations for the **tipocuenta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipocuentas
    * const tipocuentas = await prisma.tipocuenta.findMany()
    * ```
    */
  get tipocuenta(): Prisma.tipocuentaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipolistaprecio`: Exposes CRUD operations for the **tipolistaprecio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipolistaprecios
    * const tipolistaprecios = await prisma.tipolistaprecio.findMany()
    * ```
    */
  get tipolistaprecio(): Prisma.tipolistaprecioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipotransaccion`: Exposes CRUD operations for the **tipotransaccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipotransaccions
    * const tipotransaccions = await prisma.tipotransaccion.findMany()
    * ```
    */
  get tipotransaccion(): Prisma.tipotransaccionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipoventa`: Exposes CRUD operations for the **tipoventa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipoventas
    * const tipoventas = await prisma.tipoventa.findMany()
    * ```
    */
  get tipoventa(): Prisma.tipoventaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transaccionfinanciera`: Exposes CRUD operations for the **transaccionfinanciera** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transaccionfinancieras
    * const transaccionfinancieras = await prisma.transaccionfinanciera.findMany()
    * ```
    */
  get transaccionfinanciera(): Prisma.transaccionfinancieraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuario`: Exposes CRUD operations for the **usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.usuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.venta`: Exposes CRUD operations for the **venta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ventas
    * const ventas = await prisma.venta.findMany()
    * ```
    */
  get venta(): Prisma.ventaDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.18.0
   * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import Bytes = runtime.Bytes
  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    codigobarra: 'codigobarra',
    compra: 'compra',
    cuentafinanciera: 'cuentafinanciera',
    detallecompra: 'detallecompra',
    detalleordencompra: 'detalleordencompra',
    detalleventa: 'detalleventa',
    estadoordencompra: 'estadoordencompra',
    estadoproduccion: 'estadoproduccion',
    estadoventa: 'estadoventa',
    insumoproduccion: 'insumoproduccion',
    listaprecio: 'listaprecio',
    lote: 'lote',
    ordencompra: 'ordencompra',
    ordencompracompra: 'ordencompracompra',
    ordenproduccion: 'ordenproduccion',
    permiso: 'permiso',
    producto: 'producto',
    productocombo: 'productocombo',
    productoterminado: 'productoterminado',
    proveedor: 'proveedor',
    rol: 'rol',
    screen: 'screen',
    sucursal: 'sucursal',
    tipocuenta: 'tipocuenta',
    tipolistaprecio: 'tipolistaprecio',
    tipotransaccion: 'tipotransaccion',
    tipoventa: 'tipoventa',
    transaccionfinanciera: 'transaccionfinanciera',
    usuario: 'usuario',
    venta: 'venta'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "codigobarra" | "compra" | "cuentafinanciera" | "detallecompra" | "detalleordencompra" | "detalleventa" | "estadoordencompra" | "estadoproduccion" | "estadoventa" | "insumoproduccion" | "listaprecio" | "lote" | "ordencompra" | "ordencompracompra" | "ordenproduccion" | "permiso" | "producto" | "productocombo" | "productoterminado" | "proveedor" | "rol" | "screen" | "sucursal" | "tipocuenta" | "tipolistaprecio" | "tipotransaccion" | "tipoventa" | "transaccionfinanciera" | "usuario" | "venta"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      codigobarra: {
        payload: Prisma.$codigobarraPayload<ExtArgs>
        fields: Prisma.codigobarraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.codigobarraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$codigobarraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.codigobarraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$codigobarraPayload>
          }
          findFirst: {
            args: Prisma.codigobarraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$codigobarraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.codigobarraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$codigobarraPayload>
          }
          findMany: {
            args: Prisma.codigobarraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$codigobarraPayload>[]
          }
          create: {
            args: Prisma.codigobarraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$codigobarraPayload>
          }
          createMany: {
            args: Prisma.codigobarraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.codigobarraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$codigobarraPayload>[]
          }
          delete: {
            args: Prisma.codigobarraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$codigobarraPayload>
          }
          update: {
            args: Prisma.codigobarraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$codigobarraPayload>
          }
          deleteMany: {
            args: Prisma.codigobarraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.codigobarraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.codigobarraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$codigobarraPayload>[]
          }
          upsert: {
            args: Prisma.codigobarraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$codigobarraPayload>
          }
          aggregate: {
            args: Prisma.CodigobarraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCodigobarra>
          }
          groupBy: {
            args: Prisma.codigobarraGroupByArgs<ExtArgs>
            result: $Utils.Optional<CodigobarraGroupByOutputType>[]
          }
          count: {
            args: Prisma.codigobarraCountArgs<ExtArgs>
            result: $Utils.Optional<CodigobarraCountAggregateOutputType> | number
          }
        }
      }
      compra: {
        payload: Prisma.$compraPayload<ExtArgs>
        fields: Prisma.compraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.compraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.compraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>
          }
          findFirst: {
            args: Prisma.compraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.compraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>
          }
          findMany: {
            args: Prisma.compraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>[]
          }
          create: {
            args: Prisma.compraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>
          }
          createMany: {
            args: Prisma.compraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.compraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>[]
          }
          delete: {
            args: Prisma.compraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>
          }
          update: {
            args: Prisma.compraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>
          }
          deleteMany: {
            args: Prisma.compraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.compraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.compraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>[]
          }
          upsert: {
            args: Prisma.compraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$compraPayload>
          }
          aggregate: {
            args: Prisma.CompraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompra>
          }
          groupBy: {
            args: Prisma.compraGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompraGroupByOutputType>[]
          }
          count: {
            args: Prisma.compraCountArgs<ExtArgs>
            result: $Utils.Optional<CompraCountAggregateOutputType> | number
          }
        }
      }
      cuentafinanciera: {
        payload: Prisma.$cuentafinancieraPayload<ExtArgs>
        fields: Prisma.cuentafinancieraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cuentafinancieraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cuentafinancieraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cuentafinancieraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cuentafinancieraPayload>
          }
          findFirst: {
            args: Prisma.cuentafinancieraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cuentafinancieraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cuentafinancieraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cuentafinancieraPayload>
          }
          findMany: {
            args: Prisma.cuentafinancieraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cuentafinancieraPayload>[]
          }
          create: {
            args: Prisma.cuentafinancieraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cuentafinancieraPayload>
          }
          createMany: {
            args: Prisma.cuentafinancieraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cuentafinancieraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cuentafinancieraPayload>[]
          }
          delete: {
            args: Prisma.cuentafinancieraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cuentafinancieraPayload>
          }
          update: {
            args: Prisma.cuentafinancieraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cuentafinancieraPayload>
          }
          deleteMany: {
            args: Prisma.cuentafinancieraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cuentafinancieraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cuentafinancieraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cuentafinancieraPayload>[]
          }
          upsert: {
            args: Prisma.cuentafinancieraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cuentafinancieraPayload>
          }
          aggregate: {
            args: Prisma.CuentafinancieraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCuentafinanciera>
          }
          groupBy: {
            args: Prisma.cuentafinancieraGroupByArgs<ExtArgs>
            result: $Utils.Optional<CuentafinancieraGroupByOutputType>[]
          }
          count: {
            args: Prisma.cuentafinancieraCountArgs<ExtArgs>
            result: $Utils.Optional<CuentafinancieraCountAggregateOutputType> | number
          }
        }
      }
      detallecompra: {
        payload: Prisma.$detallecompraPayload<ExtArgs>
        fields: Prisma.detallecompraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.detallecompraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detallecompraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.detallecompraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detallecompraPayload>
          }
          findFirst: {
            args: Prisma.detallecompraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detallecompraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.detallecompraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detallecompraPayload>
          }
          findMany: {
            args: Prisma.detallecompraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detallecompraPayload>[]
          }
          create: {
            args: Prisma.detallecompraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detallecompraPayload>
          }
          createMany: {
            args: Prisma.detallecompraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.detallecompraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detallecompraPayload>[]
          }
          delete: {
            args: Prisma.detallecompraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detallecompraPayload>
          }
          update: {
            args: Prisma.detallecompraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detallecompraPayload>
          }
          deleteMany: {
            args: Prisma.detallecompraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.detallecompraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.detallecompraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detallecompraPayload>[]
          }
          upsert: {
            args: Prisma.detallecompraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detallecompraPayload>
          }
          aggregate: {
            args: Prisma.DetallecompraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetallecompra>
          }
          groupBy: {
            args: Prisma.detallecompraGroupByArgs<ExtArgs>
            result: $Utils.Optional<DetallecompraGroupByOutputType>[]
          }
          count: {
            args: Prisma.detallecompraCountArgs<ExtArgs>
            result: $Utils.Optional<DetallecompraCountAggregateOutputType> | number
          }
        }
      }
      detalleordencompra: {
        payload: Prisma.$detalleordencompraPayload<ExtArgs>
        fields: Prisma.detalleordencompraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.detalleordencompraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleordencompraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.detalleordencompraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleordencompraPayload>
          }
          findFirst: {
            args: Prisma.detalleordencompraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleordencompraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.detalleordencompraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleordencompraPayload>
          }
          findMany: {
            args: Prisma.detalleordencompraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleordencompraPayload>[]
          }
          create: {
            args: Prisma.detalleordencompraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleordencompraPayload>
          }
          createMany: {
            args: Prisma.detalleordencompraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.detalleordencompraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleordencompraPayload>[]
          }
          delete: {
            args: Prisma.detalleordencompraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleordencompraPayload>
          }
          update: {
            args: Prisma.detalleordencompraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleordencompraPayload>
          }
          deleteMany: {
            args: Prisma.detalleordencompraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.detalleordencompraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.detalleordencompraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleordencompraPayload>[]
          }
          upsert: {
            args: Prisma.detalleordencompraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleordencompraPayload>
          }
          aggregate: {
            args: Prisma.DetalleordencompraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalleordencompra>
          }
          groupBy: {
            args: Prisma.detalleordencompraGroupByArgs<ExtArgs>
            result: $Utils.Optional<DetalleordencompraGroupByOutputType>[]
          }
          count: {
            args: Prisma.detalleordencompraCountArgs<ExtArgs>
            result: $Utils.Optional<DetalleordencompraCountAggregateOutputType> | number
          }
        }
      }
      detalleventa: {
        payload: Prisma.$detalleventaPayload<ExtArgs>
        fields: Prisma.detalleventaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.detalleventaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleventaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.detalleventaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleventaPayload>
          }
          findFirst: {
            args: Prisma.detalleventaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleventaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.detalleventaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleventaPayload>
          }
          findMany: {
            args: Prisma.detalleventaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleventaPayload>[]
          }
          create: {
            args: Prisma.detalleventaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleventaPayload>
          }
          createMany: {
            args: Prisma.detalleventaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.detalleventaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleventaPayload>[]
          }
          delete: {
            args: Prisma.detalleventaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleventaPayload>
          }
          update: {
            args: Prisma.detalleventaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleventaPayload>
          }
          deleteMany: {
            args: Prisma.detalleventaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.detalleventaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.detalleventaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleventaPayload>[]
          }
          upsert: {
            args: Prisma.detalleventaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalleventaPayload>
          }
          aggregate: {
            args: Prisma.DetalleventaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalleventa>
          }
          groupBy: {
            args: Prisma.detalleventaGroupByArgs<ExtArgs>
            result: $Utils.Optional<DetalleventaGroupByOutputType>[]
          }
          count: {
            args: Prisma.detalleventaCountArgs<ExtArgs>
            result: $Utils.Optional<DetalleventaCountAggregateOutputType> | number
          }
        }
      }
      estadoordencompra: {
        payload: Prisma.$estadoordencompraPayload<ExtArgs>
        fields: Prisma.estadoordencompraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.estadoordencompraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoordencompraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.estadoordencompraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoordencompraPayload>
          }
          findFirst: {
            args: Prisma.estadoordencompraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoordencompraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.estadoordencompraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoordencompraPayload>
          }
          findMany: {
            args: Prisma.estadoordencompraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoordencompraPayload>[]
          }
          create: {
            args: Prisma.estadoordencompraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoordencompraPayload>
          }
          createMany: {
            args: Prisma.estadoordencompraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.estadoordencompraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoordencompraPayload>[]
          }
          delete: {
            args: Prisma.estadoordencompraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoordencompraPayload>
          }
          update: {
            args: Prisma.estadoordencompraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoordencompraPayload>
          }
          deleteMany: {
            args: Prisma.estadoordencompraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.estadoordencompraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.estadoordencompraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoordencompraPayload>[]
          }
          upsert: {
            args: Prisma.estadoordencompraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoordencompraPayload>
          }
          aggregate: {
            args: Prisma.EstadoordencompraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstadoordencompra>
          }
          groupBy: {
            args: Prisma.estadoordencompraGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstadoordencompraGroupByOutputType>[]
          }
          count: {
            args: Prisma.estadoordencompraCountArgs<ExtArgs>
            result: $Utils.Optional<EstadoordencompraCountAggregateOutputType> | number
          }
        }
      }
      estadoproduccion: {
        payload: Prisma.$estadoproduccionPayload<ExtArgs>
        fields: Prisma.estadoproduccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.estadoproduccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoproduccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.estadoproduccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoproduccionPayload>
          }
          findFirst: {
            args: Prisma.estadoproduccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoproduccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.estadoproduccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoproduccionPayload>
          }
          findMany: {
            args: Prisma.estadoproduccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoproduccionPayload>[]
          }
          create: {
            args: Prisma.estadoproduccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoproduccionPayload>
          }
          createMany: {
            args: Prisma.estadoproduccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.estadoproduccionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoproduccionPayload>[]
          }
          delete: {
            args: Prisma.estadoproduccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoproduccionPayload>
          }
          update: {
            args: Prisma.estadoproduccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoproduccionPayload>
          }
          deleteMany: {
            args: Prisma.estadoproduccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.estadoproduccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.estadoproduccionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoproduccionPayload>[]
          }
          upsert: {
            args: Prisma.estadoproduccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoproduccionPayload>
          }
          aggregate: {
            args: Prisma.EstadoproduccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstadoproduccion>
          }
          groupBy: {
            args: Prisma.estadoproduccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstadoproduccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.estadoproduccionCountArgs<ExtArgs>
            result: $Utils.Optional<EstadoproduccionCountAggregateOutputType> | number
          }
        }
      }
      estadoventa: {
        payload: Prisma.$estadoventaPayload<ExtArgs>
        fields: Prisma.estadoventaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.estadoventaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoventaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.estadoventaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoventaPayload>
          }
          findFirst: {
            args: Prisma.estadoventaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoventaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.estadoventaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoventaPayload>
          }
          findMany: {
            args: Prisma.estadoventaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoventaPayload>[]
          }
          create: {
            args: Prisma.estadoventaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoventaPayload>
          }
          createMany: {
            args: Prisma.estadoventaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.estadoventaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoventaPayload>[]
          }
          delete: {
            args: Prisma.estadoventaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoventaPayload>
          }
          update: {
            args: Prisma.estadoventaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoventaPayload>
          }
          deleteMany: {
            args: Prisma.estadoventaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.estadoventaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.estadoventaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoventaPayload>[]
          }
          upsert: {
            args: Prisma.estadoventaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$estadoventaPayload>
          }
          aggregate: {
            args: Prisma.EstadoventaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstadoventa>
          }
          groupBy: {
            args: Prisma.estadoventaGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstadoventaGroupByOutputType>[]
          }
          count: {
            args: Prisma.estadoventaCountArgs<ExtArgs>
            result: $Utils.Optional<EstadoventaCountAggregateOutputType> | number
          }
        }
      }
      insumoproduccion: {
        payload: Prisma.$insumoproduccionPayload<ExtArgs>
        fields: Prisma.insumoproduccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.insumoproduccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumoproduccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.insumoproduccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumoproduccionPayload>
          }
          findFirst: {
            args: Prisma.insumoproduccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumoproduccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.insumoproduccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumoproduccionPayload>
          }
          findMany: {
            args: Prisma.insumoproduccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumoproduccionPayload>[]
          }
          create: {
            args: Prisma.insumoproduccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumoproduccionPayload>
          }
          createMany: {
            args: Prisma.insumoproduccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.insumoproduccionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumoproduccionPayload>[]
          }
          delete: {
            args: Prisma.insumoproduccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumoproduccionPayload>
          }
          update: {
            args: Prisma.insumoproduccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumoproduccionPayload>
          }
          deleteMany: {
            args: Prisma.insumoproduccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.insumoproduccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.insumoproduccionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumoproduccionPayload>[]
          }
          upsert: {
            args: Prisma.insumoproduccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumoproduccionPayload>
          }
          aggregate: {
            args: Prisma.InsumoproduccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInsumoproduccion>
          }
          groupBy: {
            args: Prisma.insumoproduccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<InsumoproduccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.insumoproduccionCountArgs<ExtArgs>
            result: $Utils.Optional<InsumoproduccionCountAggregateOutputType> | number
          }
        }
      }
      listaprecio: {
        payload: Prisma.$listaprecioPayload<ExtArgs>
        fields: Prisma.listaprecioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.listaprecioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$listaprecioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.listaprecioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$listaprecioPayload>
          }
          findFirst: {
            args: Prisma.listaprecioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$listaprecioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.listaprecioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$listaprecioPayload>
          }
          findMany: {
            args: Prisma.listaprecioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$listaprecioPayload>[]
          }
          create: {
            args: Prisma.listaprecioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$listaprecioPayload>
          }
          createMany: {
            args: Prisma.listaprecioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.listaprecioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$listaprecioPayload>[]
          }
          delete: {
            args: Prisma.listaprecioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$listaprecioPayload>
          }
          update: {
            args: Prisma.listaprecioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$listaprecioPayload>
          }
          deleteMany: {
            args: Prisma.listaprecioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.listaprecioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.listaprecioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$listaprecioPayload>[]
          }
          upsert: {
            args: Prisma.listaprecioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$listaprecioPayload>
          }
          aggregate: {
            args: Prisma.ListaprecioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListaprecio>
          }
          groupBy: {
            args: Prisma.listaprecioGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListaprecioGroupByOutputType>[]
          }
          count: {
            args: Prisma.listaprecioCountArgs<ExtArgs>
            result: $Utils.Optional<ListaprecioCountAggregateOutputType> | number
          }
        }
      }
      lote: {
        payload: Prisma.$lotePayload<ExtArgs>
        fields: Prisma.loteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.loteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.loteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotePayload>
          }
          findFirst: {
            args: Prisma.loteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.loteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotePayload>
          }
          findMany: {
            args: Prisma.loteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotePayload>[]
          }
          create: {
            args: Prisma.loteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotePayload>
          }
          createMany: {
            args: Prisma.loteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.loteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotePayload>[]
          }
          delete: {
            args: Prisma.loteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotePayload>
          }
          update: {
            args: Prisma.loteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotePayload>
          }
          deleteMany: {
            args: Prisma.loteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.loteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.loteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotePayload>[]
          }
          upsert: {
            args: Prisma.loteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotePayload>
          }
          aggregate: {
            args: Prisma.LoteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLote>
          }
          groupBy: {
            args: Prisma.loteGroupByArgs<ExtArgs>
            result: $Utils.Optional<LoteGroupByOutputType>[]
          }
          count: {
            args: Prisma.loteCountArgs<ExtArgs>
            result: $Utils.Optional<LoteCountAggregateOutputType> | number
          }
        }
      }
      ordencompra: {
        payload: Prisma.$ordencompraPayload<ExtArgs>
        fields: Prisma.ordencompraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ordencompraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ordencompraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompraPayload>
          }
          findFirst: {
            args: Prisma.ordencompraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ordencompraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompraPayload>
          }
          findMany: {
            args: Prisma.ordencompraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompraPayload>[]
          }
          create: {
            args: Prisma.ordencompraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompraPayload>
          }
          createMany: {
            args: Prisma.ordencompraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ordencompraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompraPayload>[]
          }
          delete: {
            args: Prisma.ordencompraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompraPayload>
          }
          update: {
            args: Prisma.ordencompraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompraPayload>
          }
          deleteMany: {
            args: Prisma.ordencompraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ordencompraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ordencompraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompraPayload>[]
          }
          upsert: {
            args: Prisma.ordencompraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompraPayload>
          }
          aggregate: {
            args: Prisma.OrdencompraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrdencompra>
          }
          groupBy: {
            args: Prisma.ordencompraGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrdencompraGroupByOutputType>[]
          }
          count: {
            args: Prisma.ordencompraCountArgs<ExtArgs>
            result: $Utils.Optional<OrdencompraCountAggregateOutputType> | number
          }
        }
      }
      ordencompracompra: {
        payload: Prisma.$ordencompracompraPayload<ExtArgs>
        fields: Prisma.ordencompracompraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ordencompracompraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompracompraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ordencompracompraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompracompraPayload>
          }
          findFirst: {
            args: Prisma.ordencompracompraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompracompraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ordencompracompraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompracompraPayload>
          }
          findMany: {
            args: Prisma.ordencompracompraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompracompraPayload>[]
          }
          create: {
            args: Prisma.ordencompracompraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompracompraPayload>
          }
          createMany: {
            args: Prisma.ordencompracompraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ordencompracompraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompracompraPayload>[]
          }
          delete: {
            args: Prisma.ordencompracompraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompracompraPayload>
          }
          update: {
            args: Prisma.ordencompracompraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompracompraPayload>
          }
          deleteMany: {
            args: Prisma.ordencompracompraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ordencompracompraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ordencompracompraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompracompraPayload>[]
          }
          upsert: {
            args: Prisma.ordencompracompraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordencompracompraPayload>
          }
          aggregate: {
            args: Prisma.OrdencompracompraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrdencompracompra>
          }
          groupBy: {
            args: Prisma.ordencompracompraGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrdencompracompraGroupByOutputType>[]
          }
          count: {
            args: Prisma.ordencompracompraCountArgs<ExtArgs>
            result: $Utils.Optional<OrdencompracompraCountAggregateOutputType> | number
          }
        }
      }
      ordenproduccion: {
        payload: Prisma.$ordenproduccionPayload<ExtArgs>
        fields: Prisma.ordenproduccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ordenproduccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordenproduccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ordenproduccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordenproduccionPayload>
          }
          findFirst: {
            args: Prisma.ordenproduccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordenproduccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ordenproduccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordenproduccionPayload>
          }
          findMany: {
            args: Prisma.ordenproduccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordenproduccionPayload>[]
          }
          create: {
            args: Prisma.ordenproduccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordenproduccionPayload>
          }
          createMany: {
            args: Prisma.ordenproduccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ordenproduccionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordenproduccionPayload>[]
          }
          delete: {
            args: Prisma.ordenproduccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordenproduccionPayload>
          }
          update: {
            args: Prisma.ordenproduccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordenproduccionPayload>
          }
          deleteMany: {
            args: Prisma.ordenproduccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ordenproduccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ordenproduccionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordenproduccionPayload>[]
          }
          upsert: {
            args: Prisma.ordenproduccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordenproduccionPayload>
          }
          aggregate: {
            args: Prisma.OrdenproduccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrdenproduccion>
          }
          groupBy: {
            args: Prisma.ordenproduccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrdenproduccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ordenproduccionCountArgs<ExtArgs>
            result: $Utils.Optional<OrdenproduccionCountAggregateOutputType> | number
          }
        }
      }
      permiso: {
        payload: Prisma.$permisoPayload<ExtArgs>
        fields: Prisma.permisoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.permisoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permisoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.permisoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permisoPayload>
          }
          findFirst: {
            args: Prisma.permisoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permisoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.permisoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permisoPayload>
          }
          findMany: {
            args: Prisma.permisoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permisoPayload>[]
          }
          create: {
            args: Prisma.permisoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permisoPayload>
          }
          createMany: {
            args: Prisma.permisoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.permisoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permisoPayload>[]
          }
          delete: {
            args: Prisma.permisoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permisoPayload>
          }
          update: {
            args: Prisma.permisoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permisoPayload>
          }
          deleteMany: {
            args: Prisma.permisoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.permisoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.permisoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permisoPayload>[]
          }
          upsert: {
            args: Prisma.permisoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permisoPayload>
          }
          aggregate: {
            args: Prisma.PermisoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermiso>
          }
          groupBy: {
            args: Prisma.permisoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermisoGroupByOutputType>[]
          }
          count: {
            args: Prisma.permisoCountArgs<ExtArgs>
            result: $Utils.Optional<PermisoCountAggregateOutputType> | number
          }
        }
      }
      producto: {
        payload: Prisma.$productoPayload<ExtArgs>
        fields: Prisma.productoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.productoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.productoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoPayload>
          }
          findFirst: {
            args: Prisma.productoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.productoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoPayload>
          }
          findMany: {
            args: Prisma.productoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoPayload>[]
          }
          create: {
            args: Prisma.productoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoPayload>
          }
          createMany: {
            args: Prisma.productoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.productoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoPayload>[]
          }
          delete: {
            args: Prisma.productoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoPayload>
          }
          update: {
            args: Prisma.productoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoPayload>
          }
          deleteMany: {
            args: Prisma.productoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.productoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.productoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoPayload>[]
          }
          upsert: {
            args: Prisma.productoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoPayload>
          }
          aggregate: {
            args: Prisma.ProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducto>
          }
          groupBy: {
            args: Prisma.productoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.productoCountArgs<ExtArgs>
            result: $Utils.Optional<ProductoCountAggregateOutputType> | number
          }
        }
      }
      productocombo: {
        payload: Prisma.$productocomboPayload<ExtArgs>
        fields: Prisma.productocomboFieldRefs
        operations: {
          findUnique: {
            args: Prisma.productocomboFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productocomboPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.productocomboFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productocomboPayload>
          }
          findFirst: {
            args: Prisma.productocomboFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productocomboPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.productocomboFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productocomboPayload>
          }
          findMany: {
            args: Prisma.productocomboFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productocomboPayload>[]
          }
          create: {
            args: Prisma.productocomboCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productocomboPayload>
          }
          createMany: {
            args: Prisma.productocomboCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.productocomboCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productocomboPayload>[]
          }
          delete: {
            args: Prisma.productocomboDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productocomboPayload>
          }
          update: {
            args: Prisma.productocomboUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productocomboPayload>
          }
          deleteMany: {
            args: Prisma.productocomboDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.productocomboUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.productocomboUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productocomboPayload>[]
          }
          upsert: {
            args: Prisma.productocomboUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productocomboPayload>
          }
          aggregate: {
            args: Prisma.ProductocomboAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductocombo>
          }
          groupBy: {
            args: Prisma.productocomboGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductocomboGroupByOutputType>[]
          }
          count: {
            args: Prisma.productocomboCountArgs<ExtArgs>
            result: $Utils.Optional<ProductocomboCountAggregateOutputType> | number
          }
        }
      }
      productoterminado: {
        payload: Prisma.$productoterminadoPayload<ExtArgs>
        fields: Prisma.productoterminadoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.productoterminadoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoterminadoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.productoterminadoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoterminadoPayload>
          }
          findFirst: {
            args: Prisma.productoterminadoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoterminadoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.productoterminadoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoterminadoPayload>
          }
          findMany: {
            args: Prisma.productoterminadoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoterminadoPayload>[]
          }
          create: {
            args: Prisma.productoterminadoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoterminadoPayload>
          }
          createMany: {
            args: Prisma.productoterminadoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.productoterminadoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoterminadoPayload>[]
          }
          delete: {
            args: Prisma.productoterminadoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoterminadoPayload>
          }
          update: {
            args: Prisma.productoterminadoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoterminadoPayload>
          }
          deleteMany: {
            args: Prisma.productoterminadoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.productoterminadoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.productoterminadoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoterminadoPayload>[]
          }
          upsert: {
            args: Prisma.productoterminadoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productoterminadoPayload>
          }
          aggregate: {
            args: Prisma.ProductoterminadoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductoterminado>
          }
          groupBy: {
            args: Prisma.productoterminadoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductoterminadoGroupByOutputType>[]
          }
          count: {
            args: Prisma.productoterminadoCountArgs<ExtArgs>
            result: $Utils.Optional<ProductoterminadoCountAggregateOutputType> | number
          }
        }
      }
      proveedor: {
        payload: Prisma.$proveedorPayload<ExtArgs>
        fields: Prisma.proveedorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.proveedorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.proveedorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedorPayload>
          }
          findFirst: {
            args: Prisma.proveedorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.proveedorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedorPayload>
          }
          findMany: {
            args: Prisma.proveedorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedorPayload>[]
          }
          create: {
            args: Prisma.proveedorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedorPayload>
          }
          createMany: {
            args: Prisma.proveedorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.proveedorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedorPayload>[]
          }
          delete: {
            args: Prisma.proveedorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedorPayload>
          }
          update: {
            args: Prisma.proveedorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedorPayload>
          }
          deleteMany: {
            args: Prisma.proveedorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.proveedorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.proveedorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedorPayload>[]
          }
          upsert: {
            args: Prisma.proveedorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedorPayload>
          }
          aggregate: {
            args: Prisma.ProveedorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProveedor>
          }
          groupBy: {
            args: Prisma.proveedorGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProveedorGroupByOutputType>[]
          }
          count: {
            args: Prisma.proveedorCountArgs<ExtArgs>
            result: $Utils.Optional<ProveedorCountAggregateOutputType> | number
          }
        }
      }
      rol: {
        payload: Prisma.$rolPayload<ExtArgs>
        fields: Prisma.rolFieldRefs
        operations: {
          findUnique: {
            args: Prisma.rolFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.rolFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolPayload>
          }
          findFirst: {
            args: Prisma.rolFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.rolFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolPayload>
          }
          findMany: {
            args: Prisma.rolFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolPayload>[]
          }
          create: {
            args: Prisma.rolCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolPayload>
          }
          createMany: {
            args: Prisma.rolCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.rolCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolPayload>[]
          }
          delete: {
            args: Prisma.rolDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolPayload>
          }
          update: {
            args: Prisma.rolUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolPayload>
          }
          deleteMany: {
            args: Prisma.rolDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.rolUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.rolUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolPayload>[]
          }
          upsert: {
            args: Prisma.rolUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolPayload>
          }
          aggregate: {
            args: Prisma.RolAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRol>
          }
          groupBy: {
            args: Prisma.rolGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolGroupByOutputType>[]
          }
          count: {
            args: Prisma.rolCountArgs<ExtArgs>
            result: $Utils.Optional<RolCountAggregateOutputType> | number
          }
        }
      }
      screen: {
        payload: Prisma.$screenPayload<ExtArgs>
        fields: Prisma.screenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.screenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$screenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.screenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$screenPayload>
          }
          findFirst: {
            args: Prisma.screenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$screenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.screenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$screenPayload>
          }
          findMany: {
            args: Prisma.screenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$screenPayload>[]
          }
          create: {
            args: Prisma.screenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$screenPayload>
          }
          createMany: {
            args: Prisma.screenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.screenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$screenPayload>[]
          }
          delete: {
            args: Prisma.screenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$screenPayload>
          }
          update: {
            args: Prisma.screenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$screenPayload>
          }
          deleteMany: {
            args: Prisma.screenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.screenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.screenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$screenPayload>[]
          }
          upsert: {
            args: Prisma.screenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$screenPayload>
          }
          aggregate: {
            args: Prisma.ScreenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateScreen>
          }
          groupBy: {
            args: Prisma.screenGroupByArgs<ExtArgs>
            result: $Utils.Optional<ScreenGroupByOutputType>[]
          }
          count: {
            args: Prisma.screenCountArgs<ExtArgs>
            result: $Utils.Optional<ScreenCountAggregateOutputType> | number
          }
        }
      }
      sucursal: {
        payload: Prisma.$sucursalPayload<ExtArgs>
        fields: Prisma.sucursalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sucursalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sucursalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sucursalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sucursalPayload>
          }
          findFirst: {
            args: Prisma.sucursalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sucursalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sucursalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sucursalPayload>
          }
          findMany: {
            args: Prisma.sucursalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sucursalPayload>[]
          }
          create: {
            args: Prisma.sucursalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sucursalPayload>
          }
          createMany: {
            args: Prisma.sucursalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sucursalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sucursalPayload>[]
          }
          delete: {
            args: Prisma.sucursalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sucursalPayload>
          }
          update: {
            args: Prisma.sucursalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sucursalPayload>
          }
          deleteMany: {
            args: Prisma.sucursalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sucursalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.sucursalUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sucursalPayload>[]
          }
          upsert: {
            args: Prisma.sucursalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sucursalPayload>
          }
          aggregate: {
            args: Prisma.SucursalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSucursal>
          }
          groupBy: {
            args: Prisma.sucursalGroupByArgs<ExtArgs>
            result: $Utils.Optional<SucursalGroupByOutputType>[]
          }
          count: {
            args: Prisma.sucursalCountArgs<ExtArgs>
            result: $Utils.Optional<SucursalCountAggregateOutputType> | number
          }
        }
      }
      tipocuenta: {
        payload: Prisma.$tipocuentaPayload<ExtArgs>
        fields: Prisma.tipocuentaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipocuentaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipocuentaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipocuentaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipocuentaPayload>
          }
          findFirst: {
            args: Prisma.tipocuentaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipocuentaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipocuentaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipocuentaPayload>
          }
          findMany: {
            args: Prisma.tipocuentaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipocuentaPayload>[]
          }
          create: {
            args: Prisma.tipocuentaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipocuentaPayload>
          }
          createMany: {
            args: Prisma.tipocuentaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tipocuentaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipocuentaPayload>[]
          }
          delete: {
            args: Prisma.tipocuentaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipocuentaPayload>
          }
          update: {
            args: Prisma.tipocuentaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipocuentaPayload>
          }
          deleteMany: {
            args: Prisma.tipocuentaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tipocuentaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tipocuentaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipocuentaPayload>[]
          }
          upsert: {
            args: Prisma.tipocuentaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipocuentaPayload>
          }
          aggregate: {
            args: Prisma.TipocuentaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipocuenta>
          }
          groupBy: {
            args: Prisma.tipocuentaGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipocuentaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipocuentaCountArgs<ExtArgs>
            result: $Utils.Optional<TipocuentaCountAggregateOutputType> | number
          }
        }
      }
      tipolistaprecio: {
        payload: Prisma.$tipolistaprecioPayload<ExtArgs>
        fields: Prisma.tipolistaprecioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipolistaprecioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipolistaprecioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipolistaprecioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipolistaprecioPayload>
          }
          findFirst: {
            args: Prisma.tipolistaprecioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipolistaprecioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipolistaprecioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipolistaprecioPayload>
          }
          findMany: {
            args: Prisma.tipolistaprecioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipolistaprecioPayload>[]
          }
          create: {
            args: Prisma.tipolistaprecioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipolistaprecioPayload>
          }
          createMany: {
            args: Prisma.tipolistaprecioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tipolistaprecioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipolistaprecioPayload>[]
          }
          delete: {
            args: Prisma.tipolistaprecioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipolistaprecioPayload>
          }
          update: {
            args: Prisma.tipolistaprecioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipolistaprecioPayload>
          }
          deleteMany: {
            args: Prisma.tipolistaprecioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tipolistaprecioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tipolistaprecioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipolistaprecioPayload>[]
          }
          upsert: {
            args: Prisma.tipolistaprecioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipolistaprecioPayload>
          }
          aggregate: {
            args: Prisma.TipolistaprecioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipolistaprecio>
          }
          groupBy: {
            args: Prisma.tipolistaprecioGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipolistaprecioGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipolistaprecioCountArgs<ExtArgs>
            result: $Utils.Optional<TipolistaprecioCountAggregateOutputType> | number
          }
        }
      }
      tipotransaccion: {
        payload: Prisma.$tipotransaccionPayload<ExtArgs>
        fields: Prisma.tipotransaccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipotransaccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipotransaccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipotransaccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipotransaccionPayload>
          }
          findFirst: {
            args: Prisma.tipotransaccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipotransaccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipotransaccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipotransaccionPayload>
          }
          findMany: {
            args: Prisma.tipotransaccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipotransaccionPayload>[]
          }
          create: {
            args: Prisma.tipotransaccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipotransaccionPayload>
          }
          createMany: {
            args: Prisma.tipotransaccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tipotransaccionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipotransaccionPayload>[]
          }
          delete: {
            args: Prisma.tipotransaccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipotransaccionPayload>
          }
          update: {
            args: Prisma.tipotransaccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipotransaccionPayload>
          }
          deleteMany: {
            args: Prisma.tipotransaccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tipotransaccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tipotransaccionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipotransaccionPayload>[]
          }
          upsert: {
            args: Prisma.tipotransaccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipotransaccionPayload>
          }
          aggregate: {
            args: Prisma.TipotransaccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipotransaccion>
          }
          groupBy: {
            args: Prisma.tipotransaccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipotransaccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipotransaccionCountArgs<ExtArgs>
            result: $Utils.Optional<TipotransaccionCountAggregateOutputType> | number
          }
        }
      }
      tipoventa: {
        payload: Prisma.$tipoventaPayload<ExtArgs>
        fields: Prisma.tipoventaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipoventaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoventaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipoventaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoventaPayload>
          }
          findFirst: {
            args: Prisma.tipoventaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoventaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipoventaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoventaPayload>
          }
          findMany: {
            args: Prisma.tipoventaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoventaPayload>[]
          }
          create: {
            args: Prisma.tipoventaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoventaPayload>
          }
          createMany: {
            args: Prisma.tipoventaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tipoventaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoventaPayload>[]
          }
          delete: {
            args: Prisma.tipoventaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoventaPayload>
          }
          update: {
            args: Prisma.tipoventaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoventaPayload>
          }
          deleteMany: {
            args: Prisma.tipoventaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tipoventaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tipoventaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoventaPayload>[]
          }
          upsert: {
            args: Prisma.tipoventaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipoventaPayload>
          }
          aggregate: {
            args: Prisma.TipoventaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipoventa>
          }
          groupBy: {
            args: Prisma.tipoventaGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipoventaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipoventaCountArgs<ExtArgs>
            result: $Utils.Optional<TipoventaCountAggregateOutputType> | number
          }
        }
      }
      transaccionfinanciera: {
        payload: Prisma.$transaccionfinancieraPayload<ExtArgs>
        fields: Prisma.transaccionfinancieraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.transaccionfinancieraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccionfinancieraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.transaccionfinancieraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccionfinancieraPayload>
          }
          findFirst: {
            args: Prisma.transaccionfinancieraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccionfinancieraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.transaccionfinancieraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccionfinancieraPayload>
          }
          findMany: {
            args: Prisma.transaccionfinancieraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccionfinancieraPayload>[]
          }
          create: {
            args: Prisma.transaccionfinancieraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccionfinancieraPayload>
          }
          createMany: {
            args: Prisma.transaccionfinancieraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.transaccionfinancieraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccionfinancieraPayload>[]
          }
          delete: {
            args: Prisma.transaccionfinancieraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccionfinancieraPayload>
          }
          update: {
            args: Prisma.transaccionfinancieraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccionfinancieraPayload>
          }
          deleteMany: {
            args: Prisma.transaccionfinancieraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.transaccionfinancieraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.transaccionfinancieraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccionfinancieraPayload>[]
          }
          upsert: {
            args: Prisma.transaccionfinancieraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaccionfinancieraPayload>
          }
          aggregate: {
            args: Prisma.TransaccionfinancieraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransaccionfinanciera>
          }
          groupBy: {
            args: Prisma.transaccionfinancieraGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransaccionfinancieraGroupByOutputType>[]
          }
          count: {
            args: Prisma.transaccionfinancieraCountArgs<ExtArgs>
            result: $Utils.Optional<TransaccionfinancieraCountAggregateOutputType> | number
          }
        }
      }
      usuario: {
        payload: Prisma.$usuarioPayload<ExtArgs>
        fields: Prisma.usuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          findFirst: {
            args: Prisma.usuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          findMany: {
            args: Prisma.usuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          create: {
            args: Prisma.usuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          createMany: {
            args: Prisma.usuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          delete: {
            args: Prisma.usuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          update: {
            args: Prisma.usuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          deleteMany: {
            args: Prisma.usuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          upsert: {
            args: Prisma.usuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.usuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      venta: {
        payload: Prisma.$ventaPayload<ExtArgs>
        fields: Prisma.ventaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ventaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ventaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventaPayload>
          }
          findFirst: {
            args: Prisma.ventaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ventaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventaPayload>
          }
          findMany: {
            args: Prisma.ventaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventaPayload>[]
          }
          create: {
            args: Prisma.ventaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventaPayload>
          }
          createMany: {
            args: Prisma.ventaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ventaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventaPayload>[]
          }
          delete: {
            args: Prisma.ventaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventaPayload>
          }
          update: {
            args: Prisma.ventaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventaPayload>
          }
          deleteMany: {
            args: Prisma.ventaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ventaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ventaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventaPayload>[]
          }
          upsert: {
            args: Prisma.ventaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventaPayload>
          }
          aggregate: {
            args: Prisma.VentaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVenta>
          }
          groupBy: {
            args: Prisma.ventaGroupByArgs<ExtArgs>
            result: $Utils.Optional<VentaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ventaCountArgs<ExtArgs>
            result: $Utils.Optional<VentaCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    codigobarra?: codigobarraOmit
    compra?: compraOmit
    cuentafinanciera?: cuentafinancieraOmit
    detallecompra?: detallecompraOmit
    detalleordencompra?: detalleordencompraOmit
    detalleventa?: detalleventaOmit
    estadoordencompra?: estadoordencompraOmit
    estadoproduccion?: estadoproduccionOmit
    estadoventa?: estadoventaOmit
    insumoproduccion?: insumoproduccionOmit
    listaprecio?: listaprecioOmit
    lote?: loteOmit
    ordencompra?: ordencompraOmit
    ordencompracompra?: ordencompracompraOmit
    ordenproduccion?: ordenproduccionOmit
    permiso?: permisoOmit
    producto?: productoOmit
    productocombo?: productocomboOmit
    productoterminado?: productoterminadoOmit
    proveedor?: proveedorOmit
    rol?: rolOmit
    screen?: screenOmit
    sucursal?: sucursalOmit
    tipocuenta?: tipocuentaOmit
    tipolistaprecio?: tipolistaprecioOmit
    tipotransaccion?: tipotransaccionOmit
    tipoventa?: tipoventaOmit
    transaccionfinanciera?: transaccionfinancieraOmit
    usuario?: usuarioOmit
    venta?: ventaOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CodigobarraCountOutputType
   */

  export type CodigobarraCountOutputType = {
    detalleventa: number
    lote: number
  }

  export type CodigobarraCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalleventa?: boolean | CodigobarraCountOutputTypeCountDetalleventaArgs
    lote?: boolean | CodigobarraCountOutputTypeCountLoteArgs
  }

  // Custom InputTypes
  /**
   * CodigobarraCountOutputType without action
   */
  export type CodigobarraCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CodigobarraCountOutputType
     */
    select?: CodigobarraCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CodigobarraCountOutputType without action
   */
  export type CodigobarraCountOutputTypeCountDetalleventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalleventaWhereInput
  }

  /**
   * CodigobarraCountOutputType without action
   */
  export type CodigobarraCountOutputTypeCountLoteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: loteWhereInput
  }


  /**
   * Count Type CompraCountOutputType
   */

  export type CompraCountOutputType = {
    detallecompra: number
    ordencompracompra: number
  }

  export type CompraCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detallecompra?: boolean | CompraCountOutputTypeCountDetallecompraArgs
    ordencompracompra?: boolean | CompraCountOutputTypeCountOrdencompracompraArgs
  }

  // Custom InputTypes
  /**
   * CompraCountOutputType without action
   */
  export type CompraCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompraCountOutputType
     */
    select?: CompraCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CompraCountOutputType without action
   */
  export type CompraCountOutputTypeCountDetallecompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detallecompraWhereInput
  }

  /**
   * CompraCountOutputType without action
   */
  export type CompraCountOutputTypeCountOrdencompracompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordencompracompraWhereInput
  }


  /**
   * Count Type CuentafinancieraCountOutputType
   */

  export type CuentafinancieraCountOutputType = {
    transaccionfinanciera: number
  }

  export type CuentafinancieraCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccionfinanciera?: boolean | CuentafinancieraCountOutputTypeCountTransaccionfinancieraArgs
  }

  // Custom InputTypes
  /**
   * CuentafinancieraCountOutputType without action
   */
  export type CuentafinancieraCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CuentafinancieraCountOutputType
     */
    select?: CuentafinancieraCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CuentafinancieraCountOutputType without action
   */
  export type CuentafinancieraCountOutputTypeCountTransaccionfinancieraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transaccionfinancieraWhereInput
  }


  /**
   * Count Type EstadoordencompraCountOutputType
   */

  export type EstadoordencompraCountOutputType = {
    ordencompra: number
  }

  export type EstadoordencompraCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordencompra?: boolean | EstadoordencompraCountOutputTypeCountOrdencompraArgs
  }

  // Custom InputTypes
  /**
   * EstadoordencompraCountOutputType without action
   */
  export type EstadoordencompraCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoordencompraCountOutputType
     */
    select?: EstadoordencompraCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstadoordencompraCountOutputType without action
   */
  export type EstadoordencompraCountOutputTypeCountOrdencompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordencompraWhereInput
  }


  /**
   * Count Type EstadoproduccionCountOutputType
   */

  export type EstadoproduccionCountOutputType = {
    ordenproduccion: number
  }

  export type EstadoproduccionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordenproduccion?: boolean | EstadoproduccionCountOutputTypeCountOrdenproduccionArgs
  }

  // Custom InputTypes
  /**
   * EstadoproduccionCountOutputType without action
   */
  export type EstadoproduccionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoproduccionCountOutputType
     */
    select?: EstadoproduccionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstadoproduccionCountOutputType without action
   */
  export type EstadoproduccionCountOutputTypeCountOrdenproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordenproduccionWhereInput
  }


  /**
   * Count Type EstadoventaCountOutputType
   */

  export type EstadoventaCountOutputType = {
    venta: number
  }

  export type EstadoventaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    venta?: boolean | EstadoventaCountOutputTypeCountVentaArgs
  }

  // Custom InputTypes
  /**
   * EstadoventaCountOutputType without action
   */
  export type EstadoventaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadoventaCountOutputType
     */
    select?: EstadoventaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstadoventaCountOutputType without action
   */
  export type EstadoventaCountOutputTypeCountVentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ventaWhereInput
  }


  /**
   * Count Type LoteCountOutputType
   */

  export type LoteCountOutputType = {
    detallecompra: number
    productoterminado: number
  }

  export type LoteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detallecompra?: boolean | LoteCountOutputTypeCountDetallecompraArgs
    productoterminado?: boolean | LoteCountOutputTypeCountProductoterminadoArgs
  }

  // Custom InputTypes
  /**
   * LoteCountOutputType without action
   */
  export type LoteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LoteCountOutputType
     */
    select?: LoteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LoteCountOutputType without action
   */
  export type LoteCountOutputTypeCountDetallecompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detallecompraWhereInput
  }

  /**
   * LoteCountOutputType without action
   */
  export type LoteCountOutputTypeCountProductoterminadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productoterminadoWhereInput
  }


  /**
   * Count Type OrdencompraCountOutputType
   */

  export type OrdencompraCountOutputType = {
    detalleordencompra: number
    ordencompracompra: number
  }

  export type OrdencompraCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalleordencompra?: boolean | OrdencompraCountOutputTypeCountDetalleordencompraArgs
    ordencompracompra?: boolean | OrdencompraCountOutputTypeCountOrdencompracompraArgs
  }

  // Custom InputTypes
  /**
   * OrdencompraCountOutputType without action
   */
  export type OrdencompraCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdencompraCountOutputType
     */
    select?: OrdencompraCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrdencompraCountOutputType without action
   */
  export type OrdencompraCountOutputTypeCountDetalleordencompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalleordencompraWhereInput
  }

  /**
   * OrdencompraCountOutputType without action
   */
  export type OrdencompraCountOutputTypeCountOrdencompracompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordencompracompraWhereInput
  }


  /**
   * Count Type OrdenproduccionCountOutputType
   */

  export type OrdenproduccionCountOutputType = {
    insumoproduccion: number
    productoterminado: number
  }

  export type OrdenproduccionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    insumoproduccion?: boolean | OrdenproduccionCountOutputTypeCountInsumoproduccionArgs
    productoterminado?: boolean | OrdenproduccionCountOutputTypeCountProductoterminadoArgs
  }

  // Custom InputTypes
  /**
   * OrdenproduccionCountOutputType without action
   */
  export type OrdenproduccionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdenproduccionCountOutputType
     */
    select?: OrdenproduccionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrdenproduccionCountOutputType without action
   */
  export type OrdenproduccionCountOutputTypeCountInsumoproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: insumoproduccionWhereInput
  }

  /**
   * OrdenproduccionCountOutputType without action
   */
  export type OrdenproduccionCountOutputTypeCountProductoterminadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productoterminadoWhereInput
  }


  /**
   * Count Type ProductoCountOutputType
   */

  export type ProductoCountOutputType = {
    codigobarra: number
    detalleordencompra: number
    detalleventa: number
    insumoproduccion: number
    listaprecio: number
    ordenproduccion: number
    productocombo_productocombo_combo_idToproducto: number
    productocombo_productocombo_producto_idToproducto: number
  }

  export type ProductoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    codigobarra?: boolean | ProductoCountOutputTypeCountCodigobarraArgs
    detalleordencompra?: boolean | ProductoCountOutputTypeCountDetalleordencompraArgs
    detalleventa?: boolean | ProductoCountOutputTypeCountDetalleventaArgs
    insumoproduccion?: boolean | ProductoCountOutputTypeCountInsumoproduccionArgs
    listaprecio?: boolean | ProductoCountOutputTypeCountListaprecioArgs
    ordenproduccion?: boolean | ProductoCountOutputTypeCountOrdenproduccionArgs
    productocombo_productocombo_combo_idToproducto?: boolean | ProductoCountOutputTypeCountProductocombo_productocombo_combo_idToproductoArgs
    productocombo_productocombo_producto_idToproducto?: boolean | ProductoCountOutputTypeCountProductocombo_productocombo_producto_idToproductoArgs
  }

  // Custom InputTypes
  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoCountOutputType
     */
    select?: ProductoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountCodigobarraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: codigobarraWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountDetalleordencompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalleordencompraWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountDetalleventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalleventaWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountInsumoproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: insumoproduccionWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountListaprecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: listaprecioWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountOrdenproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordenproduccionWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountProductocombo_productocombo_combo_idToproductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productocomboWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountProductocombo_productocombo_producto_idToproductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productocomboWhereInput
  }


  /**
   * Count Type ProveedorCountOutputType
   */

  export type ProveedorCountOutputType = {
    compra: number
    ordencompra: number
  }

  export type ProveedorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | ProveedorCountOutputTypeCountCompraArgs
    ordencompra?: boolean | ProveedorCountOutputTypeCountOrdencompraArgs
  }

  // Custom InputTypes
  /**
   * ProveedorCountOutputType without action
   */
  export type ProveedorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProveedorCountOutputType
     */
    select?: ProveedorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProveedorCountOutputType without action
   */
  export type ProveedorCountOutputTypeCountCompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: compraWhereInput
  }

  /**
   * ProveedorCountOutputType without action
   */
  export type ProveedorCountOutputTypeCountOrdencompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordencompraWhereInput
  }


  /**
   * Count Type RolCountOutputType
   */

  export type RolCountOutputType = {
    permiso: number
    usuario: number
  }

  export type RolCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permiso?: boolean | RolCountOutputTypeCountPermisoArgs
    usuario?: boolean | RolCountOutputTypeCountUsuarioArgs
  }

  // Custom InputTypes
  /**
   * RolCountOutputType without action
   */
  export type RolCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolCountOutputType
     */
    select?: RolCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RolCountOutputType without action
   */
  export type RolCountOutputTypeCountPermisoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permisoWhereInput
  }

  /**
   * RolCountOutputType without action
   */
  export type RolCountOutputTypeCountUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuarioWhereInput
  }


  /**
   * Count Type ScreenCountOutputType
   */

  export type ScreenCountOutputType = {
    permiso: number
  }

  export type ScreenCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permiso?: boolean | ScreenCountOutputTypeCountPermisoArgs
  }

  // Custom InputTypes
  /**
   * ScreenCountOutputType without action
   */
  export type ScreenCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScreenCountOutputType
     */
    select?: ScreenCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ScreenCountOutputType without action
   */
  export type ScreenCountOutputTypeCountPermisoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permisoWhereInput
  }


  /**
   * Count Type SucursalCountOutputType
   */

  export type SucursalCountOutputType = {
    listaprecio: number
  }

  export type SucursalCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listaprecio?: boolean | SucursalCountOutputTypeCountListaprecioArgs
  }

  // Custom InputTypes
  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalCountOutputType
     */
    select?: SucursalCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountListaprecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: listaprecioWhereInput
  }


  /**
   * Count Type TipocuentaCountOutputType
   */

  export type TipocuentaCountOutputType = {
    cuentafinanciera: number
  }

  export type TipocuentaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cuentafinanciera?: boolean | TipocuentaCountOutputTypeCountCuentafinancieraArgs
  }

  // Custom InputTypes
  /**
   * TipocuentaCountOutputType without action
   */
  export type TipocuentaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipocuentaCountOutputType
     */
    select?: TipocuentaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipocuentaCountOutputType without action
   */
  export type TipocuentaCountOutputTypeCountCuentafinancieraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cuentafinancieraWhereInput
  }


  /**
   * Count Type TipolistaprecioCountOutputType
   */

  export type TipolistaprecioCountOutputType = {
    detalleventa: number
    listaprecio: number
  }

  export type TipolistaprecioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalleventa?: boolean | TipolistaprecioCountOutputTypeCountDetalleventaArgs
    listaprecio?: boolean | TipolistaprecioCountOutputTypeCountListaprecioArgs
  }

  // Custom InputTypes
  /**
   * TipolistaprecioCountOutputType without action
   */
  export type TipolistaprecioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipolistaprecioCountOutputType
     */
    select?: TipolistaprecioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipolistaprecioCountOutputType without action
   */
  export type TipolistaprecioCountOutputTypeCountDetalleventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalleventaWhereInput
  }

  /**
   * TipolistaprecioCountOutputType without action
   */
  export type TipolistaprecioCountOutputTypeCountListaprecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: listaprecioWhereInput
  }


  /**
   * Count Type TipotransaccionCountOutputType
   */

  export type TipotransaccionCountOutputType = {
    transaccionfinanciera: number
  }

  export type TipotransaccionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccionfinanciera?: boolean | TipotransaccionCountOutputTypeCountTransaccionfinancieraArgs
  }

  // Custom InputTypes
  /**
   * TipotransaccionCountOutputType without action
   */
  export type TipotransaccionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipotransaccionCountOutputType
     */
    select?: TipotransaccionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipotransaccionCountOutputType without action
   */
  export type TipotransaccionCountOutputTypeCountTransaccionfinancieraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transaccionfinancieraWhereInput
  }


  /**
   * Count Type TipoventaCountOutputType
   */

  export type TipoventaCountOutputType = {
    detalleventa: number
  }

  export type TipoventaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalleventa?: boolean | TipoventaCountOutputTypeCountDetalleventaArgs
  }

  // Custom InputTypes
  /**
   * TipoventaCountOutputType without action
   */
  export type TipoventaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipoventaCountOutputType
     */
    select?: TipoventaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipoventaCountOutputType without action
   */
  export type TipoventaCountOutputTypeCountDetalleventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalleventaWhereInput
  }


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    venta: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    venta?: boolean | UsuarioCountOutputTypeCountVentaArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountVentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ventaWhereInput
  }


  /**
   * Count Type VentaCountOutputType
   */

  export type VentaCountOutputType = {
    detalleventa: number
  }

  export type VentaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalleventa?: boolean | VentaCountOutputTypeCountDetalleventaArgs
  }

  // Custom InputTypes
  /**
   * VentaCountOutputType without action
   */
  export type VentaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCountOutputType
     */
    select?: VentaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VentaCountOutputType without action
   */
  export type VentaCountOutputTypeCountDetalleventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalleventaWhereInput
  }


  /**
   * Models
   */

  /**
   * Model codigobarra
   */

  export type AggregateCodigobarra = {
    _count: CodigobarraCountAggregateOutputType | null
    _avg: CodigobarraAvgAggregateOutputType | null
    _sum: CodigobarraSumAggregateOutputType | null
    _min: CodigobarraMinAggregateOutputType | null
    _max: CodigobarraMaxAggregateOutputType | null
  }

  export type CodigobarraAvgAggregateOutputType = {
    id: number | null
    producto_id: number | null
  }

  export type CodigobarraSumAggregateOutputType = {
    id: number | null
    producto_id: number | null
  }

  export type CodigobarraMinAggregateOutputType = {
    id: number | null
    producto_id: number | null
    codigo: string | null
  }

  export type CodigobarraMaxAggregateOutputType = {
    id: number | null
    producto_id: number | null
    codigo: string | null
  }

  export type CodigobarraCountAggregateOutputType = {
    id: number
    producto_id: number
    codigo: number
    _all: number
  }


  export type CodigobarraAvgAggregateInputType = {
    id?: true
    producto_id?: true
  }

  export type CodigobarraSumAggregateInputType = {
    id?: true
    producto_id?: true
  }

  export type CodigobarraMinAggregateInputType = {
    id?: true
    producto_id?: true
    codigo?: true
  }

  export type CodigobarraMaxAggregateInputType = {
    id?: true
    producto_id?: true
    codigo?: true
  }

  export type CodigobarraCountAggregateInputType = {
    id?: true
    producto_id?: true
    codigo?: true
    _all?: true
  }

  export type CodigobarraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which codigobarra to aggregate.
     */
    where?: codigobarraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of codigobarras to fetch.
     */
    orderBy?: codigobarraOrderByWithRelationInput | codigobarraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: codigobarraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` codigobarras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` codigobarras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned codigobarras
    **/
    _count?: true | CodigobarraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CodigobarraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CodigobarraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CodigobarraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CodigobarraMaxAggregateInputType
  }

  export type GetCodigobarraAggregateType<T extends CodigobarraAggregateArgs> = {
        [P in keyof T & keyof AggregateCodigobarra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCodigobarra[P]>
      : GetScalarType<T[P], AggregateCodigobarra[P]>
  }




  export type codigobarraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: codigobarraWhereInput
    orderBy?: codigobarraOrderByWithAggregationInput | codigobarraOrderByWithAggregationInput[]
    by: CodigobarraScalarFieldEnum[] | CodigobarraScalarFieldEnum
    having?: codigobarraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CodigobarraCountAggregateInputType | true
    _avg?: CodigobarraAvgAggregateInputType
    _sum?: CodigobarraSumAggregateInputType
    _min?: CodigobarraMinAggregateInputType
    _max?: CodigobarraMaxAggregateInputType
  }

  export type CodigobarraGroupByOutputType = {
    id: number
    producto_id: number | null
    codigo: string
    _count: CodigobarraCountAggregateOutputType | null
    _avg: CodigobarraAvgAggregateOutputType | null
    _sum: CodigobarraSumAggregateOutputType | null
    _min: CodigobarraMinAggregateOutputType | null
    _max: CodigobarraMaxAggregateOutputType | null
  }

  type GetCodigobarraGroupByPayload<T extends codigobarraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CodigobarraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CodigobarraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CodigobarraGroupByOutputType[P]>
            : GetScalarType<T[P], CodigobarraGroupByOutputType[P]>
        }
      >
    >


  export type codigobarraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producto_id?: boolean
    codigo?: boolean
    producto?: boolean | codigobarra$productoArgs<ExtArgs>
    detalleventa?: boolean | codigobarra$detalleventaArgs<ExtArgs>
    lote?: boolean | codigobarra$loteArgs<ExtArgs>
    _count?: boolean | CodigobarraCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["codigobarra"]>

  export type codigobarraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producto_id?: boolean
    codigo?: boolean
    producto?: boolean | codigobarra$productoArgs<ExtArgs>
  }, ExtArgs["result"]["codigobarra"]>

  export type codigobarraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producto_id?: boolean
    codigo?: boolean
    producto?: boolean | codigobarra$productoArgs<ExtArgs>
  }, ExtArgs["result"]["codigobarra"]>

  export type codigobarraSelectScalar = {
    id?: boolean
    producto_id?: boolean
    codigo?: boolean
  }

  export type codigobarraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "producto_id" | "codigo", ExtArgs["result"]["codigobarra"]>
  export type codigobarraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | codigobarra$productoArgs<ExtArgs>
    detalleventa?: boolean | codigobarra$detalleventaArgs<ExtArgs>
    lote?: boolean | codigobarra$loteArgs<ExtArgs>
    _count?: boolean | CodigobarraCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type codigobarraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | codigobarra$productoArgs<ExtArgs>
  }
  export type codigobarraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | codigobarra$productoArgs<ExtArgs>
  }

  export type $codigobarraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "codigobarra"
    objects: {
      producto: Prisma.$productoPayload<ExtArgs> | null
      detalleventa: Prisma.$detalleventaPayload<ExtArgs>[]
      lote: Prisma.$lotePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      producto_id: number | null
      codigo: string
    }, ExtArgs["result"]["codigobarra"]>
    composites: {}
  }

  type codigobarraGetPayload<S extends boolean | null | undefined | codigobarraDefaultArgs> = $Result.GetResult<Prisma.$codigobarraPayload, S>

  type codigobarraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<codigobarraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CodigobarraCountAggregateInputType | true
    }

  export interface codigobarraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['codigobarra'], meta: { name: 'codigobarra' } }
    /**
     * Find zero or one Codigobarra that matches the filter.
     * @param {codigobarraFindUniqueArgs} args - Arguments to find a Codigobarra
     * @example
     * // Get one Codigobarra
     * const codigobarra = await prisma.codigobarra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends codigobarraFindUniqueArgs>(args: SelectSubset<T, codigobarraFindUniqueArgs<ExtArgs>>): Prisma__codigobarraClient<$Result.GetResult<Prisma.$codigobarraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Codigobarra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {codigobarraFindUniqueOrThrowArgs} args - Arguments to find a Codigobarra
     * @example
     * // Get one Codigobarra
     * const codigobarra = await prisma.codigobarra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends codigobarraFindUniqueOrThrowArgs>(args: SelectSubset<T, codigobarraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__codigobarraClient<$Result.GetResult<Prisma.$codigobarraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Codigobarra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {codigobarraFindFirstArgs} args - Arguments to find a Codigobarra
     * @example
     * // Get one Codigobarra
     * const codigobarra = await prisma.codigobarra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends codigobarraFindFirstArgs>(args?: SelectSubset<T, codigobarraFindFirstArgs<ExtArgs>>): Prisma__codigobarraClient<$Result.GetResult<Prisma.$codigobarraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Codigobarra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {codigobarraFindFirstOrThrowArgs} args - Arguments to find a Codigobarra
     * @example
     * // Get one Codigobarra
     * const codigobarra = await prisma.codigobarra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends codigobarraFindFirstOrThrowArgs>(args?: SelectSubset<T, codigobarraFindFirstOrThrowArgs<ExtArgs>>): Prisma__codigobarraClient<$Result.GetResult<Prisma.$codigobarraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Codigobarras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {codigobarraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Codigobarras
     * const codigobarras = await prisma.codigobarra.findMany()
     * 
     * // Get first 10 Codigobarras
     * const codigobarras = await prisma.codigobarra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const codigobarraWithIdOnly = await prisma.codigobarra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends codigobarraFindManyArgs>(args?: SelectSubset<T, codigobarraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$codigobarraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Codigobarra.
     * @param {codigobarraCreateArgs} args - Arguments to create a Codigobarra.
     * @example
     * // Create one Codigobarra
     * const Codigobarra = await prisma.codigobarra.create({
     *   data: {
     *     // ... data to create a Codigobarra
     *   }
     * })
     * 
     */
    create<T extends codigobarraCreateArgs>(args: SelectSubset<T, codigobarraCreateArgs<ExtArgs>>): Prisma__codigobarraClient<$Result.GetResult<Prisma.$codigobarraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Codigobarras.
     * @param {codigobarraCreateManyArgs} args - Arguments to create many Codigobarras.
     * @example
     * // Create many Codigobarras
     * const codigobarra = await prisma.codigobarra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends codigobarraCreateManyArgs>(args?: SelectSubset<T, codigobarraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Codigobarras and returns the data saved in the database.
     * @param {codigobarraCreateManyAndReturnArgs} args - Arguments to create many Codigobarras.
     * @example
     * // Create many Codigobarras
     * const codigobarra = await prisma.codigobarra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Codigobarras and only return the `id`
     * const codigobarraWithIdOnly = await prisma.codigobarra.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends codigobarraCreateManyAndReturnArgs>(args?: SelectSubset<T, codigobarraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$codigobarraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Codigobarra.
     * @param {codigobarraDeleteArgs} args - Arguments to delete one Codigobarra.
     * @example
     * // Delete one Codigobarra
     * const Codigobarra = await prisma.codigobarra.delete({
     *   where: {
     *     // ... filter to delete one Codigobarra
     *   }
     * })
     * 
     */
    delete<T extends codigobarraDeleteArgs>(args: SelectSubset<T, codigobarraDeleteArgs<ExtArgs>>): Prisma__codigobarraClient<$Result.GetResult<Prisma.$codigobarraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Codigobarra.
     * @param {codigobarraUpdateArgs} args - Arguments to update one Codigobarra.
     * @example
     * // Update one Codigobarra
     * const codigobarra = await prisma.codigobarra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends codigobarraUpdateArgs>(args: SelectSubset<T, codigobarraUpdateArgs<ExtArgs>>): Prisma__codigobarraClient<$Result.GetResult<Prisma.$codigobarraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Codigobarras.
     * @param {codigobarraDeleteManyArgs} args - Arguments to filter Codigobarras to delete.
     * @example
     * // Delete a few Codigobarras
     * const { count } = await prisma.codigobarra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends codigobarraDeleteManyArgs>(args?: SelectSubset<T, codigobarraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Codigobarras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {codigobarraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Codigobarras
     * const codigobarra = await prisma.codigobarra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends codigobarraUpdateManyArgs>(args: SelectSubset<T, codigobarraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Codigobarras and returns the data updated in the database.
     * @param {codigobarraUpdateManyAndReturnArgs} args - Arguments to update many Codigobarras.
     * @example
     * // Update many Codigobarras
     * const codigobarra = await prisma.codigobarra.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Codigobarras and only return the `id`
     * const codigobarraWithIdOnly = await prisma.codigobarra.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends codigobarraUpdateManyAndReturnArgs>(args: SelectSubset<T, codigobarraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$codigobarraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Codigobarra.
     * @param {codigobarraUpsertArgs} args - Arguments to update or create a Codigobarra.
     * @example
     * // Update or create a Codigobarra
     * const codigobarra = await prisma.codigobarra.upsert({
     *   create: {
     *     // ... data to create a Codigobarra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Codigobarra we want to update
     *   }
     * })
     */
    upsert<T extends codigobarraUpsertArgs>(args: SelectSubset<T, codigobarraUpsertArgs<ExtArgs>>): Prisma__codigobarraClient<$Result.GetResult<Prisma.$codigobarraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Codigobarras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {codigobarraCountArgs} args - Arguments to filter Codigobarras to count.
     * @example
     * // Count the number of Codigobarras
     * const count = await prisma.codigobarra.count({
     *   where: {
     *     // ... the filter for the Codigobarras we want to count
     *   }
     * })
    **/
    count<T extends codigobarraCountArgs>(
      args?: Subset<T, codigobarraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CodigobarraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Codigobarra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CodigobarraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CodigobarraAggregateArgs>(args: Subset<T, CodigobarraAggregateArgs>): Prisma.PrismaPromise<GetCodigobarraAggregateType<T>>

    /**
     * Group by Codigobarra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {codigobarraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends codigobarraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: codigobarraGroupByArgs['orderBy'] }
        : { orderBy?: codigobarraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, codigobarraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCodigobarraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the codigobarra model
   */
  readonly fields: codigobarraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for codigobarra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__codigobarraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends codigobarra$productoArgs<ExtArgs> = {}>(args?: Subset<T, codigobarra$productoArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    detalleventa<T extends codigobarra$detalleventaArgs<ExtArgs> = {}>(args?: Subset<T, codigobarra$detalleventaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    lote<T extends codigobarra$loteArgs<ExtArgs> = {}>(args?: Subset<T, codigobarra$loteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the codigobarra model
   */
  interface codigobarraFieldRefs {
    readonly id: FieldRef<"codigobarra", 'Int'>
    readonly producto_id: FieldRef<"codigobarra", 'Int'>
    readonly codigo: FieldRef<"codigobarra", 'String'>
  }
    

  // Custom InputTypes
  /**
   * codigobarra findUnique
   */
  export type codigobarraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraInclude<ExtArgs> | null
    /**
     * Filter, which codigobarra to fetch.
     */
    where: codigobarraWhereUniqueInput
  }

  /**
   * codigobarra findUniqueOrThrow
   */
  export type codigobarraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraInclude<ExtArgs> | null
    /**
     * Filter, which codigobarra to fetch.
     */
    where: codigobarraWhereUniqueInput
  }

  /**
   * codigobarra findFirst
   */
  export type codigobarraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraInclude<ExtArgs> | null
    /**
     * Filter, which codigobarra to fetch.
     */
    where?: codigobarraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of codigobarras to fetch.
     */
    orderBy?: codigobarraOrderByWithRelationInput | codigobarraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for codigobarras.
     */
    cursor?: codigobarraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` codigobarras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` codigobarras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of codigobarras.
     */
    distinct?: CodigobarraScalarFieldEnum | CodigobarraScalarFieldEnum[]
  }

  /**
   * codigobarra findFirstOrThrow
   */
  export type codigobarraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraInclude<ExtArgs> | null
    /**
     * Filter, which codigobarra to fetch.
     */
    where?: codigobarraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of codigobarras to fetch.
     */
    orderBy?: codigobarraOrderByWithRelationInput | codigobarraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for codigobarras.
     */
    cursor?: codigobarraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` codigobarras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` codigobarras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of codigobarras.
     */
    distinct?: CodigobarraScalarFieldEnum | CodigobarraScalarFieldEnum[]
  }

  /**
   * codigobarra findMany
   */
  export type codigobarraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraInclude<ExtArgs> | null
    /**
     * Filter, which codigobarras to fetch.
     */
    where?: codigobarraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of codigobarras to fetch.
     */
    orderBy?: codigobarraOrderByWithRelationInput | codigobarraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing codigobarras.
     */
    cursor?: codigobarraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` codigobarras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` codigobarras.
     */
    skip?: number
    distinct?: CodigobarraScalarFieldEnum | CodigobarraScalarFieldEnum[]
  }

  /**
   * codigobarra create
   */
  export type codigobarraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraInclude<ExtArgs> | null
    /**
     * The data needed to create a codigobarra.
     */
    data: XOR<codigobarraCreateInput, codigobarraUncheckedCreateInput>
  }

  /**
   * codigobarra createMany
   */
  export type codigobarraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many codigobarras.
     */
    data: codigobarraCreateManyInput | codigobarraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * codigobarra createManyAndReturn
   */
  export type codigobarraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * The data used to create many codigobarras.
     */
    data: codigobarraCreateManyInput | codigobarraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * codigobarra update
   */
  export type codigobarraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraInclude<ExtArgs> | null
    /**
     * The data needed to update a codigobarra.
     */
    data: XOR<codigobarraUpdateInput, codigobarraUncheckedUpdateInput>
    /**
     * Choose, which codigobarra to update.
     */
    where: codigobarraWhereUniqueInput
  }

  /**
   * codigobarra updateMany
   */
  export type codigobarraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update codigobarras.
     */
    data: XOR<codigobarraUpdateManyMutationInput, codigobarraUncheckedUpdateManyInput>
    /**
     * Filter which codigobarras to update
     */
    where?: codigobarraWhereInput
    /**
     * Limit how many codigobarras to update.
     */
    limit?: number
  }

  /**
   * codigobarra updateManyAndReturn
   */
  export type codigobarraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * The data used to update codigobarras.
     */
    data: XOR<codigobarraUpdateManyMutationInput, codigobarraUncheckedUpdateManyInput>
    /**
     * Filter which codigobarras to update
     */
    where?: codigobarraWhereInput
    /**
     * Limit how many codigobarras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * codigobarra upsert
   */
  export type codigobarraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraInclude<ExtArgs> | null
    /**
     * The filter to search for the codigobarra to update in case it exists.
     */
    where: codigobarraWhereUniqueInput
    /**
     * In case the codigobarra found by the `where` argument doesn't exist, create a new codigobarra with this data.
     */
    create: XOR<codigobarraCreateInput, codigobarraUncheckedCreateInput>
    /**
     * In case the codigobarra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<codigobarraUpdateInput, codigobarraUncheckedUpdateInput>
  }

  /**
   * codigobarra delete
   */
  export type codigobarraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraInclude<ExtArgs> | null
    /**
     * Filter which codigobarra to delete.
     */
    where: codigobarraWhereUniqueInput
  }

  /**
   * codigobarra deleteMany
   */
  export type codigobarraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which codigobarras to delete
     */
    where?: codigobarraWhereInput
    /**
     * Limit how many codigobarras to delete.
     */
    limit?: number
  }

  /**
   * codigobarra.producto
   */
  export type codigobarra$productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    where?: productoWhereInput
  }

  /**
   * codigobarra.detalleventa
   */
  export type codigobarra$detalleventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
    where?: detalleventaWhereInput
    orderBy?: detalleventaOrderByWithRelationInput | detalleventaOrderByWithRelationInput[]
    cursor?: detalleventaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleventaScalarFieldEnum | DetalleventaScalarFieldEnum[]
  }

  /**
   * codigobarra.lote
   */
  export type codigobarra$loteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteInclude<ExtArgs> | null
    where?: loteWhereInput
    orderBy?: loteOrderByWithRelationInput | loteOrderByWithRelationInput[]
    cursor?: loteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LoteScalarFieldEnum | LoteScalarFieldEnum[]
  }

  /**
   * codigobarra without action
   */
  export type codigobarraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraInclude<ExtArgs> | null
  }


  /**
   * Model compra
   */

  export type AggregateCompra = {
    _count: CompraCountAggregateOutputType | null
    _avg: CompraAvgAggregateOutputType | null
    _sum: CompraSumAggregateOutputType | null
    _min: CompraMinAggregateOutputType | null
    _max: CompraMaxAggregateOutputType | null
  }

  export type CompraAvgAggregateOutputType = {
    id: number | null
    proveedor_id: number | null
    total: Decimal | null
  }

  export type CompraSumAggregateOutputType = {
    id: number | null
    proveedor_id: number | null
    total: Decimal | null
  }

  export type CompraMinAggregateOutputType = {
    id: number | null
    proveedor_id: number | null
    fecha: Date | null
    total: Decimal | null
  }

  export type CompraMaxAggregateOutputType = {
    id: number | null
    proveedor_id: number | null
    fecha: Date | null
    total: Decimal | null
  }

  export type CompraCountAggregateOutputType = {
    id: number
    proveedor_id: number
    fecha: number
    total: number
    _all: number
  }


  export type CompraAvgAggregateInputType = {
    id?: true
    proveedor_id?: true
    total?: true
  }

  export type CompraSumAggregateInputType = {
    id?: true
    proveedor_id?: true
    total?: true
  }

  export type CompraMinAggregateInputType = {
    id?: true
    proveedor_id?: true
    fecha?: true
    total?: true
  }

  export type CompraMaxAggregateInputType = {
    id?: true
    proveedor_id?: true
    fecha?: true
    total?: true
  }

  export type CompraCountAggregateInputType = {
    id?: true
    proveedor_id?: true
    fecha?: true
    total?: true
    _all?: true
  }

  export type CompraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which compra to aggregate.
     */
    where?: compraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compras to fetch.
     */
    orderBy?: compraOrderByWithRelationInput | compraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: compraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned compras
    **/
    _count?: true | CompraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompraMaxAggregateInputType
  }

  export type GetCompraAggregateType<T extends CompraAggregateArgs> = {
        [P in keyof T & keyof AggregateCompra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompra[P]>
      : GetScalarType<T[P], AggregateCompra[P]>
  }




  export type compraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: compraWhereInput
    orderBy?: compraOrderByWithAggregationInput | compraOrderByWithAggregationInput[]
    by: CompraScalarFieldEnum[] | CompraScalarFieldEnum
    having?: compraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompraCountAggregateInputType | true
    _avg?: CompraAvgAggregateInputType
    _sum?: CompraSumAggregateInputType
    _min?: CompraMinAggregateInputType
    _max?: CompraMaxAggregateInputType
  }

  export type CompraGroupByOutputType = {
    id: number
    proveedor_id: number | null
    fecha: Date
    total: Decimal
    _count: CompraCountAggregateOutputType | null
    _avg: CompraAvgAggregateOutputType | null
    _sum: CompraSumAggregateOutputType | null
    _min: CompraMinAggregateOutputType | null
    _max: CompraMaxAggregateOutputType | null
  }

  type GetCompraGroupByPayload<T extends compraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompraGroupByOutputType[P]>
            : GetScalarType<T[P], CompraGroupByOutputType[P]>
        }
      >
    >


  export type compraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    proveedor_id?: boolean
    fecha?: boolean
    total?: boolean
    proveedor?: boolean | compra$proveedorArgs<ExtArgs>
    detallecompra?: boolean | compra$detallecompraArgs<ExtArgs>
    ordencompracompra?: boolean | compra$ordencompracompraArgs<ExtArgs>
    _count?: boolean | CompraCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["compra"]>

  export type compraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    proveedor_id?: boolean
    fecha?: boolean
    total?: boolean
    proveedor?: boolean | compra$proveedorArgs<ExtArgs>
  }, ExtArgs["result"]["compra"]>

  export type compraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    proveedor_id?: boolean
    fecha?: boolean
    total?: boolean
    proveedor?: boolean | compra$proveedorArgs<ExtArgs>
  }, ExtArgs["result"]["compra"]>

  export type compraSelectScalar = {
    id?: boolean
    proveedor_id?: boolean
    fecha?: boolean
    total?: boolean
  }

  export type compraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "proveedor_id" | "fecha" | "total", ExtArgs["result"]["compra"]>
  export type compraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proveedor?: boolean | compra$proveedorArgs<ExtArgs>
    detallecompra?: boolean | compra$detallecompraArgs<ExtArgs>
    ordencompracompra?: boolean | compra$ordencompracompraArgs<ExtArgs>
    _count?: boolean | CompraCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type compraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proveedor?: boolean | compra$proveedorArgs<ExtArgs>
  }
  export type compraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proveedor?: boolean | compra$proveedorArgs<ExtArgs>
  }

  export type $compraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "compra"
    objects: {
      proveedor: Prisma.$proveedorPayload<ExtArgs> | null
      detallecompra: Prisma.$detallecompraPayload<ExtArgs>[]
      ordencompracompra: Prisma.$ordencompracompraPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      proveedor_id: number | null
      fecha: Date
      total: Prisma.Decimal
    }, ExtArgs["result"]["compra"]>
    composites: {}
  }

  type compraGetPayload<S extends boolean | null | undefined | compraDefaultArgs> = $Result.GetResult<Prisma.$compraPayload, S>

  type compraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<compraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CompraCountAggregateInputType | true
    }

  export interface compraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['compra'], meta: { name: 'compra' } }
    /**
     * Find zero or one Compra that matches the filter.
     * @param {compraFindUniqueArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends compraFindUniqueArgs>(args: SelectSubset<T, compraFindUniqueArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Compra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {compraFindUniqueOrThrowArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends compraFindUniqueOrThrowArgs>(args: SelectSubset<T, compraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Compra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compraFindFirstArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends compraFindFirstArgs>(args?: SelectSubset<T, compraFindFirstArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Compra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compraFindFirstOrThrowArgs} args - Arguments to find a Compra
     * @example
     * // Get one Compra
     * const compra = await prisma.compra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends compraFindFirstOrThrowArgs>(args?: SelectSubset<T, compraFindFirstOrThrowArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Compras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Compras
     * const compras = await prisma.compra.findMany()
     * 
     * // Get first 10 Compras
     * const compras = await prisma.compra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const compraWithIdOnly = await prisma.compra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends compraFindManyArgs>(args?: SelectSubset<T, compraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Compra.
     * @param {compraCreateArgs} args - Arguments to create a Compra.
     * @example
     * // Create one Compra
     * const Compra = await prisma.compra.create({
     *   data: {
     *     // ... data to create a Compra
     *   }
     * })
     * 
     */
    create<T extends compraCreateArgs>(args: SelectSubset<T, compraCreateArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Compras.
     * @param {compraCreateManyArgs} args - Arguments to create many Compras.
     * @example
     * // Create many Compras
     * const compra = await prisma.compra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends compraCreateManyArgs>(args?: SelectSubset<T, compraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Compras and returns the data saved in the database.
     * @param {compraCreateManyAndReturnArgs} args - Arguments to create many Compras.
     * @example
     * // Create many Compras
     * const compra = await prisma.compra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Compras and only return the `id`
     * const compraWithIdOnly = await prisma.compra.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends compraCreateManyAndReturnArgs>(args?: SelectSubset<T, compraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Compra.
     * @param {compraDeleteArgs} args - Arguments to delete one Compra.
     * @example
     * // Delete one Compra
     * const Compra = await prisma.compra.delete({
     *   where: {
     *     // ... filter to delete one Compra
     *   }
     * })
     * 
     */
    delete<T extends compraDeleteArgs>(args: SelectSubset<T, compraDeleteArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Compra.
     * @param {compraUpdateArgs} args - Arguments to update one Compra.
     * @example
     * // Update one Compra
     * const compra = await prisma.compra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends compraUpdateArgs>(args: SelectSubset<T, compraUpdateArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Compras.
     * @param {compraDeleteManyArgs} args - Arguments to filter Compras to delete.
     * @example
     * // Delete a few Compras
     * const { count } = await prisma.compra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends compraDeleteManyArgs>(args?: SelectSubset<T, compraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Compras
     * const compra = await prisma.compra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends compraUpdateManyArgs>(args: SelectSubset<T, compraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Compras and returns the data updated in the database.
     * @param {compraUpdateManyAndReturnArgs} args - Arguments to update many Compras.
     * @example
     * // Update many Compras
     * const compra = await prisma.compra.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Compras and only return the `id`
     * const compraWithIdOnly = await prisma.compra.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends compraUpdateManyAndReturnArgs>(args: SelectSubset<T, compraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Compra.
     * @param {compraUpsertArgs} args - Arguments to update or create a Compra.
     * @example
     * // Update or create a Compra
     * const compra = await prisma.compra.upsert({
     *   create: {
     *     // ... data to create a Compra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Compra we want to update
     *   }
     * })
     */
    upsert<T extends compraUpsertArgs>(args: SelectSubset<T, compraUpsertArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compraCountArgs} args - Arguments to filter Compras to count.
     * @example
     * // Count the number of Compras
     * const count = await prisma.compra.count({
     *   where: {
     *     // ... the filter for the Compras we want to count
     *   }
     * })
    **/
    count<T extends compraCountArgs>(
      args?: Subset<T, compraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Compra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompraAggregateArgs>(args: Subset<T, CompraAggregateArgs>): Prisma.PrismaPromise<GetCompraAggregateType<T>>

    /**
     * Group by Compra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {compraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends compraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: compraGroupByArgs['orderBy'] }
        : { orderBy?: compraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, compraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the compra model
   */
  readonly fields: compraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for compra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__compraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    proveedor<T extends compra$proveedorArgs<ExtArgs> = {}>(args?: Subset<T, compra$proveedorArgs<ExtArgs>>): Prisma__proveedorClient<$Result.GetResult<Prisma.$proveedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    detallecompra<T extends compra$detallecompraArgs<ExtArgs> = {}>(args?: Subset<T, compra$detallecompraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detallecompraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ordencompracompra<T extends compra$ordencompracompraArgs<ExtArgs> = {}>(args?: Subset<T, compra$ordencompracompraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordencompracompraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the compra model
   */
  interface compraFieldRefs {
    readonly id: FieldRef<"compra", 'Int'>
    readonly proveedor_id: FieldRef<"compra", 'Int'>
    readonly fecha: FieldRef<"compra", 'DateTime'>
    readonly total: FieldRef<"compra", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * compra findUnique
   */
  export type compraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * Filter, which compra to fetch.
     */
    where: compraWhereUniqueInput
  }

  /**
   * compra findUniqueOrThrow
   */
  export type compraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * Filter, which compra to fetch.
     */
    where: compraWhereUniqueInput
  }

  /**
   * compra findFirst
   */
  export type compraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * Filter, which compra to fetch.
     */
    where?: compraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compras to fetch.
     */
    orderBy?: compraOrderByWithRelationInput | compraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for compras.
     */
    cursor?: compraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of compras.
     */
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * compra findFirstOrThrow
   */
  export type compraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * Filter, which compra to fetch.
     */
    where?: compraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compras to fetch.
     */
    orderBy?: compraOrderByWithRelationInput | compraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for compras.
     */
    cursor?: compraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of compras.
     */
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * compra findMany
   */
  export type compraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * Filter, which compras to fetch.
     */
    where?: compraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compras to fetch.
     */
    orderBy?: compraOrderByWithRelationInput | compraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing compras.
     */
    cursor?: compraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compras.
     */
    skip?: number
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * compra create
   */
  export type compraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * The data needed to create a compra.
     */
    data: XOR<compraCreateInput, compraUncheckedCreateInput>
  }

  /**
   * compra createMany
   */
  export type compraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many compras.
     */
    data: compraCreateManyInput | compraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * compra createManyAndReturn
   */
  export type compraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * The data used to create many compras.
     */
    data: compraCreateManyInput | compraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * compra update
   */
  export type compraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * The data needed to update a compra.
     */
    data: XOR<compraUpdateInput, compraUncheckedUpdateInput>
    /**
     * Choose, which compra to update.
     */
    where: compraWhereUniqueInput
  }

  /**
   * compra updateMany
   */
  export type compraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update compras.
     */
    data: XOR<compraUpdateManyMutationInput, compraUncheckedUpdateManyInput>
    /**
     * Filter which compras to update
     */
    where?: compraWhereInput
    /**
     * Limit how many compras to update.
     */
    limit?: number
  }

  /**
   * compra updateManyAndReturn
   */
  export type compraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * The data used to update compras.
     */
    data: XOR<compraUpdateManyMutationInput, compraUncheckedUpdateManyInput>
    /**
     * Filter which compras to update
     */
    where?: compraWhereInput
    /**
     * Limit how many compras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * compra upsert
   */
  export type compraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * The filter to search for the compra to update in case it exists.
     */
    where: compraWhereUniqueInput
    /**
     * In case the compra found by the `where` argument doesn't exist, create a new compra with this data.
     */
    create: XOR<compraCreateInput, compraUncheckedCreateInput>
    /**
     * In case the compra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<compraUpdateInput, compraUncheckedUpdateInput>
  }

  /**
   * compra delete
   */
  export type compraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    /**
     * Filter which compra to delete.
     */
    where: compraWhereUniqueInput
  }

  /**
   * compra deleteMany
   */
  export type compraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which compras to delete
     */
    where?: compraWhereInput
    /**
     * Limit how many compras to delete.
     */
    limit?: number
  }

  /**
   * compra.proveedor
   */
  export type compra$proveedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedor
     */
    select?: proveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedor
     */
    omit?: proveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedorInclude<ExtArgs> | null
    where?: proveedorWhereInput
  }

  /**
   * compra.detallecompra
   */
  export type compra$detallecompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detallecompra
     */
    select?: detallecompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detallecompra
     */
    omit?: detallecompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detallecompraInclude<ExtArgs> | null
    where?: detallecompraWhereInput
    orderBy?: detallecompraOrderByWithRelationInput | detallecompraOrderByWithRelationInput[]
    cursor?: detallecompraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetallecompraScalarFieldEnum | DetallecompraScalarFieldEnum[]
  }

  /**
   * compra.ordencompracompra
   */
  export type compra$ordencompracompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompracompra
     */
    select?: ordencompracompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompracompra
     */
    omit?: ordencompracompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompracompraInclude<ExtArgs> | null
    where?: ordencompracompraWhereInput
    orderBy?: ordencompracompraOrderByWithRelationInput | ordencompracompraOrderByWithRelationInput[]
    cursor?: ordencompracompraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdencompracompraScalarFieldEnum | OrdencompracompraScalarFieldEnum[]
  }

  /**
   * compra without action
   */
  export type compraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
  }


  /**
   * Model cuentafinanciera
   */

  export type AggregateCuentafinanciera = {
    _count: CuentafinancieraCountAggregateOutputType | null
    _avg: CuentafinancieraAvgAggregateOutputType | null
    _sum: CuentafinancieraSumAggregateOutputType | null
    _min: CuentafinancieraMinAggregateOutputType | null
    _max: CuentafinancieraMaxAggregateOutputType | null
  }

  export type CuentafinancieraAvgAggregateOutputType = {
    id: number | null
    tipo_id: number | null
    saldo: Decimal | null
  }

  export type CuentafinancieraSumAggregateOutputType = {
    id: number | null
    tipo_id: number | null
    saldo: Decimal | null
  }

  export type CuentafinancieraMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    tipo_id: number | null
    saldo: Decimal | null
  }

  export type CuentafinancieraMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    tipo_id: number | null
    saldo: Decimal | null
  }

  export type CuentafinancieraCountAggregateOutputType = {
    id: number
    nombre: number
    tipo_id: number
    saldo: number
    _all: number
  }


  export type CuentafinancieraAvgAggregateInputType = {
    id?: true
    tipo_id?: true
    saldo?: true
  }

  export type CuentafinancieraSumAggregateInputType = {
    id?: true
    tipo_id?: true
    saldo?: true
  }

  export type CuentafinancieraMinAggregateInputType = {
    id?: true
    nombre?: true
    tipo_id?: true
    saldo?: true
  }

  export type CuentafinancieraMaxAggregateInputType = {
    id?: true
    nombre?: true
    tipo_id?: true
    saldo?: true
  }

  export type CuentafinancieraCountAggregateInputType = {
    id?: true
    nombre?: true
    tipo_id?: true
    saldo?: true
    _all?: true
  }

  export type CuentafinancieraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cuentafinanciera to aggregate.
     */
    where?: cuentafinancieraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cuentafinancieras to fetch.
     */
    orderBy?: cuentafinancieraOrderByWithRelationInput | cuentafinancieraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cuentafinancieraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cuentafinancieras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cuentafinancieras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cuentafinancieras
    **/
    _count?: true | CuentafinancieraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CuentafinancieraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CuentafinancieraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CuentafinancieraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CuentafinancieraMaxAggregateInputType
  }

  export type GetCuentafinancieraAggregateType<T extends CuentafinancieraAggregateArgs> = {
        [P in keyof T & keyof AggregateCuentafinanciera]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCuentafinanciera[P]>
      : GetScalarType<T[P], AggregateCuentafinanciera[P]>
  }




  export type cuentafinancieraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cuentafinancieraWhereInput
    orderBy?: cuentafinancieraOrderByWithAggregationInput | cuentafinancieraOrderByWithAggregationInput[]
    by: CuentafinancieraScalarFieldEnum[] | CuentafinancieraScalarFieldEnum
    having?: cuentafinancieraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CuentafinancieraCountAggregateInputType | true
    _avg?: CuentafinancieraAvgAggregateInputType
    _sum?: CuentafinancieraSumAggregateInputType
    _min?: CuentafinancieraMinAggregateInputType
    _max?: CuentafinancieraMaxAggregateInputType
  }

  export type CuentafinancieraGroupByOutputType = {
    id: number
    nombre: string
    tipo_id: number | null
    saldo: Decimal | null
    _count: CuentafinancieraCountAggregateOutputType | null
    _avg: CuentafinancieraAvgAggregateOutputType | null
    _sum: CuentafinancieraSumAggregateOutputType | null
    _min: CuentafinancieraMinAggregateOutputType | null
    _max: CuentafinancieraMaxAggregateOutputType | null
  }

  type GetCuentafinancieraGroupByPayload<T extends cuentafinancieraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CuentafinancieraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CuentafinancieraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CuentafinancieraGroupByOutputType[P]>
            : GetScalarType<T[P], CuentafinancieraGroupByOutputType[P]>
        }
      >
    >


  export type cuentafinancieraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tipo_id?: boolean
    saldo?: boolean
    tipocuenta?: boolean | cuentafinanciera$tipocuentaArgs<ExtArgs>
    transaccionfinanciera?: boolean | cuentafinanciera$transaccionfinancieraArgs<ExtArgs>
    _count?: boolean | CuentafinancieraCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cuentafinanciera"]>

  export type cuentafinancieraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tipo_id?: boolean
    saldo?: boolean
    tipocuenta?: boolean | cuentafinanciera$tipocuentaArgs<ExtArgs>
  }, ExtArgs["result"]["cuentafinanciera"]>

  export type cuentafinancieraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tipo_id?: boolean
    saldo?: boolean
    tipocuenta?: boolean | cuentafinanciera$tipocuentaArgs<ExtArgs>
  }, ExtArgs["result"]["cuentafinanciera"]>

  export type cuentafinancieraSelectScalar = {
    id?: boolean
    nombre?: boolean
    tipo_id?: boolean
    saldo?: boolean
  }

  export type cuentafinancieraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "tipo_id" | "saldo", ExtArgs["result"]["cuentafinanciera"]>
  export type cuentafinancieraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipocuenta?: boolean | cuentafinanciera$tipocuentaArgs<ExtArgs>
    transaccionfinanciera?: boolean | cuentafinanciera$transaccionfinancieraArgs<ExtArgs>
    _count?: boolean | CuentafinancieraCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type cuentafinancieraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipocuenta?: boolean | cuentafinanciera$tipocuentaArgs<ExtArgs>
  }
  export type cuentafinancieraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipocuenta?: boolean | cuentafinanciera$tipocuentaArgs<ExtArgs>
  }

  export type $cuentafinancieraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cuentafinanciera"
    objects: {
      tipocuenta: Prisma.$tipocuentaPayload<ExtArgs> | null
      transaccionfinanciera: Prisma.$transaccionfinancieraPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      tipo_id: number | null
      saldo: Prisma.Decimal | null
    }, ExtArgs["result"]["cuentafinanciera"]>
    composites: {}
  }

  type cuentafinancieraGetPayload<S extends boolean | null | undefined | cuentafinancieraDefaultArgs> = $Result.GetResult<Prisma.$cuentafinancieraPayload, S>

  type cuentafinancieraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cuentafinancieraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CuentafinancieraCountAggregateInputType | true
    }

  export interface cuentafinancieraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cuentafinanciera'], meta: { name: 'cuentafinanciera' } }
    /**
     * Find zero or one Cuentafinanciera that matches the filter.
     * @param {cuentafinancieraFindUniqueArgs} args - Arguments to find a Cuentafinanciera
     * @example
     * // Get one Cuentafinanciera
     * const cuentafinanciera = await prisma.cuentafinanciera.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cuentafinancieraFindUniqueArgs>(args: SelectSubset<T, cuentafinancieraFindUniqueArgs<ExtArgs>>): Prisma__cuentafinancieraClient<$Result.GetResult<Prisma.$cuentafinancieraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cuentafinanciera that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cuentafinancieraFindUniqueOrThrowArgs} args - Arguments to find a Cuentafinanciera
     * @example
     * // Get one Cuentafinanciera
     * const cuentafinanciera = await prisma.cuentafinanciera.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cuentafinancieraFindUniqueOrThrowArgs>(args: SelectSubset<T, cuentafinancieraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cuentafinancieraClient<$Result.GetResult<Prisma.$cuentafinancieraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cuentafinanciera that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cuentafinancieraFindFirstArgs} args - Arguments to find a Cuentafinanciera
     * @example
     * // Get one Cuentafinanciera
     * const cuentafinanciera = await prisma.cuentafinanciera.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cuentafinancieraFindFirstArgs>(args?: SelectSubset<T, cuentafinancieraFindFirstArgs<ExtArgs>>): Prisma__cuentafinancieraClient<$Result.GetResult<Prisma.$cuentafinancieraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cuentafinanciera that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cuentafinancieraFindFirstOrThrowArgs} args - Arguments to find a Cuentafinanciera
     * @example
     * // Get one Cuentafinanciera
     * const cuentafinanciera = await prisma.cuentafinanciera.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cuentafinancieraFindFirstOrThrowArgs>(args?: SelectSubset<T, cuentafinancieraFindFirstOrThrowArgs<ExtArgs>>): Prisma__cuentafinancieraClient<$Result.GetResult<Prisma.$cuentafinancieraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cuentafinancieras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cuentafinancieraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cuentafinancieras
     * const cuentafinancieras = await prisma.cuentafinanciera.findMany()
     * 
     * // Get first 10 Cuentafinancieras
     * const cuentafinancieras = await prisma.cuentafinanciera.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cuentafinancieraWithIdOnly = await prisma.cuentafinanciera.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cuentafinancieraFindManyArgs>(args?: SelectSubset<T, cuentafinancieraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cuentafinancieraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cuentafinanciera.
     * @param {cuentafinancieraCreateArgs} args - Arguments to create a Cuentafinanciera.
     * @example
     * // Create one Cuentafinanciera
     * const Cuentafinanciera = await prisma.cuentafinanciera.create({
     *   data: {
     *     // ... data to create a Cuentafinanciera
     *   }
     * })
     * 
     */
    create<T extends cuentafinancieraCreateArgs>(args: SelectSubset<T, cuentafinancieraCreateArgs<ExtArgs>>): Prisma__cuentafinancieraClient<$Result.GetResult<Prisma.$cuentafinancieraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cuentafinancieras.
     * @param {cuentafinancieraCreateManyArgs} args - Arguments to create many Cuentafinancieras.
     * @example
     * // Create many Cuentafinancieras
     * const cuentafinanciera = await prisma.cuentafinanciera.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cuentafinancieraCreateManyArgs>(args?: SelectSubset<T, cuentafinancieraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cuentafinancieras and returns the data saved in the database.
     * @param {cuentafinancieraCreateManyAndReturnArgs} args - Arguments to create many Cuentafinancieras.
     * @example
     * // Create many Cuentafinancieras
     * const cuentafinanciera = await prisma.cuentafinanciera.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cuentafinancieras and only return the `id`
     * const cuentafinancieraWithIdOnly = await prisma.cuentafinanciera.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cuentafinancieraCreateManyAndReturnArgs>(args?: SelectSubset<T, cuentafinancieraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cuentafinancieraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cuentafinanciera.
     * @param {cuentafinancieraDeleteArgs} args - Arguments to delete one Cuentafinanciera.
     * @example
     * // Delete one Cuentafinanciera
     * const Cuentafinanciera = await prisma.cuentafinanciera.delete({
     *   where: {
     *     // ... filter to delete one Cuentafinanciera
     *   }
     * })
     * 
     */
    delete<T extends cuentafinancieraDeleteArgs>(args: SelectSubset<T, cuentafinancieraDeleteArgs<ExtArgs>>): Prisma__cuentafinancieraClient<$Result.GetResult<Prisma.$cuentafinancieraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cuentafinanciera.
     * @param {cuentafinancieraUpdateArgs} args - Arguments to update one Cuentafinanciera.
     * @example
     * // Update one Cuentafinanciera
     * const cuentafinanciera = await prisma.cuentafinanciera.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cuentafinancieraUpdateArgs>(args: SelectSubset<T, cuentafinancieraUpdateArgs<ExtArgs>>): Prisma__cuentafinancieraClient<$Result.GetResult<Prisma.$cuentafinancieraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cuentafinancieras.
     * @param {cuentafinancieraDeleteManyArgs} args - Arguments to filter Cuentafinancieras to delete.
     * @example
     * // Delete a few Cuentafinancieras
     * const { count } = await prisma.cuentafinanciera.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cuentafinancieraDeleteManyArgs>(args?: SelectSubset<T, cuentafinancieraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cuentafinancieras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cuentafinancieraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cuentafinancieras
     * const cuentafinanciera = await prisma.cuentafinanciera.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cuentafinancieraUpdateManyArgs>(args: SelectSubset<T, cuentafinancieraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cuentafinancieras and returns the data updated in the database.
     * @param {cuentafinancieraUpdateManyAndReturnArgs} args - Arguments to update many Cuentafinancieras.
     * @example
     * // Update many Cuentafinancieras
     * const cuentafinanciera = await prisma.cuentafinanciera.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cuentafinancieras and only return the `id`
     * const cuentafinancieraWithIdOnly = await prisma.cuentafinanciera.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cuentafinancieraUpdateManyAndReturnArgs>(args: SelectSubset<T, cuentafinancieraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cuentafinancieraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cuentafinanciera.
     * @param {cuentafinancieraUpsertArgs} args - Arguments to update or create a Cuentafinanciera.
     * @example
     * // Update or create a Cuentafinanciera
     * const cuentafinanciera = await prisma.cuentafinanciera.upsert({
     *   create: {
     *     // ... data to create a Cuentafinanciera
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cuentafinanciera we want to update
     *   }
     * })
     */
    upsert<T extends cuentafinancieraUpsertArgs>(args: SelectSubset<T, cuentafinancieraUpsertArgs<ExtArgs>>): Prisma__cuentafinancieraClient<$Result.GetResult<Prisma.$cuentafinancieraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cuentafinancieras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cuentafinancieraCountArgs} args - Arguments to filter Cuentafinancieras to count.
     * @example
     * // Count the number of Cuentafinancieras
     * const count = await prisma.cuentafinanciera.count({
     *   where: {
     *     // ... the filter for the Cuentafinancieras we want to count
     *   }
     * })
    **/
    count<T extends cuentafinancieraCountArgs>(
      args?: Subset<T, cuentafinancieraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CuentafinancieraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cuentafinanciera.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuentafinancieraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CuentafinancieraAggregateArgs>(args: Subset<T, CuentafinancieraAggregateArgs>): Prisma.PrismaPromise<GetCuentafinancieraAggregateType<T>>

    /**
     * Group by Cuentafinanciera.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cuentafinancieraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cuentafinancieraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cuentafinancieraGroupByArgs['orderBy'] }
        : { orderBy?: cuentafinancieraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cuentafinancieraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCuentafinancieraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cuentafinanciera model
   */
  readonly fields: cuentafinancieraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cuentafinanciera.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cuentafinancieraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tipocuenta<T extends cuentafinanciera$tipocuentaArgs<ExtArgs> = {}>(args?: Subset<T, cuentafinanciera$tipocuentaArgs<ExtArgs>>): Prisma__tipocuentaClient<$Result.GetResult<Prisma.$tipocuentaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    transaccionfinanciera<T extends cuentafinanciera$transaccionfinancieraArgs<ExtArgs> = {}>(args?: Subset<T, cuentafinanciera$transaccionfinancieraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaccionfinancieraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cuentafinanciera model
   */
  interface cuentafinancieraFieldRefs {
    readonly id: FieldRef<"cuentafinanciera", 'Int'>
    readonly nombre: FieldRef<"cuentafinanciera", 'String'>
    readonly tipo_id: FieldRef<"cuentafinanciera", 'Int'>
    readonly saldo: FieldRef<"cuentafinanciera", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * cuentafinanciera findUnique
   */
  export type cuentafinancieraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuentafinanciera
     */
    select?: cuentafinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuentafinanciera
     */
    omit?: cuentafinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cuentafinancieraInclude<ExtArgs> | null
    /**
     * Filter, which cuentafinanciera to fetch.
     */
    where: cuentafinancieraWhereUniqueInput
  }

  /**
   * cuentafinanciera findUniqueOrThrow
   */
  export type cuentafinancieraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuentafinanciera
     */
    select?: cuentafinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuentafinanciera
     */
    omit?: cuentafinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cuentafinancieraInclude<ExtArgs> | null
    /**
     * Filter, which cuentafinanciera to fetch.
     */
    where: cuentafinancieraWhereUniqueInput
  }

  /**
   * cuentafinanciera findFirst
   */
  export type cuentafinancieraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuentafinanciera
     */
    select?: cuentafinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuentafinanciera
     */
    omit?: cuentafinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cuentafinancieraInclude<ExtArgs> | null
    /**
     * Filter, which cuentafinanciera to fetch.
     */
    where?: cuentafinancieraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cuentafinancieras to fetch.
     */
    orderBy?: cuentafinancieraOrderByWithRelationInput | cuentafinancieraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cuentafinancieras.
     */
    cursor?: cuentafinancieraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cuentafinancieras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cuentafinancieras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cuentafinancieras.
     */
    distinct?: CuentafinancieraScalarFieldEnum | CuentafinancieraScalarFieldEnum[]
  }

  /**
   * cuentafinanciera findFirstOrThrow
   */
  export type cuentafinancieraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuentafinanciera
     */
    select?: cuentafinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuentafinanciera
     */
    omit?: cuentafinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cuentafinancieraInclude<ExtArgs> | null
    /**
     * Filter, which cuentafinanciera to fetch.
     */
    where?: cuentafinancieraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cuentafinancieras to fetch.
     */
    orderBy?: cuentafinancieraOrderByWithRelationInput | cuentafinancieraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cuentafinancieras.
     */
    cursor?: cuentafinancieraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cuentafinancieras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cuentafinancieras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cuentafinancieras.
     */
    distinct?: CuentafinancieraScalarFieldEnum | CuentafinancieraScalarFieldEnum[]
  }

  /**
   * cuentafinanciera findMany
   */
  export type cuentafinancieraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuentafinanciera
     */
    select?: cuentafinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuentafinanciera
     */
    omit?: cuentafinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cuentafinancieraInclude<ExtArgs> | null
    /**
     * Filter, which cuentafinancieras to fetch.
     */
    where?: cuentafinancieraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cuentafinancieras to fetch.
     */
    orderBy?: cuentafinancieraOrderByWithRelationInput | cuentafinancieraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cuentafinancieras.
     */
    cursor?: cuentafinancieraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cuentafinancieras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cuentafinancieras.
     */
    skip?: number
    distinct?: CuentafinancieraScalarFieldEnum | CuentafinancieraScalarFieldEnum[]
  }

  /**
   * cuentafinanciera create
   */
  export type cuentafinancieraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuentafinanciera
     */
    select?: cuentafinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuentafinanciera
     */
    omit?: cuentafinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cuentafinancieraInclude<ExtArgs> | null
    /**
     * The data needed to create a cuentafinanciera.
     */
    data: XOR<cuentafinancieraCreateInput, cuentafinancieraUncheckedCreateInput>
  }

  /**
   * cuentafinanciera createMany
   */
  export type cuentafinancieraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cuentafinancieras.
     */
    data: cuentafinancieraCreateManyInput | cuentafinancieraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cuentafinanciera createManyAndReturn
   */
  export type cuentafinancieraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuentafinanciera
     */
    select?: cuentafinancieraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cuentafinanciera
     */
    omit?: cuentafinancieraOmit<ExtArgs> | null
    /**
     * The data used to create many cuentafinancieras.
     */
    data: cuentafinancieraCreateManyInput | cuentafinancieraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cuentafinancieraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cuentafinanciera update
   */
  export type cuentafinancieraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuentafinanciera
     */
    select?: cuentafinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuentafinanciera
     */
    omit?: cuentafinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cuentafinancieraInclude<ExtArgs> | null
    /**
     * The data needed to update a cuentafinanciera.
     */
    data: XOR<cuentafinancieraUpdateInput, cuentafinancieraUncheckedUpdateInput>
    /**
     * Choose, which cuentafinanciera to update.
     */
    where: cuentafinancieraWhereUniqueInput
  }

  /**
   * cuentafinanciera updateMany
   */
  export type cuentafinancieraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cuentafinancieras.
     */
    data: XOR<cuentafinancieraUpdateManyMutationInput, cuentafinancieraUncheckedUpdateManyInput>
    /**
     * Filter which cuentafinancieras to update
     */
    where?: cuentafinancieraWhereInput
    /**
     * Limit how many cuentafinancieras to update.
     */
    limit?: number
  }

  /**
   * cuentafinanciera updateManyAndReturn
   */
  export type cuentafinancieraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuentafinanciera
     */
    select?: cuentafinancieraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cuentafinanciera
     */
    omit?: cuentafinancieraOmit<ExtArgs> | null
    /**
     * The data used to update cuentafinancieras.
     */
    data: XOR<cuentafinancieraUpdateManyMutationInput, cuentafinancieraUncheckedUpdateManyInput>
    /**
     * Filter which cuentafinancieras to update
     */
    where?: cuentafinancieraWhereInput
    /**
     * Limit how many cuentafinancieras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cuentafinancieraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cuentafinanciera upsert
   */
  export type cuentafinancieraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuentafinanciera
     */
    select?: cuentafinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuentafinanciera
     */
    omit?: cuentafinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cuentafinancieraInclude<ExtArgs> | null
    /**
     * The filter to search for the cuentafinanciera to update in case it exists.
     */
    where: cuentafinancieraWhereUniqueInput
    /**
     * In case the cuentafinanciera found by the `where` argument doesn't exist, create a new cuentafinanciera with this data.
     */
    create: XOR<cuentafinancieraCreateInput, cuentafinancieraUncheckedCreateInput>
    /**
     * In case the cuentafinanciera was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cuentafinancieraUpdateInput, cuentafinancieraUncheckedUpdateInput>
  }

  /**
   * cuentafinanciera delete
   */
  export type cuentafinancieraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuentafinanciera
     */
    select?: cuentafinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuentafinanciera
     */
    omit?: cuentafinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cuentafinancieraInclude<ExtArgs> | null
    /**
     * Filter which cuentafinanciera to delete.
     */
    where: cuentafinancieraWhereUniqueInput
  }

  /**
   * cuentafinanciera deleteMany
   */
  export type cuentafinancieraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cuentafinancieras to delete
     */
    where?: cuentafinancieraWhereInput
    /**
     * Limit how many cuentafinancieras to delete.
     */
    limit?: number
  }

  /**
   * cuentafinanciera.tipocuenta
   */
  export type cuentafinanciera$tipocuentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipocuenta
     */
    select?: tipocuentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipocuenta
     */
    omit?: tipocuentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipocuentaInclude<ExtArgs> | null
    where?: tipocuentaWhereInput
  }

  /**
   * cuentafinanciera.transaccionfinanciera
   */
  export type cuentafinanciera$transaccionfinancieraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccionfinanciera
     */
    select?: transaccionfinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccionfinanciera
     */
    omit?: transaccionfinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccionfinancieraInclude<ExtArgs> | null
    where?: transaccionfinancieraWhereInput
    orderBy?: transaccionfinancieraOrderByWithRelationInput | transaccionfinancieraOrderByWithRelationInput[]
    cursor?: transaccionfinancieraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaccionfinancieraScalarFieldEnum | TransaccionfinancieraScalarFieldEnum[]
  }

  /**
   * cuentafinanciera without action
   */
  export type cuentafinancieraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuentafinanciera
     */
    select?: cuentafinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuentafinanciera
     */
    omit?: cuentafinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cuentafinancieraInclude<ExtArgs> | null
  }


  /**
   * Model detallecompra
   */

  export type AggregateDetallecompra = {
    _count: DetallecompraCountAggregateOutputType | null
    _avg: DetallecompraAvgAggregateOutputType | null
    _sum: DetallecompraSumAggregateOutputType | null
    _min: DetallecompraMinAggregateOutputType | null
    _max: DetallecompraMaxAggregateOutputType | null
  }

  export type DetallecompraAvgAggregateOutputType = {
    id: number | null
    compra_id: number | null
    lote_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
  }

  export type DetallecompraSumAggregateOutputType = {
    id: number | null
    compra_id: number | null
    lote_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
  }

  export type DetallecompraMinAggregateOutputType = {
    id: number | null
    compra_id: number | null
    lote_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
  }

  export type DetallecompraMaxAggregateOutputType = {
    id: number | null
    compra_id: number | null
    lote_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
  }

  export type DetallecompraCountAggregateOutputType = {
    id: number
    compra_id: number
    lote_id: number
    cantidad: number
    precio_unitario: number
    _all: number
  }


  export type DetallecompraAvgAggregateInputType = {
    id?: true
    compra_id?: true
    lote_id?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type DetallecompraSumAggregateInputType = {
    id?: true
    compra_id?: true
    lote_id?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type DetallecompraMinAggregateInputType = {
    id?: true
    compra_id?: true
    lote_id?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type DetallecompraMaxAggregateInputType = {
    id?: true
    compra_id?: true
    lote_id?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type DetallecompraCountAggregateInputType = {
    id?: true
    compra_id?: true
    lote_id?: true
    cantidad?: true
    precio_unitario?: true
    _all?: true
  }

  export type DetallecompraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detallecompra to aggregate.
     */
    where?: detallecompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detallecompras to fetch.
     */
    orderBy?: detallecompraOrderByWithRelationInput | detallecompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: detallecompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detallecompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detallecompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned detallecompras
    **/
    _count?: true | DetallecompraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DetallecompraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DetallecompraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DetallecompraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DetallecompraMaxAggregateInputType
  }

  export type GetDetallecompraAggregateType<T extends DetallecompraAggregateArgs> = {
        [P in keyof T & keyof AggregateDetallecompra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetallecompra[P]>
      : GetScalarType<T[P], AggregateDetallecompra[P]>
  }




  export type detallecompraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detallecompraWhereInput
    orderBy?: detallecompraOrderByWithAggregationInput | detallecompraOrderByWithAggregationInput[]
    by: DetallecompraScalarFieldEnum[] | DetallecompraScalarFieldEnum
    having?: detallecompraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DetallecompraCountAggregateInputType | true
    _avg?: DetallecompraAvgAggregateInputType
    _sum?: DetallecompraSumAggregateInputType
    _min?: DetallecompraMinAggregateInputType
    _max?: DetallecompraMaxAggregateInputType
  }

  export type DetallecompraGroupByOutputType = {
    id: number
    compra_id: number | null
    lote_id: number | null
    cantidad: number
    precio_unitario: Decimal
    _count: DetallecompraCountAggregateOutputType | null
    _avg: DetallecompraAvgAggregateOutputType | null
    _sum: DetallecompraSumAggregateOutputType | null
    _min: DetallecompraMinAggregateOutputType | null
    _max: DetallecompraMaxAggregateOutputType | null
  }

  type GetDetallecompraGroupByPayload<T extends detallecompraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DetallecompraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DetallecompraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DetallecompraGroupByOutputType[P]>
            : GetScalarType<T[P], DetallecompraGroupByOutputType[P]>
        }
      >
    >


  export type detallecompraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    compra_id?: boolean
    lote_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    compra?: boolean | detallecompra$compraArgs<ExtArgs>
    lote?: boolean | detallecompra$loteArgs<ExtArgs>
  }, ExtArgs["result"]["detallecompra"]>

  export type detallecompraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    compra_id?: boolean
    lote_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    compra?: boolean | detallecompra$compraArgs<ExtArgs>
    lote?: boolean | detallecompra$loteArgs<ExtArgs>
  }, ExtArgs["result"]["detallecompra"]>

  export type detallecompraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    compra_id?: boolean
    lote_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    compra?: boolean | detallecompra$compraArgs<ExtArgs>
    lote?: boolean | detallecompra$loteArgs<ExtArgs>
  }, ExtArgs["result"]["detallecompra"]>

  export type detallecompraSelectScalar = {
    id?: boolean
    compra_id?: boolean
    lote_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
  }

  export type detallecompraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "compra_id" | "lote_id" | "cantidad" | "precio_unitario", ExtArgs["result"]["detallecompra"]>
  export type detallecompraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | detallecompra$compraArgs<ExtArgs>
    lote?: boolean | detallecompra$loteArgs<ExtArgs>
  }
  export type detallecompraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | detallecompra$compraArgs<ExtArgs>
    lote?: boolean | detallecompra$loteArgs<ExtArgs>
  }
  export type detallecompraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | detallecompra$compraArgs<ExtArgs>
    lote?: boolean | detallecompra$loteArgs<ExtArgs>
  }

  export type $detallecompraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "detallecompra"
    objects: {
      compra: Prisma.$compraPayload<ExtArgs> | null
      lote: Prisma.$lotePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      compra_id: number | null
      lote_id: number | null
      cantidad: number
      precio_unitario: Prisma.Decimal
    }, ExtArgs["result"]["detallecompra"]>
    composites: {}
  }

  type detallecompraGetPayload<S extends boolean | null | undefined | detallecompraDefaultArgs> = $Result.GetResult<Prisma.$detallecompraPayload, S>

  type detallecompraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<detallecompraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DetallecompraCountAggregateInputType | true
    }

  export interface detallecompraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['detallecompra'], meta: { name: 'detallecompra' } }
    /**
     * Find zero or one Detallecompra that matches the filter.
     * @param {detallecompraFindUniqueArgs} args - Arguments to find a Detallecompra
     * @example
     * // Get one Detallecompra
     * const detallecompra = await prisma.detallecompra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends detallecompraFindUniqueArgs>(args: SelectSubset<T, detallecompraFindUniqueArgs<ExtArgs>>): Prisma__detallecompraClient<$Result.GetResult<Prisma.$detallecompraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Detallecompra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {detallecompraFindUniqueOrThrowArgs} args - Arguments to find a Detallecompra
     * @example
     * // Get one Detallecompra
     * const detallecompra = await prisma.detallecompra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends detallecompraFindUniqueOrThrowArgs>(args: SelectSubset<T, detallecompraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__detallecompraClient<$Result.GetResult<Prisma.$detallecompraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detallecompra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detallecompraFindFirstArgs} args - Arguments to find a Detallecompra
     * @example
     * // Get one Detallecompra
     * const detallecompra = await prisma.detallecompra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends detallecompraFindFirstArgs>(args?: SelectSubset<T, detallecompraFindFirstArgs<ExtArgs>>): Prisma__detallecompraClient<$Result.GetResult<Prisma.$detallecompraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detallecompra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detallecompraFindFirstOrThrowArgs} args - Arguments to find a Detallecompra
     * @example
     * // Get one Detallecompra
     * const detallecompra = await prisma.detallecompra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends detallecompraFindFirstOrThrowArgs>(args?: SelectSubset<T, detallecompraFindFirstOrThrowArgs<ExtArgs>>): Prisma__detallecompraClient<$Result.GetResult<Prisma.$detallecompraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Detallecompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detallecompraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Detallecompras
     * const detallecompras = await prisma.detallecompra.findMany()
     * 
     * // Get first 10 Detallecompras
     * const detallecompras = await prisma.detallecompra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const detallecompraWithIdOnly = await prisma.detallecompra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends detallecompraFindManyArgs>(args?: SelectSubset<T, detallecompraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detallecompraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Detallecompra.
     * @param {detallecompraCreateArgs} args - Arguments to create a Detallecompra.
     * @example
     * // Create one Detallecompra
     * const Detallecompra = await prisma.detallecompra.create({
     *   data: {
     *     // ... data to create a Detallecompra
     *   }
     * })
     * 
     */
    create<T extends detallecompraCreateArgs>(args: SelectSubset<T, detallecompraCreateArgs<ExtArgs>>): Prisma__detallecompraClient<$Result.GetResult<Prisma.$detallecompraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Detallecompras.
     * @param {detallecompraCreateManyArgs} args - Arguments to create many Detallecompras.
     * @example
     * // Create many Detallecompras
     * const detallecompra = await prisma.detallecompra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends detallecompraCreateManyArgs>(args?: SelectSubset<T, detallecompraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Detallecompras and returns the data saved in the database.
     * @param {detallecompraCreateManyAndReturnArgs} args - Arguments to create many Detallecompras.
     * @example
     * // Create many Detallecompras
     * const detallecompra = await prisma.detallecompra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Detallecompras and only return the `id`
     * const detallecompraWithIdOnly = await prisma.detallecompra.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends detallecompraCreateManyAndReturnArgs>(args?: SelectSubset<T, detallecompraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detallecompraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Detallecompra.
     * @param {detallecompraDeleteArgs} args - Arguments to delete one Detallecompra.
     * @example
     * // Delete one Detallecompra
     * const Detallecompra = await prisma.detallecompra.delete({
     *   where: {
     *     // ... filter to delete one Detallecompra
     *   }
     * })
     * 
     */
    delete<T extends detallecompraDeleteArgs>(args: SelectSubset<T, detallecompraDeleteArgs<ExtArgs>>): Prisma__detallecompraClient<$Result.GetResult<Prisma.$detallecompraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Detallecompra.
     * @param {detallecompraUpdateArgs} args - Arguments to update one Detallecompra.
     * @example
     * // Update one Detallecompra
     * const detallecompra = await prisma.detallecompra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends detallecompraUpdateArgs>(args: SelectSubset<T, detallecompraUpdateArgs<ExtArgs>>): Prisma__detallecompraClient<$Result.GetResult<Prisma.$detallecompraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Detallecompras.
     * @param {detallecompraDeleteManyArgs} args - Arguments to filter Detallecompras to delete.
     * @example
     * // Delete a few Detallecompras
     * const { count } = await prisma.detallecompra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends detallecompraDeleteManyArgs>(args?: SelectSubset<T, detallecompraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detallecompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detallecompraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Detallecompras
     * const detallecompra = await prisma.detallecompra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends detallecompraUpdateManyArgs>(args: SelectSubset<T, detallecompraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detallecompras and returns the data updated in the database.
     * @param {detallecompraUpdateManyAndReturnArgs} args - Arguments to update many Detallecompras.
     * @example
     * // Update many Detallecompras
     * const detallecompra = await prisma.detallecompra.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Detallecompras and only return the `id`
     * const detallecompraWithIdOnly = await prisma.detallecompra.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends detallecompraUpdateManyAndReturnArgs>(args: SelectSubset<T, detallecompraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detallecompraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Detallecompra.
     * @param {detallecompraUpsertArgs} args - Arguments to update or create a Detallecompra.
     * @example
     * // Update or create a Detallecompra
     * const detallecompra = await prisma.detallecompra.upsert({
     *   create: {
     *     // ... data to create a Detallecompra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Detallecompra we want to update
     *   }
     * })
     */
    upsert<T extends detallecompraUpsertArgs>(args: SelectSubset<T, detallecompraUpsertArgs<ExtArgs>>): Prisma__detallecompraClient<$Result.GetResult<Prisma.$detallecompraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Detallecompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detallecompraCountArgs} args - Arguments to filter Detallecompras to count.
     * @example
     * // Count the number of Detallecompras
     * const count = await prisma.detallecompra.count({
     *   where: {
     *     // ... the filter for the Detallecompras we want to count
     *   }
     * })
    **/
    count<T extends detallecompraCountArgs>(
      args?: Subset<T, detallecompraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DetallecompraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Detallecompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetallecompraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DetallecompraAggregateArgs>(args: Subset<T, DetallecompraAggregateArgs>): Prisma.PrismaPromise<GetDetallecompraAggregateType<T>>

    /**
     * Group by Detallecompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detallecompraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends detallecompraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: detallecompraGroupByArgs['orderBy'] }
        : { orderBy?: detallecompraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, detallecompraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetallecompraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the detallecompra model
   */
  readonly fields: detallecompraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for detallecompra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__detallecompraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    compra<T extends detallecompra$compraArgs<ExtArgs> = {}>(args?: Subset<T, detallecompra$compraArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    lote<T extends detallecompra$loteArgs<ExtArgs> = {}>(args?: Subset<T, detallecompra$loteArgs<ExtArgs>>): Prisma__loteClient<$Result.GetResult<Prisma.$lotePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the detallecompra model
   */
  interface detallecompraFieldRefs {
    readonly id: FieldRef<"detallecompra", 'Int'>
    readonly compra_id: FieldRef<"detallecompra", 'Int'>
    readonly lote_id: FieldRef<"detallecompra", 'Int'>
    readonly cantidad: FieldRef<"detallecompra", 'Int'>
    readonly precio_unitario: FieldRef<"detallecompra", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * detallecompra findUnique
   */
  export type detallecompraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detallecompra
     */
    select?: detallecompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detallecompra
     */
    omit?: detallecompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detallecompraInclude<ExtArgs> | null
    /**
     * Filter, which detallecompra to fetch.
     */
    where: detallecompraWhereUniqueInput
  }

  /**
   * detallecompra findUniqueOrThrow
   */
  export type detallecompraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detallecompra
     */
    select?: detallecompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detallecompra
     */
    omit?: detallecompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detallecompraInclude<ExtArgs> | null
    /**
     * Filter, which detallecompra to fetch.
     */
    where: detallecompraWhereUniqueInput
  }

  /**
   * detallecompra findFirst
   */
  export type detallecompraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detallecompra
     */
    select?: detallecompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detallecompra
     */
    omit?: detallecompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detallecompraInclude<ExtArgs> | null
    /**
     * Filter, which detallecompra to fetch.
     */
    where?: detallecompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detallecompras to fetch.
     */
    orderBy?: detallecompraOrderByWithRelationInput | detallecompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detallecompras.
     */
    cursor?: detallecompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detallecompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detallecompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detallecompras.
     */
    distinct?: DetallecompraScalarFieldEnum | DetallecompraScalarFieldEnum[]
  }

  /**
   * detallecompra findFirstOrThrow
   */
  export type detallecompraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detallecompra
     */
    select?: detallecompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detallecompra
     */
    omit?: detallecompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detallecompraInclude<ExtArgs> | null
    /**
     * Filter, which detallecompra to fetch.
     */
    where?: detallecompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detallecompras to fetch.
     */
    orderBy?: detallecompraOrderByWithRelationInput | detallecompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detallecompras.
     */
    cursor?: detallecompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detallecompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detallecompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detallecompras.
     */
    distinct?: DetallecompraScalarFieldEnum | DetallecompraScalarFieldEnum[]
  }

  /**
   * detallecompra findMany
   */
  export type detallecompraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detallecompra
     */
    select?: detallecompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detallecompra
     */
    omit?: detallecompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detallecompraInclude<ExtArgs> | null
    /**
     * Filter, which detallecompras to fetch.
     */
    where?: detallecompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detallecompras to fetch.
     */
    orderBy?: detallecompraOrderByWithRelationInput | detallecompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing detallecompras.
     */
    cursor?: detallecompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detallecompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detallecompras.
     */
    skip?: number
    distinct?: DetallecompraScalarFieldEnum | DetallecompraScalarFieldEnum[]
  }

  /**
   * detallecompra create
   */
  export type detallecompraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detallecompra
     */
    select?: detallecompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detallecompra
     */
    omit?: detallecompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detallecompraInclude<ExtArgs> | null
    /**
     * The data needed to create a detallecompra.
     */
    data: XOR<detallecompraCreateInput, detallecompraUncheckedCreateInput>
  }

  /**
   * detallecompra createMany
   */
  export type detallecompraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many detallecompras.
     */
    data: detallecompraCreateManyInput | detallecompraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * detallecompra createManyAndReturn
   */
  export type detallecompraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detallecompra
     */
    select?: detallecompraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detallecompra
     */
    omit?: detallecompraOmit<ExtArgs> | null
    /**
     * The data used to create many detallecompras.
     */
    data: detallecompraCreateManyInput | detallecompraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detallecompraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * detallecompra update
   */
  export type detallecompraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detallecompra
     */
    select?: detallecompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detallecompra
     */
    omit?: detallecompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detallecompraInclude<ExtArgs> | null
    /**
     * The data needed to update a detallecompra.
     */
    data: XOR<detallecompraUpdateInput, detallecompraUncheckedUpdateInput>
    /**
     * Choose, which detallecompra to update.
     */
    where: detallecompraWhereUniqueInput
  }

  /**
   * detallecompra updateMany
   */
  export type detallecompraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update detallecompras.
     */
    data: XOR<detallecompraUpdateManyMutationInput, detallecompraUncheckedUpdateManyInput>
    /**
     * Filter which detallecompras to update
     */
    where?: detallecompraWhereInput
    /**
     * Limit how many detallecompras to update.
     */
    limit?: number
  }

  /**
   * detallecompra updateManyAndReturn
   */
  export type detallecompraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detallecompra
     */
    select?: detallecompraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detallecompra
     */
    omit?: detallecompraOmit<ExtArgs> | null
    /**
     * The data used to update detallecompras.
     */
    data: XOR<detallecompraUpdateManyMutationInput, detallecompraUncheckedUpdateManyInput>
    /**
     * Filter which detallecompras to update
     */
    where?: detallecompraWhereInput
    /**
     * Limit how many detallecompras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detallecompraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * detallecompra upsert
   */
  export type detallecompraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detallecompra
     */
    select?: detallecompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detallecompra
     */
    omit?: detallecompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detallecompraInclude<ExtArgs> | null
    /**
     * The filter to search for the detallecompra to update in case it exists.
     */
    where: detallecompraWhereUniqueInput
    /**
     * In case the detallecompra found by the `where` argument doesn't exist, create a new detallecompra with this data.
     */
    create: XOR<detallecompraCreateInput, detallecompraUncheckedCreateInput>
    /**
     * In case the detallecompra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<detallecompraUpdateInput, detallecompraUncheckedUpdateInput>
  }

  /**
   * detallecompra delete
   */
  export type detallecompraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detallecompra
     */
    select?: detallecompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detallecompra
     */
    omit?: detallecompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detallecompraInclude<ExtArgs> | null
    /**
     * Filter which detallecompra to delete.
     */
    where: detallecompraWhereUniqueInput
  }

  /**
   * detallecompra deleteMany
   */
  export type detallecompraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detallecompras to delete
     */
    where?: detallecompraWhereInput
    /**
     * Limit how many detallecompras to delete.
     */
    limit?: number
  }

  /**
   * detallecompra.compra
   */
  export type detallecompra$compraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    where?: compraWhereInput
  }

  /**
   * detallecompra.lote
   */
  export type detallecompra$loteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteInclude<ExtArgs> | null
    where?: loteWhereInput
  }

  /**
   * detallecompra without action
   */
  export type detallecompraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detallecompra
     */
    select?: detallecompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detallecompra
     */
    omit?: detallecompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detallecompraInclude<ExtArgs> | null
  }


  /**
   * Model detalleordencompra
   */

  export type AggregateDetalleordencompra = {
    _count: DetalleordencompraCountAggregateOutputType | null
    _avg: DetalleordencompraAvgAggregateOutputType | null
    _sum: DetalleordencompraSumAggregateOutputType | null
    _min: DetalleordencompraMinAggregateOutputType | null
    _max: DetalleordencompraMaxAggregateOutputType | null
  }

  export type DetalleordencompraAvgAggregateOutputType = {
    id: number | null
    orden_id: number | null
    producto_id: number | null
    cantidad_solicitada: number | null
    precio_estimado: Decimal | null
  }

  export type DetalleordencompraSumAggregateOutputType = {
    id: number | null
    orden_id: number | null
    producto_id: number | null
    cantidad_solicitada: number | null
    precio_estimado: Decimal | null
  }

  export type DetalleordencompraMinAggregateOutputType = {
    id: number | null
    orden_id: number | null
    producto_id: number | null
    cantidad_solicitada: number | null
    precio_estimado: Decimal | null
  }

  export type DetalleordencompraMaxAggregateOutputType = {
    id: number | null
    orden_id: number | null
    producto_id: number | null
    cantidad_solicitada: number | null
    precio_estimado: Decimal | null
  }

  export type DetalleordencompraCountAggregateOutputType = {
    id: number
    orden_id: number
    producto_id: number
    cantidad_solicitada: number
    precio_estimado: number
    _all: number
  }


  export type DetalleordencompraAvgAggregateInputType = {
    id?: true
    orden_id?: true
    producto_id?: true
    cantidad_solicitada?: true
    precio_estimado?: true
  }

  export type DetalleordencompraSumAggregateInputType = {
    id?: true
    orden_id?: true
    producto_id?: true
    cantidad_solicitada?: true
    precio_estimado?: true
  }

  export type DetalleordencompraMinAggregateInputType = {
    id?: true
    orden_id?: true
    producto_id?: true
    cantidad_solicitada?: true
    precio_estimado?: true
  }

  export type DetalleordencompraMaxAggregateInputType = {
    id?: true
    orden_id?: true
    producto_id?: true
    cantidad_solicitada?: true
    precio_estimado?: true
  }

  export type DetalleordencompraCountAggregateInputType = {
    id?: true
    orden_id?: true
    producto_id?: true
    cantidad_solicitada?: true
    precio_estimado?: true
    _all?: true
  }

  export type DetalleordencompraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalleordencompra to aggregate.
     */
    where?: detalleordencompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalleordencompras to fetch.
     */
    orderBy?: detalleordencompraOrderByWithRelationInput | detalleordencompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: detalleordencompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalleordencompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalleordencompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned detalleordencompras
    **/
    _count?: true | DetalleordencompraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DetalleordencompraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DetalleordencompraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DetalleordencompraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DetalleordencompraMaxAggregateInputType
  }

  export type GetDetalleordencompraAggregateType<T extends DetalleordencompraAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalleordencompra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalleordencompra[P]>
      : GetScalarType<T[P], AggregateDetalleordencompra[P]>
  }




  export type detalleordencompraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalleordencompraWhereInput
    orderBy?: detalleordencompraOrderByWithAggregationInput | detalleordencompraOrderByWithAggregationInput[]
    by: DetalleordencompraScalarFieldEnum[] | DetalleordencompraScalarFieldEnum
    having?: detalleordencompraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DetalleordencompraCountAggregateInputType | true
    _avg?: DetalleordencompraAvgAggregateInputType
    _sum?: DetalleordencompraSumAggregateInputType
    _min?: DetalleordencompraMinAggregateInputType
    _max?: DetalleordencompraMaxAggregateInputType
  }

  export type DetalleordencompraGroupByOutputType = {
    id: number
    orden_id: number | null
    producto_id: number | null
    cantidad_solicitada: number
    precio_estimado: Decimal | null
    _count: DetalleordencompraCountAggregateOutputType | null
    _avg: DetalleordencompraAvgAggregateOutputType | null
    _sum: DetalleordencompraSumAggregateOutputType | null
    _min: DetalleordencompraMinAggregateOutputType | null
    _max: DetalleordencompraMaxAggregateOutputType | null
  }

  type GetDetalleordencompraGroupByPayload<T extends detalleordencompraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DetalleordencompraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DetalleordencompraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DetalleordencompraGroupByOutputType[P]>
            : GetScalarType<T[P], DetalleordencompraGroupByOutputType[P]>
        }
      >
    >


  export type detalleordencompraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orden_id?: boolean
    producto_id?: boolean
    cantidad_solicitada?: boolean
    precio_estimado?: boolean
    ordencompra?: boolean | detalleordencompra$ordencompraArgs<ExtArgs>
    producto?: boolean | detalleordencompra$productoArgs<ExtArgs>
  }, ExtArgs["result"]["detalleordencompra"]>

  export type detalleordencompraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orden_id?: boolean
    producto_id?: boolean
    cantidad_solicitada?: boolean
    precio_estimado?: boolean
    ordencompra?: boolean | detalleordencompra$ordencompraArgs<ExtArgs>
    producto?: boolean | detalleordencompra$productoArgs<ExtArgs>
  }, ExtArgs["result"]["detalleordencompra"]>

  export type detalleordencompraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orden_id?: boolean
    producto_id?: boolean
    cantidad_solicitada?: boolean
    precio_estimado?: boolean
    ordencompra?: boolean | detalleordencompra$ordencompraArgs<ExtArgs>
    producto?: boolean | detalleordencompra$productoArgs<ExtArgs>
  }, ExtArgs["result"]["detalleordencompra"]>

  export type detalleordencompraSelectScalar = {
    id?: boolean
    orden_id?: boolean
    producto_id?: boolean
    cantidad_solicitada?: boolean
    precio_estimado?: boolean
  }

  export type detalleordencompraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orden_id" | "producto_id" | "cantidad_solicitada" | "precio_estimado", ExtArgs["result"]["detalleordencompra"]>
  export type detalleordencompraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordencompra?: boolean | detalleordencompra$ordencompraArgs<ExtArgs>
    producto?: boolean | detalleordencompra$productoArgs<ExtArgs>
  }
  export type detalleordencompraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordencompra?: boolean | detalleordencompra$ordencompraArgs<ExtArgs>
    producto?: boolean | detalleordencompra$productoArgs<ExtArgs>
  }
  export type detalleordencompraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordencompra?: boolean | detalleordencompra$ordencompraArgs<ExtArgs>
    producto?: boolean | detalleordencompra$productoArgs<ExtArgs>
  }

  export type $detalleordencompraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "detalleordencompra"
    objects: {
      ordencompra: Prisma.$ordencompraPayload<ExtArgs> | null
      producto: Prisma.$productoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      orden_id: number | null
      producto_id: number | null
      cantidad_solicitada: number
      precio_estimado: Prisma.Decimal | null
    }, ExtArgs["result"]["detalleordencompra"]>
    composites: {}
  }

  type detalleordencompraGetPayload<S extends boolean | null | undefined | detalleordencompraDefaultArgs> = $Result.GetResult<Prisma.$detalleordencompraPayload, S>

  type detalleordencompraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<detalleordencompraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DetalleordencompraCountAggregateInputType | true
    }

  export interface detalleordencompraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['detalleordencompra'], meta: { name: 'detalleordencompra' } }
    /**
     * Find zero or one Detalleordencompra that matches the filter.
     * @param {detalleordencompraFindUniqueArgs} args - Arguments to find a Detalleordencompra
     * @example
     * // Get one Detalleordencompra
     * const detalleordencompra = await prisma.detalleordencompra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends detalleordencompraFindUniqueArgs>(args: SelectSubset<T, detalleordencompraFindUniqueArgs<ExtArgs>>): Prisma__detalleordencompraClient<$Result.GetResult<Prisma.$detalleordencompraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Detalleordencompra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {detalleordencompraFindUniqueOrThrowArgs} args - Arguments to find a Detalleordencompra
     * @example
     * // Get one Detalleordencompra
     * const detalleordencompra = await prisma.detalleordencompra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends detalleordencompraFindUniqueOrThrowArgs>(args: SelectSubset<T, detalleordencompraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__detalleordencompraClient<$Result.GetResult<Prisma.$detalleordencompraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalleordencompra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleordencompraFindFirstArgs} args - Arguments to find a Detalleordencompra
     * @example
     * // Get one Detalleordencompra
     * const detalleordencompra = await prisma.detalleordencompra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends detalleordencompraFindFirstArgs>(args?: SelectSubset<T, detalleordencompraFindFirstArgs<ExtArgs>>): Prisma__detalleordencompraClient<$Result.GetResult<Prisma.$detalleordencompraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalleordencompra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleordencompraFindFirstOrThrowArgs} args - Arguments to find a Detalleordencompra
     * @example
     * // Get one Detalleordencompra
     * const detalleordencompra = await prisma.detalleordencompra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends detalleordencompraFindFirstOrThrowArgs>(args?: SelectSubset<T, detalleordencompraFindFirstOrThrowArgs<ExtArgs>>): Prisma__detalleordencompraClient<$Result.GetResult<Prisma.$detalleordencompraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Detalleordencompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleordencompraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Detalleordencompras
     * const detalleordencompras = await prisma.detalleordencompra.findMany()
     * 
     * // Get first 10 Detalleordencompras
     * const detalleordencompras = await prisma.detalleordencompra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const detalleordencompraWithIdOnly = await prisma.detalleordencompra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends detalleordencompraFindManyArgs>(args?: SelectSubset<T, detalleordencompraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleordencompraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Detalleordencompra.
     * @param {detalleordencompraCreateArgs} args - Arguments to create a Detalleordencompra.
     * @example
     * // Create one Detalleordencompra
     * const Detalleordencompra = await prisma.detalleordencompra.create({
     *   data: {
     *     // ... data to create a Detalleordencompra
     *   }
     * })
     * 
     */
    create<T extends detalleordencompraCreateArgs>(args: SelectSubset<T, detalleordencompraCreateArgs<ExtArgs>>): Prisma__detalleordencompraClient<$Result.GetResult<Prisma.$detalleordencompraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Detalleordencompras.
     * @param {detalleordencompraCreateManyArgs} args - Arguments to create many Detalleordencompras.
     * @example
     * // Create many Detalleordencompras
     * const detalleordencompra = await prisma.detalleordencompra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends detalleordencompraCreateManyArgs>(args?: SelectSubset<T, detalleordencompraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Detalleordencompras and returns the data saved in the database.
     * @param {detalleordencompraCreateManyAndReturnArgs} args - Arguments to create many Detalleordencompras.
     * @example
     * // Create many Detalleordencompras
     * const detalleordencompra = await prisma.detalleordencompra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Detalleordencompras and only return the `id`
     * const detalleordencompraWithIdOnly = await prisma.detalleordencompra.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends detalleordencompraCreateManyAndReturnArgs>(args?: SelectSubset<T, detalleordencompraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleordencompraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Detalleordencompra.
     * @param {detalleordencompraDeleteArgs} args - Arguments to delete one Detalleordencompra.
     * @example
     * // Delete one Detalleordencompra
     * const Detalleordencompra = await prisma.detalleordencompra.delete({
     *   where: {
     *     // ... filter to delete one Detalleordencompra
     *   }
     * })
     * 
     */
    delete<T extends detalleordencompraDeleteArgs>(args: SelectSubset<T, detalleordencompraDeleteArgs<ExtArgs>>): Prisma__detalleordencompraClient<$Result.GetResult<Prisma.$detalleordencompraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Detalleordencompra.
     * @param {detalleordencompraUpdateArgs} args - Arguments to update one Detalleordencompra.
     * @example
     * // Update one Detalleordencompra
     * const detalleordencompra = await prisma.detalleordencompra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends detalleordencompraUpdateArgs>(args: SelectSubset<T, detalleordencompraUpdateArgs<ExtArgs>>): Prisma__detalleordencompraClient<$Result.GetResult<Prisma.$detalleordencompraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Detalleordencompras.
     * @param {detalleordencompraDeleteManyArgs} args - Arguments to filter Detalleordencompras to delete.
     * @example
     * // Delete a few Detalleordencompras
     * const { count } = await prisma.detalleordencompra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends detalleordencompraDeleteManyArgs>(args?: SelectSubset<T, detalleordencompraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalleordencompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleordencompraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Detalleordencompras
     * const detalleordencompra = await prisma.detalleordencompra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends detalleordencompraUpdateManyArgs>(args: SelectSubset<T, detalleordencompraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalleordencompras and returns the data updated in the database.
     * @param {detalleordencompraUpdateManyAndReturnArgs} args - Arguments to update many Detalleordencompras.
     * @example
     * // Update many Detalleordencompras
     * const detalleordencompra = await prisma.detalleordencompra.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Detalleordencompras and only return the `id`
     * const detalleordencompraWithIdOnly = await prisma.detalleordencompra.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends detalleordencompraUpdateManyAndReturnArgs>(args: SelectSubset<T, detalleordencompraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleordencompraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Detalleordencompra.
     * @param {detalleordencompraUpsertArgs} args - Arguments to update or create a Detalleordencompra.
     * @example
     * // Update or create a Detalleordencompra
     * const detalleordencompra = await prisma.detalleordencompra.upsert({
     *   create: {
     *     // ... data to create a Detalleordencompra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Detalleordencompra we want to update
     *   }
     * })
     */
    upsert<T extends detalleordencompraUpsertArgs>(args: SelectSubset<T, detalleordencompraUpsertArgs<ExtArgs>>): Prisma__detalleordencompraClient<$Result.GetResult<Prisma.$detalleordencompraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Detalleordencompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleordencompraCountArgs} args - Arguments to filter Detalleordencompras to count.
     * @example
     * // Count the number of Detalleordencompras
     * const count = await prisma.detalleordencompra.count({
     *   where: {
     *     // ... the filter for the Detalleordencompras we want to count
     *   }
     * })
    **/
    count<T extends detalleordencompraCountArgs>(
      args?: Subset<T, detalleordencompraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DetalleordencompraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Detalleordencompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleordencompraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DetalleordencompraAggregateArgs>(args: Subset<T, DetalleordencompraAggregateArgs>): Prisma.PrismaPromise<GetDetalleordencompraAggregateType<T>>

    /**
     * Group by Detalleordencompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleordencompraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends detalleordencompraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: detalleordencompraGroupByArgs['orderBy'] }
        : { orderBy?: detalleordencompraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, detalleordencompraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalleordencompraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the detalleordencompra model
   */
  readonly fields: detalleordencompraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for detalleordencompra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__detalleordencompraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ordencompra<T extends detalleordencompra$ordencompraArgs<ExtArgs> = {}>(args?: Subset<T, detalleordencompra$ordencompraArgs<ExtArgs>>): Prisma__ordencompraClient<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    producto<T extends detalleordencompra$productoArgs<ExtArgs> = {}>(args?: Subset<T, detalleordencompra$productoArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the detalleordencompra model
   */
  interface detalleordencompraFieldRefs {
    readonly id: FieldRef<"detalleordencompra", 'Int'>
    readonly orden_id: FieldRef<"detalleordencompra", 'Int'>
    readonly producto_id: FieldRef<"detalleordencompra", 'Int'>
    readonly cantidad_solicitada: FieldRef<"detalleordencompra", 'Int'>
    readonly precio_estimado: FieldRef<"detalleordencompra", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * detalleordencompra findUnique
   */
  export type detalleordencompraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleordencompra
     */
    select?: detalleordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleordencompra
     */
    omit?: detalleordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleordencompraInclude<ExtArgs> | null
    /**
     * Filter, which detalleordencompra to fetch.
     */
    where: detalleordencompraWhereUniqueInput
  }

  /**
   * detalleordencompra findUniqueOrThrow
   */
  export type detalleordencompraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleordencompra
     */
    select?: detalleordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleordencompra
     */
    omit?: detalleordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleordencompraInclude<ExtArgs> | null
    /**
     * Filter, which detalleordencompra to fetch.
     */
    where: detalleordencompraWhereUniqueInput
  }

  /**
   * detalleordencompra findFirst
   */
  export type detalleordencompraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleordencompra
     */
    select?: detalleordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleordencompra
     */
    omit?: detalleordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleordencompraInclude<ExtArgs> | null
    /**
     * Filter, which detalleordencompra to fetch.
     */
    where?: detalleordencompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalleordencompras to fetch.
     */
    orderBy?: detalleordencompraOrderByWithRelationInput | detalleordencompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalleordencompras.
     */
    cursor?: detalleordencompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalleordencompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalleordencompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalleordencompras.
     */
    distinct?: DetalleordencompraScalarFieldEnum | DetalleordencompraScalarFieldEnum[]
  }

  /**
   * detalleordencompra findFirstOrThrow
   */
  export type detalleordencompraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleordencompra
     */
    select?: detalleordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleordencompra
     */
    omit?: detalleordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleordencompraInclude<ExtArgs> | null
    /**
     * Filter, which detalleordencompra to fetch.
     */
    where?: detalleordencompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalleordencompras to fetch.
     */
    orderBy?: detalleordencompraOrderByWithRelationInput | detalleordencompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalleordencompras.
     */
    cursor?: detalleordencompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalleordencompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalleordencompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalleordencompras.
     */
    distinct?: DetalleordencompraScalarFieldEnum | DetalleordencompraScalarFieldEnum[]
  }

  /**
   * detalleordencompra findMany
   */
  export type detalleordencompraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleordencompra
     */
    select?: detalleordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleordencompra
     */
    omit?: detalleordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleordencompraInclude<ExtArgs> | null
    /**
     * Filter, which detalleordencompras to fetch.
     */
    where?: detalleordencompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalleordencompras to fetch.
     */
    orderBy?: detalleordencompraOrderByWithRelationInput | detalleordencompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing detalleordencompras.
     */
    cursor?: detalleordencompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalleordencompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalleordencompras.
     */
    skip?: number
    distinct?: DetalleordencompraScalarFieldEnum | DetalleordencompraScalarFieldEnum[]
  }

  /**
   * detalleordencompra create
   */
  export type detalleordencompraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleordencompra
     */
    select?: detalleordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleordencompra
     */
    omit?: detalleordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleordencompraInclude<ExtArgs> | null
    /**
     * The data needed to create a detalleordencompra.
     */
    data: XOR<detalleordencompraCreateInput, detalleordencompraUncheckedCreateInput>
  }

  /**
   * detalleordencompra createMany
   */
  export type detalleordencompraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many detalleordencompras.
     */
    data: detalleordencompraCreateManyInput | detalleordencompraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * detalleordencompra createManyAndReturn
   */
  export type detalleordencompraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleordencompra
     */
    select?: detalleordencompraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalleordencompra
     */
    omit?: detalleordencompraOmit<ExtArgs> | null
    /**
     * The data used to create many detalleordencompras.
     */
    data: detalleordencompraCreateManyInput | detalleordencompraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleordencompraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalleordencompra update
   */
  export type detalleordencompraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleordencompra
     */
    select?: detalleordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleordencompra
     */
    omit?: detalleordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleordencompraInclude<ExtArgs> | null
    /**
     * The data needed to update a detalleordencompra.
     */
    data: XOR<detalleordencompraUpdateInput, detalleordencompraUncheckedUpdateInput>
    /**
     * Choose, which detalleordencompra to update.
     */
    where: detalleordencompraWhereUniqueInput
  }

  /**
   * detalleordencompra updateMany
   */
  export type detalleordencompraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update detalleordencompras.
     */
    data: XOR<detalleordencompraUpdateManyMutationInput, detalleordencompraUncheckedUpdateManyInput>
    /**
     * Filter which detalleordencompras to update
     */
    where?: detalleordencompraWhereInput
    /**
     * Limit how many detalleordencompras to update.
     */
    limit?: number
  }

  /**
   * detalleordencompra updateManyAndReturn
   */
  export type detalleordencompraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleordencompra
     */
    select?: detalleordencompraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalleordencompra
     */
    omit?: detalleordencompraOmit<ExtArgs> | null
    /**
     * The data used to update detalleordencompras.
     */
    data: XOR<detalleordencompraUpdateManyMutationInput, detalleordencompraUncheckedUpdateManyInput>
    /**
     * Filter which detalleordencompras to update
     */
    where?: detalleordencompraWhereInput
    /**
     * Limit how many detalleordencompras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleordencompraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalleordencompra upsert
   */
  export type detalleordencompraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleordencompra
     */
    select?: detalleordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleordencompra
     */
    omit?: detalleordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleordencompraInclude<ExtArgs> | null
    /**
     * The filter to search for the detalleordencompra to update in case it exists.
     */
    where: detalleordencompraWhereUniqueInput
    /**
     * In case the detalleordencompra found by the `where` argument doesn't exist, create a new detalleordencompra with this data.
     */
    create: XOR<detalleordencompraCreateInput, detalleordencompraUncheckedCreateInput>
    /**
     * In case the detalleordencompra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<detalleordencompraUpdateInput, detalleordencompraUncheckedUpdateInput>
  }

  /**
   * detalleordencompra delete
   */
  export type detalleordencompraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleordencompra
     */
    select?: detalleordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleordencompra
     */
    omit?: detalleordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleordencompraInclude<ExtArgs> | null
    /**
     * Filter which detalleordencompra to delete.
     */
    where: detalleordencompraWhereUniqueInput
  }

  /**
   * detalleordencompra deleteMany
   */
  export type detalleordencompraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalleordencompras to delete
     */
    where?: detalleordencompraWhereInput
    /**
     * Limit how many detalleordencompras to delete.
     */
    limit?: number
  }

  /**
   * detalleordencompra.ordencompra
   */
  export type detalleordencompra$ordencompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraInclude<ExtArgs> | null
    where?: ordencompraWhereInput
  }

  /**
   * detalleordencompra.producto
   */
  export type detalleordencompra$productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    where?: productoWhereInput
  }

  /**
   * detalleordencompra without action
   */
  export type detalleordencompraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleordencompra
     */
    select?: detalleordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleordencompra
     */
    omit?: detalleordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleordencompraInclude<ExtArgs> | null
  }


  /**
   * Model detalleventa
   */

  export type AggregateDetalleventa = {
    _count: DetalleventaCountAggregateOutputType | null
    _avg: DetalleventaAvgAggregateOutputType | null
    _sum: DetalleventaSumAggregateOutputType | null
    _min: DetalleventaMinAggregateOutputType | null
    _max: DetalleventaMaxAggregateOutputType | null
  }

  export type DetalleventaAvgAggregateOutputType = {
    id: number | null
    venta_id: number | null
    codigo_barra_id: number | null
    producto_id: number | null
    tipo_venta_id: number | null
    tipo_lista_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
  }

  export type DetalleventaSumAggregateOutputType = {
    id: number | null
    venta_id: number | null
    codigo_barra_id: number | null
    producto_id: number | null
    tipo_venta_id: number | null
    tipo_lista_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
  }

  export type DetalleventaMinAggregateOutputType = {
    id: number | null
    venta_id: number | null
    codigo_barra_id: number | null
    producto_id: number | null
    tipo_venta_id: number | null
    tipo_lista_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
  }

  export type DetalleventaMaxAggregateOutputType = {
    id: number | null
    venta_id: number | null
    codigo_barra_id: number | null
    producto_id: number | null
    tipo_venta_id: number | null
    tipo_lista_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
  }

  export type DetalleventaCountAggregateOutputType = {
    id: number
    venta_id: number
    codigo_barra_id: number
    producto_id: number
    tipo_venta_id: number
    tipo_lista_id: number
    cantidad: number
    precio_unitario: number
    _all: number
  }


  export type DetalleventaAvgAggregateInputType = {
    id?: true
    venta_id?: true
    codigo_barra_id?: true
    producto_id?: true
    tipo_venta_id?: true
    tipo_lista_id?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type DetalleventaSumAggregateInputType = {
    id?: true
    venta_id?: true
    codigo_barra_id?: true
    producto_id?: true
    tipo_venta_id?: true
    tipo_lista_id?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type DetalleventaMinAggregateInputType = {
    id?: true
    venta_id?: true
    codigo_barra_id?: true
    producto_id?: true
    tipo_venta_id?: true
    tipo_lista_id?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type DetalleventaMaxAggregateInputType = {
    id?: true
    venta_id?: true
    codigo_barra_id?: true
    producto_id?: true
    tipo_venta_id?: true
    tipo_lista_id?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type DetalleventaCountAggregateInputType = {
    id?: true
    venta_id?: true
    codigo_barra_id?: true
    producto_id?: true
    tipo_venta_id?: true
    tipo_lista_id?: true
    cantidad?: true
    precio_unitario?: true
    _all?: true
  }

  export type DetalleventaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalleventa to aggregate.
     */
    where?: detalleventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalleventas to fetch.
     */
    orderBy?: detalleventaOrderByWithRelationInput | detalleventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: detalleventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalleventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalleventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned detalleventas
    **/
    _count?: true | DetalleventaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DetalleventaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DetalleventaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DetalleventaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DetalleventaMaxAggregateInputType
  }

  export type GetDetalleventaAggregateType<T extends DetalleventaAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalleventa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalleventa[P]>
      : GetScalarType<T[P], AggregateDetalleventa[P]>
  }




  export type detalleventaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalleventaWhereInput
    orderBy?: detalleventaOrderByWithAggregationInput | detalleventaOrderByWithAggregationInput[]
    by: DetalleventaScalarFieldEnum[] | DetalleventaScalarFieldEnum
    having?: detalleventaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DetalleventaCountAggregateInputType | true
    _avg?: DetalleventaAvgAggregateInputType
    _sum?: DetalleventaSumAggregateInputType
    _min?: DetalleventaMinAggregateInputType
    _max?: DetalleventaMaxAggregateInputType
  }

  export type DetalleventaGroupByOutputType = {
    id: number
    venta_id: number | null
    codigo_barra_id: number | null
    producto_id: number | null
    tipo_venta_id: number | null
    tipo_lista_id: number | null
    cantidad: number
    precio_unitario: Decimal
    _count: DetalleventaCountAggregateOutputType | null
    _avg: DetalleventaAvgAggregateOutputType | null
    _sum: DetalleventaSumAggregateOutputType | null
    _min: DetalleventaMinAggregateOutputType | null
    _max: DetalleventaMaxAggregateOutputType | null
  }

  type GetDetalleventaGroupByPayload<T extends detalleventaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DetalleventaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DetalleventaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DetalleventaGroupByOutputType[P]>
            : GetScalarType<T[P], DetalleventaGroupByOutputType[P]>
        }
      >
    >


  export type detalleventaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    venta_id?: boolean
    codigo_barra_id?: boolean
    producto_id?: boolean
    tipo_venta_id?: boolean
    tipo_lista_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    codigobarra?: boolean | detalleventa$codigobarraArgs<ExtArgs>
    producto?: boolean | detalleventa$productoArgs<ExtArgs>
    tipolistaprecio?: boolean | detalleventa$tipolistaprecioArgs<ExtArgs>
    tipoventa?: boolean | detalleventa$tipoventaArgs<ExtArgs>
    venta?: boolean | detalleventa$ventaArgs<ExtArgs>
  }, ExtArgs["result"]["detalleventa"]>

  export type detalleventaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    venta_id?: boolean
    codigo_barra_id?: boolean
    producto_id?: boolean
    tipo_venta_id?: boolean
    tipo_lista_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    codigobarra?: boolean | detalleventa$codigobarraArgs<ExtArgs>
    producto?: boolean | detalleventa$productoArgs<ExtArgs>
    tipolistaprecio?: boolean | detalleventa$tipolistaprecioArgs<ExtArgs>
    tipoventa?: boolean | detalleventa$tipoventaArgs<ExtArgs>
    venta?: boolean | detalleventa$ventaArgs<ExtArgs>
  }, ExtArgs["result"]["detalleventa"]>

  export type detalleventaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    venta_id?: boolean
    codigo_barra_id?: boolean
    producto_id?: boolean
    tipo_venta_id?: boolean
    tipo_lista_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    codigobarra?: boolean | detalleventa$codigobarraArgs<ExtArgs>
    producto?: boolean | detalleventa$productoArgs<ExtArgs>
    tipolistaprecio?: boolean | detalleventa$tipolistaprecioArgs<ExtArgs>
    tipoventa?: boolean | detalleventa$tipoventaArgs<ExtArgs>
    venta?: boolean | detalleventa$ventaArgs<ExtArgs>
  }, ExtArgs["result"]["detalleventa"]>

  export type detalleventaSelectScalar = {
    id?: boolean
    venta_id?: boolean
    codigo_barra_id?: boolean
    producto_id?: boolean
    tipo_venta_id?: boolean
    tipo_lista_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
  }

  export type detalleventaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "venta_id" | "codigo_barra_id" | "producto_id" | "tipo_venta_id" | "tipo_lista_id" | "cantidad" | "precio_unitario", ExtArgs["result"]["detalleventa"]>
  export type detalleventaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    codigobarra?: boolean | detalleventa$codigobarraArgs<ExtArgs>
    producto?: boolean | detalleventa$productoArgs<ExtArgs>
    tipolistaprecio?: boolean | detalleventa$tipolistaprecioArgs<ExtArgs>
    tipoventa?: boolean | detalleventa$tipoventaArgs<ExtArgs>
    venta?: boolean | detalleventa$ventaArgs<ExtArgs>
  }
  export type detalleventaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    codigobarra?: boolean | detalleventa$codigobarraArgs<ExtArgs>
    producto?: boolean | detalleventa$productoArgs<ExtArgs>
    tipolistaprecio?: boolean | detalleventa$tipolistaprecioArgs<ExtArgs>
    tipoventa?: boolean | detalleventa$tipoventaArgs<ExtArgs>
    venta?: boolean | detalleventa$ventaArgs<ExtArgs>
  }
  export type detalleventaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    codigobarra?: boolean | detalleventa$codigobarraArgs<ExtArgs>
    producto?: boolean | detalleventa$productoArgs<ExtArgs>
    tipolistaprecio?: boolean | detalleventa$tipolistaprecioArgs<ExtArgs>
    tipoventa?: boolean | detalleventa$tipoventaArgs<ExtArgs>
    venta?: boolean | detalleventa$ventaArgs<ExtArgs>
  }

  export type $detalleventaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "detalleventa"
    objects: {
      codigobarra: Prisma.$codigobarraPayload<ExtArgs> | null
      producto: Prisma.$productoPayload<ExtArgs> | null
      tipolistaprecio: Prisma.$tipolistaprecioPayload<ExtArgs> | null
      tipoventa: Prisma.$tipoventaPayload<ExtArgs> | null
      venta: Prisma.$ventaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      venta_id: number | null
      codigo_barra_id: number | null
      producto_id: number | null
      tipo_venta_id: number | null
      tipo_lista_id: number | null
      cantidad: number
      precio_unitario: Prisma.Decimal
    }, ExtArgs["result"]["detalleventa"]>
    composites: {}
  }

  type detalleventaGetPayload<S extends boolean | null | undefined | detalleventaDefaultArgs> = $Result.GetResult<Prisma.$detalleventaPayload, S>

  type detalleventaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<detalleventaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DetalleventaCountAggregateInputType | true
    }

  export interface detalleventaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['detalleventa'], meta: { name: 'detalleventa' } }
    /**
     * Find zero or one Detalleventa that matches the filter.
     * @param {detalleventaFindUniqueArgs} args - Arguments to find a Detalleventa
     * @example
     * // Get one Detalleventa
     * const detalleventa = await prisma.detalleventa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends detalleventaFindUniqueArgs>(args: SelectSubset<T, detalleventaFindUniqueArgs<ExtArgs>>): Prisma__detalleventaClient<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Detalleventa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {detalleventaFindUniqueOrThrowArgs} args - Arguments to find a Detalleventa
     * @example
     * // Get one Detalleventa
     * const detalleventa = await prisma.detalleventa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends detalleventaFindUniqueOrThrowArgs>(args: SelectSubset<T, detalleventaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__detalleventaClient<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalleventa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleventaFindFirstArgs} args - Arguments to find a Detalleventa
     * @example
     * // Get one Detalleventa
     * const detalleventa = await prisma.detalleventa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends detalleventaFindFirstArgs>(args?: SelectSubset<T, detalleventaFindFirstArgs<ExtArgs>>): Prisma__detalleventaClient<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalleventa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleventaFindFirstOrThrowArgs} args - Arguments to find a Detalleventa
     * @example
     * // Get one Detalleventa
     * const detalleventa = await prisma.detalleventa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends detalleventaFindFirstOrThrowArgs>(args?: SelectSubset<T, detalleventaFindFirstOrThrowArgs<ExtArgs>>): Prisma__detalleventaClient<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Detalleventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleventaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Detalleventas
     * const detalleventas = await prisma.detalleventa.findMany()
     * 
     * // Get first 10 Detalleventas
     * const detalleventas = await prisma.detalleventa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const detalleventaWithIdOnly = await prisma.detalleventa.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends detalleventaFindManyArgs>(args?: SelectSubset<T, detalleventaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Detalleventa.
     * @param {detalleventaCreateArgs} args - Arguments to create a Detalleventa.
     * @example
     * // Create one Detalleventa
     * const Detalleventa = await prisma.detalleventa.create({
     *   data: {
     *     // ... data to create a Detalleventa
     *   }
     * })
     * 
     */
    create<T extends detalleventaCreateArgs>(args: SelectSubset<T, detalleventaCreateArgs<ExtArgs>>): Prisma__detalleventaClient<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Detalleventas.
     * @param {detalleventaCreateManyArgs} args - Arguments to create many Detalleventas.
     * @example
     * // Create many Detalleventas
     * const detalleventa = await prisma.detalleventa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends detalleventaCreateManyArgs>(args?: SelectSubset<T, detalleventaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Detalleventas and returns the data saved in the database.
     * @param {detalleventaCreateManyAndReturnArgs} args - Arguments to create many Detalleventas.
     * @example
     * // Create many Detalleventas
     * const detalleventa = await prisma.detalleventa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Detalleventas and only return the `id`
     * const detalleventaWithIdOnly = await prisma.detalleventa.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends detalleventaCreateManyAndReturnArgs>(args?: SelectSubset<T, detalleventaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Detalleventa.
     * @param {detalleventaDeleteArgs} args - Arguments to delete one Detalleventa.
     * @example
     * // Delete one Detalleventa
     * const Detalleventa = await prisma.detalleventa.delete({
     *   where: {
     *     // ... filter to delete one Detalleventa
     *   }
     * })
     * 
     */
    delete<T extends detalleventaDeleteArgs>(args: SelectSubset<T, detalleventaDeleteArgs<ExtArgs>>): Prisma__detalleventaClient<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Detalleventa.
     * @param {detalleventaUpdateArgs} args - Arguments to update one Detalleventa.
     * @example
     * // Update one Detalleventa
     * const detalleventa = await prisma.detalleventa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends detalleventaUpdateArgs>(args: SelectSubset<T, detalleventaUpdateArgs<ExtArgs>>): Prisma__detalleventaClient<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Detalleventas.
     * @param {detalleventaDeleteManyArgs} args - Arguments to filter Detalleventas to delete.
     * @example
     * // Delete a few Detalleventas
     * const { count } = await prisma.detalleventa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends detalleventaDeleteManyArgs>(args?: SelectSubset<T, detalleventaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalleventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleventaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Detalleventas
     * const detalleventa = await prisma.detalleventa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends detalleventaUpdateManyArgs>(args: SelectSubset<T, detalleventaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalleventas and returns the data updated in the database.
     * @param {detalleventaUpdateManyAndReturnArgs} args - Arguments to update many Detalleventas.
     * @example
     * // Update many Detalleventas
     * const detalleventa = await prisma.detalleventa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Detalleventas and only return the `id`
     * const detalleventaWithIdOnly = await prisma.detalleventa.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends detalleventaUpdateManyAndReturnArgs>(args: SelectSubset<T, detalleventaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Detalleventa.
     * @param {detalleventaUpsertArgs} args - Arguments to update or create a Detalleventa.
     * @example
     * // Update or create a Detalleventa
     * const detalleventa = await prisma.detalleventa.upsert({
     *   create: {
     *     // ... data to create a Detalleventa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Detalleventa we want to update
     *   }
     * })
     */
    upsert<T extends detalleventaUpsertArgs>(args: SelectSubset<T, detalleventaUpsertArgs<ExtArgs>>): Prisma__detalleventaClient<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Detalleventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleventaCountArgs} args - Arguments to filter Detalleventas to count.
     * @example
     * // Count the number of Detalleventas
     * const count = await prisma.detalleventa.count({
     *   where: {
     *     // ... the filter for the Detalleventas we want to count
     *   }
     * })
    **/
    count<T extends detalleventaCountArgs>(
      args?: Subset<T, detalleventaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DetalleventaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Detalleventa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DetalleventaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DetalleventaAggregateArgs>(args: Subset<T, DetalleventaAggregateArgs>): Prisma.PrismaPromise<GetDetalleventaAggregateType<T>>

    /**
     * Group by Detalleventa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalleventaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends detalleventaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: detalleventaGroupByArgs['orderBy'] }
        : { orderBy?: detalleventaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, detalleventaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalleventaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the detalleventa model
   */
  readonly fields: detalleventaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for detalleventa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__detalleventaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    codigobarra<T extends detalleventa$codigobarraArgs<ExtArgs> = {}>(args?: Subset<T, detalleventa$codigobarraArgs<ExtArgs>>): Prisma__codigobarraClient<$Result.GetResult<Prisma.$codigobarraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    producto<T extends detalleventa$productoArgs<ExtArgs> = {}>(args?: Subset<T, detalleventa$productoArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tipolistaprecio<T extends detalleventa$tipolistaprecioArgs<ExtArgs> = {}>(args?: Subset<T, detalleventa$tipolistaprecioArgs<ExtArgs>>): Prisma__tipolistaprecioClient<$Result.GetResult<Prisma.$tipolistaprecioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tipoventa<T extends detalleventa$tipoventaArgs<ExtArgs> = {}>(args?: Subset<T, detalleventa$tipoventaArgs<ExtArgs>>): Prisma__tipoventaClient<$Result.GetResult<Prisma.$tipoventaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    venta<T extends detalleventa$ventaArgs<ExtArgs> = {}>(args?: Subset<T, detalleventa$ventaArgs<ExtArgs>>): Prisma__ventaClient<$Result.GetResult<Prisma.$ventaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the detalleventa model
   */
  interface detalleventaFieldRefs {
    readonly id: FieldRef<"detalleventa", 'Int'>
    readonly venta_id: FieldRef<"detalleventa", 'Int'>
    readonly codigo_barra_id: FieldRef<"detalleventa", 'Int'>
    readonly producto_id: FieldRef<"detalleventa", 'Int'>
    readonly tipo_venta_id: FieldRef<"detalleventa", 'Int'>
    readonly tipo_lista_id: FieldRef<"detalleventa", 'Int'>
    readonly cantidad: FieldRef<"detalleventa", 'Int'>
    readonly precio_unitario: FieldRef<"detalleventa", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * detalleventa findUnique
   */
  export type detalleventaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
    /**
     * Filter, which detalleventa to fetch.
     */
    where: detalleventaWhereUniqueInput
  }

  /**
   * detalleventa findUniqueOrThrow
   */
  export type detalleventaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
    /**
     * Filter, which detalleventa to fetch.
     */
    where: detalleventaWhereUniqueInput
  }

  /**
   * detalleventa findFirst
   */
  export type detalleventaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
    /**
     * Filter, which detalleventa to fetch.
     */
    where?: detalleventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalleventas to fetch.
     */
    orderBy?: detalleventaOrderByWithRelationInput | detalleventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalleventas.
     */
    cursor?: detalleventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalleventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalleventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalleventas.
     */
    distinct?: DetalleventaScalarFieldEnum | DetalleventaScalarFieldEnum[]
  }

  /**
   * detalleventa findFirstOrThrow
   */
  export type detalleventaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
    /**
     * Filter, which detalleventa to fetch.
     */
    where?: detalleventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalleventas to fetch.
     */
    orderBy?: detalleventaOrderByWithRelationInput | detalleventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalleventas.
     */
    cursor?: detalleventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalleventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalleventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalleventas.
     */
    distinct?: DetalleventaScalarFieldEnum | DetalleventaScalarFieldEnum[]
  }

  /**
   * detalleventa findMany
   */
  export type detalleventaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
    /**
     * Filter, which detalleventas to fetch.
     */
    where?: detalleventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalleventas to fetch.
     */
    orderBy?: detalleventaOrderByWithRelationInput | detalleventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing detalleventas.
     */
    cursor?: detalleventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalleventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalleventas.
     */
    skip?: number
    distinct?: DetalleventaScalarFieldEnum | DetalleventaScalarFieldEnum[]
  }

  /**
   * detalleventa create
   */
  export type detalleventaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
    /**
     * The data needed to create a detalleventa.
     */
    data: XOR<detalleventaCreateInput, detalleventaUncheckedCreateInput>
  }

  /**
   * detalleventa createMany
   */
  export type detalleventaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many detalleventas.
     */
    data: detalleventaCreateManyInput | detalleventaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * detalleventa createManyAndReturn
   */
  export type detalleventaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * The data used to create many detalleventas.
     */
    data: detalleventaCreateManyInput | detalleventaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalleventa update
   */
  export type detalleventaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
    /**
     * The data needed to update a detalleventa.
     */
    data: XOR<detalleventaUpdateInput, detalleventaUncheckedUpdateInput>
    /**
     * Choose, which detalleventa to update.
     */
    where: detalleventaWhereUniqueInput
  }

  /**
   * detalleventa updateMany
   */
  export type detalleventaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update detalleventas.
     */
    data: XOR<detalleventaUpdateManyMutationInput, detalleventaUncheckedUpdateManyInput>
    /**
     * Filter which detalleventas to update
     */
    where?: detalleventaWhereInput
    /**
     * Limit how many detalleventas to update.
     */
    limit?: number
  }

  /**
   * detalleventa updateManyAndReturn
   */
  export type detalleventaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * The data used to update detalleventas.
     */
    data: XOR<detalleventaUpdateManyMutationInput, detalleventaUncheckedUpdateManyInput>
    /**
     * Filter which detalleventas to update
     */
    where?: detalleventaWhereInput
    /**
     * Limit how many detalleventas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalleventa upsert
   */
  export type detalleventaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
    /**
     * The filter to search for the detalleventa to update in case it exists.
     */
    where: detalleventaWhereUniqueInput
    /**
     * In case the detalleventa found by the `where` argument doesn't exist, create a new detalleventa with this data.
     */
    create: XOR<detalleventaCreateInput, detalleventaUncheckedCreateInput>
    /**
     * In case the detalleventa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<detalleventaUpdateInput, detalleventaUncheckedUpdateInput>
  }

  /**
   * detalleventa delete
   */
  export type detalleventaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
    /**
     * Filter which detalleventa to delete.
     */
    where: detalleventaWhereUniqueInput
  }

  /**
   * detalleventa deleteMany
   */
  export type detalleventaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalleventas to delete
     */
    where?: detalleventaWhereInput
    /**
     * Limit how many detalleventas to delete.
     */
    limit?: number
  }

  /**
   * detalleventa.codigobarra
   */
  export type detalleventa$codigobarraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraInclude<ExtArgs> | null
    where?: codigobarraWhereInput
  }

  /**
   * detalleventa.producto
   */
  export type detalleventa$productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    where?: productoWhereInput
  }

  /**
   * detalleventa.tipolistaprecio
   */
  export type detalleventa$tipolistaprecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipolistaprecio
     */
    select?: tipolistaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipolistaprecio
     */
    omit?: tipolistaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipolistaprecioInclude<ExtArgs> | null
    where?: tipolistaprecioWhereInput
  }

  /**
   * detalleventa.tipoventa
   */
  export type detalleventa$tipoventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoventa
     */
    select?: tipoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipoventa
     */
    omit?: tipoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoventaInclude<ExtArgs> | null
    where?: tipoventaWhereInput
  }

  /**
   * detalleventa.venta
   */
  export type detalleventa$ventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaInclude<ExtArgs> | null
    where?: ventaWhereInput
  }

  /**
   * detalleventa without action
   */
  export type detalleventaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
  }


  /**
   * Model estadoordencompra
   */

  export type AggregateEstadoordencompra = {
    _count: EstadoordencompraCountAggregateOutputType | null
    _avg: EstadoordencompraAvgAggregateOutputType | null
    _sum: EstadoordencompraSumAggregateOutputType | null
    _min: EstadoordencompraMinAggregateOutputType | null
    _max: EstadoordencompraMaxAggregateOutputType | null
  }

  export type EstadoordencompraAvgAggregateOutputType = {
    id: number | null
  }

  export type EstadoordencompraSumAggregateOutputType = {
    id: number | null
  }

  export type EstadoordencompraMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type EstadoordencompraMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type EstadoordencompraCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type EstadoordencompraAvgAggregateInputType = {
    id?: true
  }

  export type EstadoordencompraSumAggregateInputType = {
    id?: true
  }

  export type EstadoordencompraMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type EstadoordencompraMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type EstadoordencompraCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type EstadoordencompraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estadoordencompra to aggregate.
     */
    where?: estadoordencompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estadoordencompras to fetch.
     */
    orderBy?: estadoordencompraOrderByWithRelationInput | estadoordencompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: estadoordencompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estadoordencompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estadoordencompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned estadoordencompras
    **/
    _count?: true | EstadoordencompraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstadoordencompraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstadoordencompraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstadoordencompraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstadoordencompraMaxAggregateInputType
  }

  export type GetEstadoordencompraAggregateType<T extends EstadoordencompraAggregateArgs> = {
        [P in keyof T & keyof AggregateEstadoordencompra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstadoordencompra[P]>
      : GetScalarType<T[P], AggregateEstadoordencompra[P]>
  }




  export type estadoordencompraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estadoordencompraWhereInput
    orderBy?: estadoordencompraOrderByWithAggregationInput | estadoordencompraOrderByWithAggregationInput[]
    by: EstadoordencompraScalarFieldEnum[] | EstadoordencompraScalarFieldEnum
    having?: estadoordencompraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstadoordencompraCountAggregateInputType | true
    _avg?: EstadoordencompraAvgAggregateInputType
    _sum?: EstadoordencompraSumAggregateInputType
    _min?: EstadoordencompraMinAggregateInputType
    _max?: EstadoordencompraMaxAggregateInputType
  }

  export type EstadoordencompraGroupByOutputType = {
    id: number
    nombre: string
    _count: EstadoordencompraCountAggregateOutputType | null
    _avg: EstadoordencompraAvgAggregateOutputType | null
    _sum: EstadoordencompraSumAggregateOutputType | null
    _min: EstadoordencompraMinAggregateOutputType | null
    _max: EstadoordencompraMaxAggregateOutputType | null
  }

  type GetEstadoordencompraGroupByPayload<T extends estadoordencompraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstadoordencompraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstadoordencompraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstadoordencompraGroupByOutputType[P]>
            : GetScalarType<T[P], EstadoordencompraGroupByOutputType[P]>
        }
      >
    >


  export type estadoordencompraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    ordencompra?: boolean | estadoordencompra$ordencompraArgs<ExtArgs>
    _count?: boolean | EstadoordencompraCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estadoordencompra"]>

  export type estadoordencompraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["estadoordencompra"]>

  export type estadoordencompraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["estadoordencompra"]>

  export type estadoordencompraSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type estadoordencompraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["estadoordencompra"]>
  export type estadoordencompraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordencompra?: boolean | estadoordencompra$ordencompraArgs<ExtArgs>
    _count?: boolean | EstadoordencompraCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type estadoordencompraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type estadoordencompraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $estadoordencompraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "estadoordencompra"
    objects: {
      ordencompra: Prisma.$ordencompraPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["estadoordencompra"]>
    composites: {}
  }

  type estadoordencompraGetPayload<S extends boolean | null | undefined | estadoordencompraDefaultArgs> = $Result.GetResult<Prisma.$estadoordencompraPayload, S>

  type estadoordencompraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<estadoordencompraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstadoordencompraCountAggregateInputType | true
    }

  export interface estadoordencompraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['estadoordencompra'], meta: { name: 'estadoordencompra' } }
    /**
     * Find zero or one Estadoordencompra that matches the filter.
     * @param {estadoordencompraFindUniqueArgs} args - Arguments to find a Estadoordencompra
     * @example
     * // Get one Estadoordencompra
     * const estadoordencompra = await prisma.estadoordencompra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends estadoordencompraFindUniqueArgs>(args: SelectSubset<T, estadoordencompraFindUniqueArgs<ExtArgs>>): Prisma__estadoordencompraClient<$Result.GetResult<Prisma.$estadoordencompraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Estadoordencompra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {estadoordencompraFindUniqueOrThrowArgs} args - Arguments to find a Estadoordencompra
     * @example
     * // Get one Estadoordencompra
     * const estadoordencompra = await prisma.estadoordencompra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends estadoordencompraFindUniqueOrThrowArgs>(args: SelectSubset<T, estadoordencompraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__estadoordencompraClient<$Result.GetResult<Prisma.$estadoordencompraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estadoordencompra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoordencompraFindFirstArgs} args - Arguments to find a Estadoordencompra
     * @example
     * // Get one Estadoordencompra
     * const estadoordencompra = await prisma.estadoordencompra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends estadoordencompraFindFirstArgs>(args?: SelectSubset<T, estadoordencompraFindFirstArgs<ExtArgs>>): Prisma__estadoordencompraClient<$Result.GetResult<Prisma.$estadoordencompraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estadoordencompra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoordencompraFindFirstOrThrowArgs} args - Arguments to find a Estadoordencompra
     * @example
     * // Get one Estadoordencompra
     * const estadoordencompra = await prisma.estadoordencompra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends estadoordencompraFindFirstOrThrowArgs>(args?: SelectSubset<T, estadoordencompraFindFirstOrThrowArgs<ExtArgs>>): Prisma__estadoordencompraClient<$Result.GetResult<Prisma.$estadoordencompraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Estadoordencompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoordencompraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estadoordencompras
     * const estadoordencompras = await prisma.estadoordencompra.findMany()
     * 
     * // Get first 10 Estadoordencompras
     * const estadoordencompras = await prisma.estadoordencompra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estadoordencompraWithIdOnly = await prisma.estadoordencompra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends estadoordencompraFindManyArgs>(args?: SelectSubset<T, estadoordencompraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estadoordencompraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Estadoordencompra.
     * @param {estadoordencompraCreateArgs} args - Arguments to create a Estadoordencompra.
     * @example
     * // Create one Estadoordencompra
     * const Estadoordencompra = await prisma.estadoordencompra.create({
     *   data: {
     *     // ... data to create a Estadoordencompra
     *   }
     * })
     * 
     */
    create<T extends estadoordencompraCreateArgs>(args: SelectSubset<T, estadoordencompraCreateArgs<ExtArgs>>): Prisma__estadoordencompraClient<$Result.GetResult<Prisma.$estadoordencompraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Estadoordencompras.
     * @param {estadoordencompraCreateManyArgs} args - Arguments to create many Estadoordencompras.
     * @example
     * // Create many Estadoordencompras
     * const estadoordencompra = await prisma.estadoordencompra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends estadoordencompraCreateManyArgs>(args?: SelectSubset<T, estadoordencompraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Estadoordencompras and returns the data saved in the database.
     * @param {estadoordencompraCreateManyAndReturnArgs} args - Arguments to create many Estadoordencompras.
     * @example
     * // Create many Estadoordencompras
     * const estadoordencompra = await prisma.estadoordencompra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Estadoordencompras and only return the `id`
     * const estadoordencompraWithIdOnly = await prisma.estadoordencompra.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends estadoordencompraCreateManyAndReturnArgs>(args?: SelectSubset<T, estadoordencompraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estadoordencompraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Estadoordencompra.
     * @param {estadoordencompraDeleteArgs} args - Arguments to delete one Estadoordencompra.
     * @example
     * // Delete one Estadoordencompra
     * const Estadoordencompra = await prisma.estadoordencompra.delete({
     *   where: {
     *     // ... filter to delete one Estadoordencompra
     *   }
     * })
     * 
     */
    delete<T extends estadoordencompraDeleteArgs>(args: SelectSubset<T, estadoordencompraDeleteArgs<ExtArgs>>): Prisma__estadoordencompraClient<$Result.GetResult<Prisma.$estadoordencompraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Estadoordencompra.
     * @param {estadoordencompraUpdateArgs} args - Arguments to update one Estadoordencompra.
     * @example
     * // Update one Estadoordencompra
     * const estadoordencompra = await prisma.estadoordencompra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends estadoordencompraUpdateArgs>(args: SelectSubset<T, estadoordencompraUpdateArgs<ExtArgs>>): Prisma__estadoordencompraClient<$Result.GetResult<Prisma.$estadoordencompraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Estadoordencompras.
     * @param {estadoordencompraDeleteManyArgs} args - Arguments to filter Estadoordencompras to delete.
     * @example
     * // Delete a few Estadoordencompras
     * const { count } = await prisma.estadoordencompra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends estadoordencompraDeleteManyArgs>(args?: SelectSubset<T, estadoordencompraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estadoordencompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoordencompraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estadoordencompras
     * const estadoordencompra = await prisma.estadoordencompra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends estadoordencompraUpdateManyArgs>(args: SelectSubset<T, estadoordencompraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estadoordencompras and returns the data updated in the database.
     * @param {estadoordencompraUpdateManyAndReturnArgs} args - Arguments to update many Estadoordencompras.
     * @example
     * // Update many Estadoordencompras
     * const estadoordencompra = await prisma.estadoordencompra.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Estadoordencompras and only return the `id`
     * const estadoordencompraWithIdOnly = await prisma.estadoordencompra.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends estadoordencompraUpdateManyAndReturnArgs>(args: SelectSubset<T, estadoordencompraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estadoordencompraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Estadoordencompra.
     * @param {estadoordencompraUpsertArgs} args - Arguments to update or create a Estadoordencompra.
     * @example
     * // Update or create a Estadoordencompra
     * const estadoordencompra = await prisma.estadoordencompra.upsert({
     *   create: {
     *     // ... data to create a Estadoordencompra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estadoordencompra we want to update
     *   }
     * })
     */
    upsert<T extends estadoordencompraUpsertArgs>(args: SelectSubset<T, estadoordencompraUpsertArgs<ExtArgs>>): Prisma__estadoordencompraClient<$Result.GetResult<Prisma.$estadoordencompraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Estadoordencompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoordencompraCountArgs} args - Arguments to filter Estadoordencompras to count.
     * @example
     * // Count the number of Estadoordencompras
     * const count = await prisma.estadoordencompra.count({
     *   where: {
     *     // ... the filter for the Estadoordencompras we want to count
     *   }
     * })
    **/
    count<T extends estadoordencompraCountArgs>(
      args?: Subset<T, estadoordencompraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstadoordencompraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estadoordencompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoordencompraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstadoordencompraAggregateArgs>(args: Subset<T, EstadoordencompraAggregateArgs>): Prisma.PrismaPromise<GetEstadoordencompraAggregateType<T>>

    /**
     * Group by Estadoordencompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoordencompraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends estadoordencompraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: estadoordencompraGroupByArgs['orderBy'] }
        : { orderBy?: estadoordencompraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, estadoordencompraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstadoordencompraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the estadoordencompra model
   */
  readonly fields: estadoordencompraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for estadoordencompra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__estadoordencompraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ordencompra<T extends estadoordencompra$ordencompraArgs<ExtArgs> = {}>(args?: Subset<T, estadoordencompra$ordencompraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the estadoordencompra model
   */
  interface estadoordencompraFieldRefs {
    readonly id: FieldRef<"estadoordencompra", 'Int'>
    readonly nombre: FieldRef<"estadoordencompra", 'String'>
  }
    

  // Custom InputTypes
  /**
   * estadoordencompra findUnique
   */
  export type estadoordencompraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoordencompra
     */
    select?: estadoordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoordencompra
     */
    omit?: estadoordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoordencompraInclude<ExtArgs> | null
    /**
     * Filter, which estadoordencompra to fetch.
     */
    where: estadoordencompraWhereUniqueInput
  }

  /**
   * estadoordencompra findUniqueOrThrow
   */
  export type estadoordencompraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoordencompra
     */
    select?: estadoordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoordencompra
     */
    omit?: estadoordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoordencompraInclude<ExtArgs> | null
    /**
     * Filter, which estadoordencompra to fetch.
     */
    where: estadoordencompraWhereUniqueInput
  }

  /**
   * estadoordencompra findFirst
   */
  export type estadoordencompraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoordencompra
     */
    select?: estadoordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoordencompra
     */
    omit?: estadoordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoordencompraInclude<ExtArgs> | null
    /**
     * Filter, which estadoordencompra to fetch.
     */
    where?: estadoordencompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estadoordencompras to fetch.
     */
    orderBy?: estadoordencompraOrderByWithRelationInput | estadoordencompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estadoordencompras.
     */
    cursor?: estadoordencompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estadoordencompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estadoordencompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estadoordencompras.
     */
    distinct?: EstadoordencompraScalarFieldEnum | EstadoordencompraScalarFieldEnum[]
  }

  /**
   * estadoordencompra findFirstOrThrow
   */
  export type estadoordencompraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoordencompra
     */
    select?: estadoordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoordencompra
     */
    omit?: estadoordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoordencompraInclude<ExtArgs> | null
    /**
     * Filter, which estadoordencompra to fetch.
     */
    where?: estadoordencompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estadoordencompras to fetch.
     */
    orderBy?: estadoordencompraOrderByWithRelationInput | estadoordencompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estadoordencompras.
     */
    cursor?: estadoordencompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estadoordencompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estadoordencompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estadoordencompras.
     */
    distinct?: EstadoordencompraScalarFieldEnum | EstadoordencompraScalarFieldEnum[]
  }

  /**
   * estadoordencompra findMany
   */
  export type estadoordencompraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoordencompra
     */
    select?: estadoordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoordencompra
     */
    omit?: estadoordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoordencompraInclude<ExtArgs> | null
    /**
     * Filter, which estadoordencompras to fetch.
     */
    where?: estadoordencompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estadoordencompras to fetch.
     */
    orderBy?: estadoordencompraOrderByWithRelationInput | estadoordencompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing estadoordencompras.
     */
    cursor?: estadoordencompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estadoordencompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estadoordencompras.
     */
    skip?: number
    distinct?: EstadoordencompraScalarFieldEnum | EstadoordencompraScalarFieldEnum[]
  }

  /**
   * estadoordencompra create
   */
  export type estadoordencompraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoordencompra
     */
    select?: estadoordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoordencompra
     */
    omit?: estadoordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoordencompraInclude<ExtArgs> | null
    /**
     * The data needed to create a estadoordencompra.
     */
    data: XOR<estadoordencompraCreateInput, estadoordencompraUncheckedCreateInput>
  }

  /**
   * estadoordencompra createMany
   */
  export type estadoordencompraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many estadoordencompras.
     */
    data: estadoordencompraCreateManyInput | estadoordencompraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * estadoordencompra createManyAndReturn
   */
  export type estadoordencompraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoordencompra
     */
    select?: estadoordencompraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estadoordencompra
     */
    omit?: estadoordencompraOmit<ExtArgs> | null
    /**
     * The data used to create many estadoordencompras.
     */
    data: estadoordencompraCreateManyInput | estadoordencompraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * estadoordencompra update
   */
  export type estadoordencompraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoordencompra
     */
    select?: estadoordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoordencompra
     */
    omit?: estadoordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoordencompraInclude<ExtArgs> | null
    /**
     * The data needed to update a estadoordencompra.
     */
    data: XOR<estadoordencompraUpdateInput, estadoordencompraUncheckedUpdateInput>
    /**
     * Choose, which estadoordencompra to update.
     */
    where: estadoordencompraWhereUniqueInput
  }

  /**
   * estadoordencompra updateMany
   */
  export type estadoordencompraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update estadoordencompras.
     */
    data: XOR<estadoordencompraUpdateManyMutationInput, estadoordencompraUncheckedUpdateManyInput>
    /**
     * Filter which estadoordencompras to update
     */
    where?: estadoordencompraWhereInput
    /**
     * Limit how many estadoordencompras to update.
     */
    limit?: number
  }

  /**
   * estadoordencompra updateManyAndReturn
   */
  export type estadoordencompraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoordencompra
     */
    select?: estadoordencompraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estadoordencompra
     */
    omit?: estadoordencompraOmit<ExtArgs> | null
    /**
     * The data used to update estadoordencompras.
     */
    data: XOR<estadoordencompraUpdateManyMutationInput, estadoordencompraUncheckedUpdateManyInput>
    /**
     * Filter which estadoordencompras to update
     */
    where?: estadoordencompraWhereInput
    /**
     * Limit how many estadoordencompras to update.
     */
    limit?: number
  }

  /**
   * estadoordencompra upsert
   */
  export type estadoordencompraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoordencompra
     */
    select?: estadoordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoordencompra
     */
    omit?: estadoordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoordencompraInclude<ExtArgs> | null
    /**
     * The filter to search for the estadoordencompra to update in case it exists.
     */
    where: estadoordencompraWhereUniqueInput
    /**
     * In case the estadoordencompra found by the `where` argument doesn't exist, create a new estadoordencompra with this data.
     */
    create: XOR<estadoordencompraCreateInput, estadoordencompraUncheckedCreateInput>
    /**
     * In case the estadoordencompra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<estadoordencompraUpdateInput, estadoordencompraUncheckedUpdateInput>
  }

  /**
   * estadoordencompra delete
   */
  export type estadoordencompraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoordencompra
     */
    select?: estadoordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoordencompra
     */
    omit?: estadoordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoordencompraInclude<ExtArgs> | null
    /**
     * Filter which estadoordencompra to delete.
     */
    where: estadoordencompraWhereUniqueInput
  }

  /**
   * estadoordencompra deleteMany
   */
  export type estadoordencompraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estadoordencompras to delete
     */
    where?: estadoordencompraWhereInput
    /**
     * Limit how many estadoordencompras to delete.
     */
    limit?: number
  }

  /**
   * estadoordencompra.ordencompra
   */
  export type estadoordencompra$ordencompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraInclude<ExtArgs> | null
    where?: ordencompraWhereInput
    orderBy?: ordencompraOrderByWithRelationInput | ordencompraOrderByWithRelationInput[]
    cursor?: ordencompraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdencompraScalarFieldEnum | OrdencompraScalarFieldEnum[]
  }

  /**
   * estadoordencompra without action
   */
  export type estadoordencompraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoordencompra
     */
    select?: estadoordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoordencompra
     */
    omit?: estadoordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoordencompraInclude<ExtArgs> | null
  }


  /**
   * Model estadoproduccion
   */

  export type AggregateEstadoproduccion = {
    _count: EstadoproduccionCountAggregateOutputType | null
    _avg: EstadoproduccionAvgAggregateOutputType | null
    _sum: EstadoproduccionSumAggregateOutputType | null
    _min: EstadoproduccionMinAggregateOutputType | null
    _max: EstadoproduccionMaxAggregateOutputType | null
  }

  export type EstadoproduccionAvgAggregateOutputType = {
    id: number | null
  }

  export type EstadoproduccionSumAggregateOutputType = {
    id: number | null
  }

  export type EstadoproduccionMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type EstadoproduccionMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type EstadoproduccionCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type EstadoproduccionAvgAggregateInputType = {
    id?: true
  }

  export type EstadoproduccionSumAggregateInputType = {
    id?: true
  }

  export type EstadoproduccionMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type EstadoproduccionMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type EstadoproduccionCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type EstadoproduccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estadoproduccion to aggregate.
     */
    where?: estadoproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estadoproduccions to fetch.
     */
    orderBy?: estadoproduccionOrderByWithRelationInput | estadoproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: estadoproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estadoproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estadoproduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned estadoproduccions
    **/
    _count?: true | EstadoproduccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstadoproduccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstadoproduccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstadoproduccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstadoproduccionMaxAggregateInputType
  }

  export type GetEstadoproduccionAggregateType<T extends EstadoproduccionAggregateArgs> = {
        [P in keyof T & keyof AggregateEstadoproduccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstadoproduccion[P]>
      : GetScalarType<T[P], AggregateEstadoproduccion[P]>
  }




  export type estadoproduccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estadoproduccionWhereInput
    orderBy?: estadoproduccionOrderByWithAggregationInput | estadoproduccionOrderByWithAggregationInput[]
    by: EstadoproduccionScalarFieldEnum[] | EstadoproduccionScalarFieldEnum
    having?: estadoproduccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstadoproduccionCountAggregateInputType | true
    _avg?: EstadoproduccionAvgAggregateInputType
    _sum?: EstadoproduccionSumAggregateInputType
    _min?: EstadoproduccionMinAggregateInputType
    _max?: EstadoproduccionMaxAggregateInputType
  }

  export type EstadoproduccionGroupByOutputType = {
    id: number
    nombre: string
    _count: EstadoproduccionCountAggregateOutputType | null
    _avg: EstadoproduccionAvgAggregateOutputType | null
    _sum: EstadoproduccionSumAggregateOutputType | null
    _min: EstadoproduccionMinAggregateOutputType | null
    _max: EstadoproduccionMaxAggregateOutputType | null
  }

  type GetEstadoproduccionGroupByPayload<T extends estadoproduccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstadoproduccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstadoproduccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstadoproduccionGroupByOutputType[P]>
            : GetScalarType<T[P], EstadoproduccionGroupByOutputType[P]>
        }
      >
    >


  export type estadoproduccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    ordenproduccion?: boolean | estadoproduccion$ordenproduccionArgs<ExtArgs>
    _count?: boolean | EstadoproduccionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estadoproduccion"]>

  export type estadoproduccionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["estadoproduccion"]>

  export type estadoproduccionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["estadoproduccion"]>

  export type estadoproduccionSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type estadoproduccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["estadoproduccion"]>
  export type estadoproduccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordenproduccion?: boolean | estadoproduccion$ordenproduccionArgs<ExtArgs>
    _count?: boolean | EstadoproduccionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type estadoproduccionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type estadoproduccionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $estadoproduccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "estadoproduccion"
    objects: {
      ordenproduccion: Prisma.$ordenproduccionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["estadoproduccion"]>
    composites: {}
  }

  type estadoproduccionGetPayload<S extends boolean | null | undefined | estadoproduccionDefaultArgs> = $Result.GetResult<Prisma.$estadoproduccionPayload, S>

  type estadoproduccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<estadoproduccionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstadoproduccionCountAggregateInputType | true
    }

  export interface estadoproduccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['estadoproduccion'], meta: { name: 'estadoproduccion' } }
    /**
     * Find zero or one Estadoproduccion that matches the filter.
     * @param {estadoproduccionFindUniqueArgs} args - Arguments to find a Estadoproduccion
     * @example
     * // Get one Estadoproduccion
     * const estadoproduccion = await prisma.estadoproduccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends estadoproduccionFindUniqueArgs>(args: SelectSubset<T, estadoproduccionFindUniqueArgs<ExtArgs>>): Prisma__estadoproduccionClient<$Result.GetResult<Prisma.$estadoproduccionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Estadoproduccion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {estadoproduccionFindUniqueOrThrowArgs} args - Arguments to find a Estadoproduccion
     * @example
     * // Get one Estadoproduccion
     * const estadoproduccion = await prisma.estadoproduccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends estadoproduccionFindUniqueOrThrowArgs>(args: SelectSubset<T, estadoproduccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__estadoproduccionClient<$Result.GetResult<Prisma.$estadoproduccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estadoproduccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoproduccionFindFirstArgs} args - Arguments to find a Estadoproduccion
     * @example
     * // Get one Estadoproduccion
     * const estadoproduccion = await prisma.estadoproduccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends estadoproduccionFindFirstArgs>(args?: SelectSubset<T, estadoproduccionFindFirstArgs<ExtArgs>>): Prisma__estadoproduccionClient<$Result.GetResult<Prisma.$estadoproduccionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estadoproduccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoproduccionFindFirstOrThrowArgs} args - Arguments to find a Estadoproduccion
     * @example
     * // Get one Estadoproduccion
     * const estadoproduccion = await prisma.estadoproduccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends estadoproduccionFindFirstOrThrowArgs>(args?: SelectSubset<T, estadoproduccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__estadoproduccionClient<$Result.GetResult<Prisma.$estadoproduccionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Estadoproduccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoproduccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estadoproduccions
     * const estadoproduccions = await prisma.estadoproduccion.findMany()
     * 
     * // Get first 10 Estadoproduccions
     * const estadoproduccions = await prisma.estadoproduccion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estadoproduccionWithIdOnly = await prisma.estadoproduccion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends estadoproduccionFindManyArgs>(args?: SelectSubset<T, estadoproduccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estadoproduccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Estadoproduccion.
     * @param {estadoproduccionCreateArgs} args - Arguments to create a Estadoproduccion.
     * @example
     * // Create one Estadoproduccion
     * const Estadoproduccion = await prisma.estadoproduccion.create({
     *   data: {
     *     // ... data to create a Estadoproduccion
     *   }
     * })
     * 
     */
    create<T extends estadoproduccionCreateArgs>(args: SelectSubset<T, estadoproduccionCreateArgs<ExtArgs>>): Prisma__estadoproduccionClient<$Result.GetResult<Prisma.$estadoproduccionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Estadoproduccions.
     * @param {estadoproduccionCreateManyArgs} args - Arguments to create many Estadoproduccions.
     * @example
     * // Create many Estadoproduccions
     * const estadoproduccion = await prisma.estadoproduccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends estadoproduccionCreateManyArgs>(args?: SelectSubset<T, estadoproduccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Estadoproduccions and returns the data saved in the database.
     * @param {estadoproduccionCreateManyAndReturnArgs} args - Arguments to create many Estadoproduccions.
     * @example
     * // Create many Estadoproduccions
     * const estadoproduccion = await prisma.estadoproduccion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Estadoproduccions and only return the `id`
     * const estadoproduccionWithIdOnly = await prisma.estadoproduccion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends estadoproduccionCreateManyAndReturnArgs>(args?: SelectSubset<T, estadoproduccionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estadoproduccionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Estadoproduccion.
     * @param {estadoproduccionDeleteArgs} args - Arguments to delete one Estadoproduccion.
     * @example
     * // Delete one Estadoproduccion
     * const Estadoproduccion = await prisma.estadoproduccion.delete({
     *   where: {
     *     // ... filter to delete one Estadoproduccion
     *   }
     * })
     * 
     */
    delete<T extends estadoproduccionDeleteArgs>(args: SelectSubset<T, estadoproduccionDeleteArgs<ExtArgs>>): Prisma__estadoproduccionClient<$Result.GetResult<Prisma.$estadoproduccionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Estadoproduccion.
     * @param {estadoproduccionUpdateArgs} args - Arguments to update one Estadoproduccion.
     * @example
     * // Update one Estadoproduccion
     * const estadoproduccion = await prisma.estadoproduccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends estadoproduccionUpdateArgs>(args: SelectSubset<T, estadoproduccionUpdateArgs<ExtArgs>>): Prisma__estadoproduccionClient<$Result.GetResult<Prisma.$estadoproduccionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Estadoproduccions.
     * @param {estadoproduccionDeleteManyArgs} args - Arguments to filter Estadoproduccions to delete.
     * @example
     * // Delete a few Estadoproduccions
     * const { count } = await prisma.estadoproduccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends estadoproduccionDeleteManyArgs>(args?: SelectSubset<T, estadoproduccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estadoproduccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoproduccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estadoproduccions
     * const estadoproduccion = await prisma.estadoproduccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends estadoproduccionUpdateManyArgs>(args: SelectSubset<T, estadoproduccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estadoproduccions and returns the data updated in the database.
     * @param {estadoproduccionUpdateManyAndReturnArgs} args - Arguments to update many Estadoproduccions.
     * @example
     * // Update many Estadoproduccions
     * const estadoproduccion = await prisma.estadoproduccion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Estadoproduccions and only return the `id`
     * const estadoproduccionWithIdOnly = await prisma.estadoproduccion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends estadoproduccionUpdateManyAndReturnArgs>(args: SelectSubset<T, estadoproduccionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estadoproduccionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Estadoproduccion.
     * @param {estadoproduccionUpsertArgs} args - Arguments to update or create a Estadoproduccion.
     * @example
     * // Update or create a Estadoproduccion
     * const estadoproduccion = await prisma.estadoproduccion.upsert({
     *   create: {
     *     // ... data to create a Estadoproduccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estadoproduccion we want to update
     *   }
     * })
     */
    upsert<T extends estadoproduccionUpsertArgs>(args: SelectSubset<T, estadoproduccionUpsertArgs<ExtArgs>>): Prisma__estadoproduccionClient<$Result.GetResult<Prisma.$estadoproduccionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Estadoproduccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoproduccionCountArgs} args - Arguments to filter Estadoproduccions to count.
     * @example
     * // Count the number of Estadoproduccions
     * const count = await prisma.estadoproduccion.count({
     *   where: {
     *     // ... the filter for the Estadoproduccions we want to count
     *   }
     * })
    **/
    count<T extends estadoproduccionCountArgs>(
      args?: Subset<T, estadoproduccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstadoproduccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estadoproduccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoproduccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstadoproduccionAggregateArgs>(args: Subset<T, EstadoproduccionAggregateArgs>): Prisma.PrismaPromise<GetEstadoproduccionAggregateType<T>>

    /**
     * Group by Estadoproduccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoproduccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends estadoproduccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: estadoproduccionGroupByArgs['orderBy'] }
        : { orderBy?: estadoproduccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, estadoproduccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstadoproduccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the estadoproduccion model
   */
  readonly fields: estadoproduccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for estadoproduccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__estadoproduccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ordenproduccion<T extends estadoproduccion$ordenproduccionArgs<ExtArgs> = {}>(args?: Subset<T, estadoproduccion$ordenproduccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the estadoproduccion model
   */
  interface estadoproduccionFieldRefs {
    readonly id: FieldRef<"estadoproduccion", 'Int'>
    readonly nombre: FieldRef<"estadoproduccion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * estadoproduccion findUnique
   */
  export type estadoproduccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoproduccion
     */
    select?: estadoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoproduccion
     */
    omit?: estadoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoproduccionInclude<ExtArgs> | null
    /**
     * Filter, which estadoproduccion to fetch.
     */
    where: estadoproduccionWhereUniqueInput
  }

  /**
   * estadoproduccion findUniqueOrThrow
   */
  export type estadoproduccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoproduccion
     */
    select?: estadoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoproduccion
     */
    omit?: estadoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoproduccionInclude<ExtArgs> | null
    /**
     * Filter, which estadoproduccion to fetch.
     */
    where: estadoproduccionWhereUniqueInput
  }

  /**
   * estadoproduccion findFirst
   */
  export type estadoproduccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoproduccion
     */
    select?: estadoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoproduccion
     */
    omit?: estadoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoproduccionInclude<ExtArgs> | null
    /**
     * Filter, which estadoproduccion to fetch.
     */
    where?: estadoproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estadoproduccions to fetch.
     */
    orderBy?: estadoproduccionOrderByWithRelationInput | estadoproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estadoproduccions.
     */
    cursor?: estadoproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estadoproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estadoproduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estadoproduccions.
     */
    distinct?: EstadoproduccionScalarFieldEnum | EstadoproduccionScalarFieldEnum[]
  }

  /**
   * estadoproduccion findFirstOrThrow
   */
  export type estadoproduccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoproduccion
     */
    select?: estadoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoproduccion
     */
    omit?: estadoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoproduccionInclude<ExtArgs> | null
    /**
     * Filter, which estadoproduccion to fetch.
     */
    where?: estadoproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estadoproduccions to fetch.
     */
    orderBy?: estadoproduccionOrderByWithRelationInput | estadoproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estadoproduccions.
     */
    cursor?: estadoproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estadoproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estadoproduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estadoproduccions.
     */
    distinct?: EstadoproduccionScalarFieldEnum | EstadoproduccionScalarFieldEnum[]
  }

  /**
   * estadoproduccion findMany
   */
  export type estadoproduccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoproduccion
     */
    select?: estadoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoproduccion
     */
    omit?: estadoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoproduccionInclude<ExtArgs> | null
    /**
     * Filter, which estadoproduccions to fetch.
     */
    where?: estadoproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estadoproduccions to fetch.
     */
    orderBy?: estadoproduccionOrderByWithRelationInput | estadoproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing estadoproduccions.
     */
    cursor?: estadoproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estadoproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estadoproduccions.
     */
    skip?: number
    distinct?: EstadoproduccionScalarFieldEnum | EstadoproduccionScalarFieldEnum[]
  }

  /**
   * estadoproduccion create
   */
  export type estadoproduccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoproduccion
     */
    select?: estadoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoproduccion
     */
    omit?: estadoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoproduccionInclude<ExtArgs> | null
    /**
     * The data needed to create a estadoproduccion.
     */
    data: XOR<estadoproduccionCreateInput, estadoproduccionUncheckedCreateInput>
  }

  /**
   * estadoproduccion createMany
   */
  export type estadoproduccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many estadoproduccions.
     */
    data: estadoproduccionCreateManyInput | estadoproduccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * estadoproduccion createManyAndReturn
   */
  export type estadoproduccionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoproduccion
     */
    select?: estadoproduccionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estadoproduccion
     */
    omit?: estadoproduccionOmit<ExtArgs> | null
    /**
     * The data used to create many estadoproduccions.
     */
    data: estadoproduccionCreateManyInput | estadoproduccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * estadoproduccion update
   */
  export type estadoproduccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoproduccion
     */
    select?: estadoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoproduccion
     */
    omit?: estadoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoproduccionInclude<ExtArgs> | null
    /**
     * The data needed to update a estadoproduccion.
     */
    data: XOR<estadoproduccionUpdateInput, estadoproduccionUncheckedUpdateInput>
    /**
     * Choose, which estadoproduccion to update.
     */
    where: estadoproduccionWhereUniqueInput
  }

  /**
   * estadoproduccion updateMany
   */
  export type estadoproduccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update estadoproduccions.
     */
    data: XOR<estadoproduccionUpdateManyMutationInput, estadoproduccionUncheckedUpdateManyInput>
    /**
     * Filter which estadoproduccions to update
     */
    where?: estadoproduccionWhereInput
    /**
     * Limit how many estadoproduccions to update.
     */
    limit?: number
  }

  /**
   * estadoproduccion updateManyAndReturn
   */
  export type estadoproduccionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoproduccion
     */
    select?: estadoproduccionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estadoproduccion
     */
    omit?: estadoproduccionOmit<ExtArgs> | null
    /**
     * The data used to update estadoproduccions.
     */
    data: XOR<estadoproduccionUpdateManyMutationInput, estadoproduccionUncheckedUpdateManyInput>
    /**
     * Filter which estadoproduccions to update
     */
    where?: estadoproduccionWhereInput
    /**
     * Limit how many estadoproduccions to update.
     */
    limit?: number
  }

  /**
   * estadoproduccion upsert
   */
  export type estadoproduccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoproduccion
     */
    select?: estadoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoproduccion
     */
    omit?: estadoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoproduccionInclude<ExtArgs> | null
    /**
     * The filter to search for the estadoproduccion to update in case it exists.
     */
    where: estadoproduccionWhereUniqueInput
    /**
     * In case the estadoproduccion found by the `where` argument doesn't exist, create a new estadoproduccion with this data.
     */
    create: XOR<estadoproduccionCreateInput, estadoproduccionUncheckedCreateInput>
    /**
     * In case the estadoproduccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<estadoproduccionUpdateInput, estadoproduccionUncheckedUpdateInput>
  }

  /**
   * estadoproduccion delete
   */
  export type estadoproduccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoproduccion
     */
    select?: estadoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoproduccion
     */
    omit?: estadoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoproduccionInclude<ExtArgs> | null
    /**
     * Filter which estadoproduccion to delete.
     */
    where: estadoproduccionWhereUniqueInput
  }

  /**
   * estadoproduccion deleteMany
   */
  export type estadoproduccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estadoproduccions to delete
     */
    where?: estadoproduccionWhereInput
    /**
     * Limit how many estadoproduccions to delete.
     */
    limit?: number
  }

  /**
   * estadoproduccion.ordenproduccion
   */
  export type estadoproduccion$ordenproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionInclude<ExtArgs> | null
    where?: ordenproduccionWhereInput
    orderBy?: ordenproduccionOrderByWithRelationInput | ordenproduccionOrderByWithRelationInput[]
    cursor?: ordenproduccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdenproduccionScalarFieldEnum | OrdenproduccionScalarFieldEnum[]
  }

  /**
   * estadoproduccion without action
   */
  export type estadoproduccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoproduccion
     */
    select?: estadoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoproduccion
     */
    omit?: estadoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoproduccionInclude<ExtArgs> | null
  }


  /**
   * Model estadoventa
   */

  export type AggregateEstadoventa = {
    _count: EstadoventaCountAggregateOutputType | null
    _avg: EstadoventaAvgAggregateOutputType | null
    _sum: EstadoventaSumAggregateOutputType | null
    _min: EstadoventaMinAggregateOutputType | null
    _max: EstadoventaMaxAggregateOutputType | null
  }

  export type EstadoventaAvgAggregateOutputType = {
    id: number | null
  }

  export type EstadoventaSumAggregateOutputType = {
    id: number | null
  }

  export type EstadoventaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type EstadoventaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type EstadoventaCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type EstadoventaAvgAggregateInputType = {
    id?: true
  }

  export type EstadoventaSumAggregateInputType = {
    id?: true
  }

  export type EstadoventaMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type EstadoventaMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type EstadoventaCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type EstadoventaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estadoventa to aggregate.
     */
    where?: estadoventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estadoventas to fetch.
     */
    orderBy?: estadoventaOrderByWithRelationInput | estadoventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: estadoventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estadoventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estadoventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned estadoventas
    **/
    _count?: true | EstadoventaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstadoventaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstadoventaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstadoventaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstadoventaMaxAggregateInputType
  }

  export type GetEstadoventaAggregateType<T extends EstadoventaAggregateArgs> = {
        [P in keyof T & keyof AggregateEstadoventa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstadoventa[P]>
      : GetScalarType<T[P], AggregateEstadoventa[P]>
  }




  export type estadoventaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: estadoventaWhereInput
    orderBy?: estadoventaOrderByWithAggregationInput | estadoventaOrderByWithAggregationInput[]
    by: EstadoventaScalarFieldEnum[] | EstadoventaScalarFieldEnum
    having?: estadoventaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstadoventaCountAggregateInputType | true
    _avg?: EstadoventaAvgAggregateInputType
    _sum?: EstadoventaSumAggregateInputType
    _min?: EstadoventaMinAggregateInputType
    _max?: EstadoventaMaxAggregateInputType
  }

  export type EstadoventaGroupByOutputType = {
    id: number
    nombre: string
    _count: EstadoventaCountAggregateOutputType | null
    _avg: EstadoventaAvgAggregateOutputType | null
    _sum: EstadoventaSumAggregateOutputType | null
    _min: EstadoventaMinAggregateOutputType | null
    _max: EstadoventaMaxAggregateOutputType | null
  }

  type GetEstadoventaGroupByPayload<T extends estadoventaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstadoventaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstadoventaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstadoventaGroupByOutputType[P]>
            : GetScalarType<T[P], EstadoventaGroupByOutputType[P]>
        }
      >
    >


  export type estadoventaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    venta?: boolean | estadoventa$ventaArgs<ExtArgs>
    _count?: boolean | EstadoventaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estadoventa"]>

  export type estadoventaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["estadoventa"]>

  export type estadoventaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["estadoventa"]>

  export type estadoventaSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type estadoventaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["estadoventa"]>
  export type estadoventaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    venta?: boolean | estadoventa$ventaArgs<ExtArgs>
    _count?: boolean | EstadoventaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type estadoventaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type estadoventaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $estadoventaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "estadoventa"
    objects: {
      venta: Prisma.$ventaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["estadoventa"]>
    composites: {}
  }

  type estadoventaGetPayload<S extends boolean | null | undefined | estadoventaDefaultArgs> = $Result.GetResult<Prisma.$estadoventaPayload, S>

  type estadoventaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<estadoventaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstadoventaCountAggregateInputType | true
    }

  export interface estadoventaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['estadoventa'], meta: { name: 'estadoventa' } }
    /**
     * Find zero or one Estadoventa that matches the filter.
     * @param {estadoventaFindUniqueArgs} args - Arguments to find a Estadoventa
     * @example
     * // Get one Estadoventa
     * const estadoventa = await prisma.estadoventa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends estadoventaFindUniqueArgs>(args: SelectSubset<T, estadoventaFindUniqueArgs<ExtArgs>>): Prisma__estadoventaClient<$Result.GetResult<Prisma.$estadoventaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Estadoventa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {estadoventaFindUniqueOrThrowArgs} args - Arguments to find a Estadoventa
     * @example
     * // Get one Estadoventa
     * const estadoventa = await prisma.estadoventa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends estadoventaFindUniqueOrThrowArgs>(args: SelectSubset<T, estadoventaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__estadoventaClient<$Result.GetResult<Prisma.$estadoventaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estadoventa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoventaFindFirstArgs} args - Arguments to find a Estadoventa
     * @example
     * // Get one Estadoventa
     * const estadoventa = await prisma.estadoventa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends estadoventaFindFirstArgs>(args?: SelectSubset<T, estadoventaFindFirstArgs<ExtArgs>>): Prisma__estadoventaClient<$Result.GetResult<Prisma.$estadoventaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estadoventa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoventaFindFirstOrThrowArgs} args - Arguments to find a Estadoventa
     * @example
     * // Get one Estadoventa
     * const estadoventa = await prisma.estadoventa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends estadoventaFindFirstOrThrowArgs>(args?: SelectSubset<T, estadoventaFindFirstOrThrowArgs<ExtArgs>>): Prisma__estadoventaClient<$Result.GetResult<Prisma.$estadoventaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Estadoventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoventaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estadoventas
     * const estadoventas = await prisma.estadoventa.findMany()
     * 
     * // Get first 10 Estadoventas
     * const estadoventas = await prisma.estadoventa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estadoventaWithIdOnly = await prisma.estadoventa.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends estadoventaFindManyArgs>(args?: SelectSubset<T, estadoventaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estadoventaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Estadoventa.
     * @param {estadoventaCreateArgs} args - Arguments to create a Estadoventa.
     * @example
     * // Create one Estadoventa
     * const Estadoventa = await prisma.estadoventa.create({
     *   data: {
     *     // ... data to create a Estadoventa
     *   }
     * })
     * 
     */
    create<T extends estadoventaCreateArgs>(args: SelectSubset<T, estadoventaCreateArgs<ExtArgs>>): Prisma__estadoventaClient<$Result.GetResult<Prisma.$estadoventaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Estadoventas.
     * @param {estadoventaCreateManyArgs} args - Arguments to create many Estadoventas.
     * @example
     * // Create many Estadoventas
     * const estadoventa = await prisma.estadoventa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends estadoventaCreateManyArgs>(args?: SelectSubset<T, estadoventaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Estadoventas and returns the data saved in the database.
     * @param {estadoventaCreateManyAndReturnArgs} args - Arguments to create many Estadoventas.
     * @example
     * // Create many Estadoventas
     * const estadoventa = await prisma.estadoventa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Estadoventas and only return the `id`
     * const estadoventaWithIdOnly = await prisma.estadoventa.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends estadoventaCreateManyAndReturnArgs>(args?: SelectSubset<T, estadoventaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estadoventaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Estadoventa.
     * @param {estadoventaDeleteArgs} args - Arguments to delete one Estadoventa.
     * @example
     * // Delete one Estadoventa
     * const Estadoventa = await prisma.estadoventa.delete({
     *   where: {
     *     // ... filter to delete one Estadoventa
     *   }
     * })
     * 
     */
    delete<T extends estadoventaDeleteArgs>(args: SelectSubset<T, estadoventaDeleteArgs<ExtArgs>>): Prisma__estadoventaClient<$Result.GetResult<Prisma.$estadoventaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Estadoventa.
     * @param {estadoventaUpdateArgs} args - Arguments to update one Estadoventa.
     * @example
     * // Update one Estadoventa
     * const estadoventa = await prisma.estadoventa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends estadoventaUpdateArgs>(args: SelectSubset<T, estadoventaUpdateArgs<ExtArgs>>): Prisma__estadoventaClient<$Result.GetResult<Prisma.$estadoventaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Estadoventas.
     * @param {estadoventaDeleteManyArgs} args - Arguments to filter Estadoventas to delete.
     * @example
     * // Delete a few Estadoventas
     * const { count } = await prisma.estadoventa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends estadoventaDeleteManyArgs>(args?: SelectSubset<T, estadoventaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estadoventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoventaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estadoventas
     * const estadoventa = await prisma.estadoventa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends estadoventaUpdateManyArgs>(args: SelectSubset<T, estadoventaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estadoventas and returns the data updated in the database.
     * @param {estadoventaUpdateManyAndReturnArgs} args - Arguments to update many Estadoventas.
     * @example
     * // Update many Estadoventas
     * const estadoventa = await prisma.estadoventa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Estadoventas and only return the `id`
     * const estadoventaWithIdOnly = await prisma.estadoventa.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends estadoventaUpdateManyAndReturnArgs>(args: SelectSubset<T, estadoventaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$estadoventaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Estadoventa.
     * @param {estadoventaUpsertArgs} args - Arguments to update or create a Estadoventa.
     * @example
     * // Update or create a Estadoventa
     * const estadoventa = await prisma.estadoventa.upsert({
     *   create: {
     *     // ... data to create a Estadoventa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estadoventa we want to update
     *   }
     * })
     */
    upsert<T extends estadoventaUpsertArgs>(args: SelectSubset<T, estadoventaUpsertArgs<ExtArgs>>): Prisma__estadoventaClient<$Result.GetResult<Prisma.$estadoventaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Estadoventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoventaCountArgs} args - Arguments to filter Estadoventas to count.
     * @example
     * // Count the number of Estadoventas
     * const count = await prisma.estadoventa.count({
     *   where: {
     *     // ... the filter for the Estadoventas we want to count
     *   }
     * })
    **/
    count<T extends estadoventaCountArgs>(
      args?: Subset<T, estadoventaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstadoventaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estadoventa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadoventaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstadoventaAggregateArgs>(args: Subset<T, EstadoventaAggregateArgs>): Prisma.PrismaPromise<GetEstadoventaAggregateType<T>>

    /**
     * Group by Estadoventa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {estadoventaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends estadoventaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: estadoventaGroupByArgs['orderBy'] }
        : { orderBy?: estadoventaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, estadoventaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstadoventaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the estadoventa model
   */
  readonly fields: estadoventaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for estadoventa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__estadoventaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    venta<T extends estadoventa$ventaArgs<ExtArgs> = {}>(args?: Subset<T, estadoventa$ventaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ventaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the estadoventa model
   */
  interface estadoventaFieldRefs {
    readonly id: FieldRef<"estadoventa", 'Int'>
    readonly nombre: FieldRef<"estadoventa", 'String'>
  }
    

  // Custom InputTypes
  /**
   * estadoventa findUnique
   */
  export type estadoventaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoventa
     */
    select?: estadoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoventa
     */
    omit?: estadoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoventaInclude<ExtArgs> | null
    /**
     * Filter, which estadoventa to fetch.
     */
    where: estadoventaWhereUniqueInput
  }

  /**
   * estadoventa findUniqueOrThrow
   */
  export type estadoventaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoventa
     */
    select?: estadoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoventa
     */
    omit?: estadoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoventaInclude<ExtArgs> | null
    /**
     * Filter, which estadoventa to fetch.
     */
    where: estadoventaWhereUniqueInput
  }

  /**
   * estadoventa findFirst
   */
  export type estadoventaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoventa
     */
    select?: estadoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoventa
     */
    omit?: estadoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoventaInclude<ExtArgs> | null
    /**
     * Filter, which estadoventa to fetch.
     */
    where?: estadoventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estadoventas to fetch.
     */
    orderBy?: estadoventaOrderByWithRelationInput | estadoventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estadoventas.
     */
    cursor?: estadoventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estadoventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estadoventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estadoventas.
     */
    distinct?: EstadoventaScalarFieldEnum | EstadoventaScalarFieldEnum[]
  }

  /**
   * estadoventa findFirstOrThrow
   */
  export type estadoventaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoventa
     */
    select?: estadoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoventa
     */
    omit?: estadoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoventaInclude<ExtArgs> | null
    /**
     * Filter, which estadoventa to fetch.
     */
    where?: estadoventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estadoventas to fetch.
     */
    orderBy?: estadoventaOrderByWithRelationInput | estadoventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for estadoventas.
     */
    cursor?: estadoventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estadoventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estadoventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of estadoventas.
     */
    distinct?: EstadoventaScalarFieldEnum | EstadoventaScalarFieldEnum[]
  }

  /**
   * estadoventa findMany
   */
  export type estadoventaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoventa
     */
    select?: estadoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoventa
     */
    omit?: estadoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoventaInclude<ExtArgs> | null
    /**
     * Filter, which estadoventas to fetch.
     */
    where?: estadoventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of estadoventas to fetch.
     */
    orderBy?: estadoventaOrderByWithRelationInput | estadoventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing estadoventas.
     */
    cursor?: estadoventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` estadoventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` estadoventas.
     */
    skip?: number
    distinct?: EstadoventaScalarFieldEnum | EstadoventaScalarFieldEnum[]
  }

  /**
   * estadoventa create
   */
  export type estadoventaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoventa
     */
    select?: estadoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoventa
     */
    omit?: estadoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoventaInclude<ExtArgs> | null
    /**
     * The data needed to create a estadoventa.
     */
    data: XOR<estadoventaCreateInput, estadoventaUncheckedCreateInput>
  }

  /**
   * estadoventa createMany
   */
  export type estadoventaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many estadoventas.
     */
    data: estadoventaCreateManyInput | estadoventaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * estadoventa createManyAndReturn
   */
  export type estadoventaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoventa
     */
    select?: estadoventaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estadoventa
     */
    omit?: estadoventaOmit<ExtArgs> | null
    /**
     * The data used to create many estadoventas.
     */
    data: estadoventaCreateManyInput | estadoventaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * estadoventa update
   */
  export type estadoventaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoventa
     */
    select?: estadoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoventa
     */
    omit?: estadoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoventaInclude<ExtArgs> | null
    /**
     * The data needed to update a estadoventa.
     */
    data: XOR<estadoventaUpdateInput, estadoventaUncheckedUpdateInput>
    /**
     * Choose, which estadoventa to update.
     */
    where: estadoventaWhereUniqueInput
  }

  /**
   * estadoventa updateMany
   */
  export type estadoventaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update estadoventas.
     */
    data: XOR<estadoventaUpdateManyMutationInput, estadoventaUncheckedUpdateManyInput>
    /**
     * Filter which estadoventas to update
     */
    where?: estadoventaWhereInput
    /**
     * Limit how many estadoventas to update.
     */
    limit?: number
  }

  /**
   * estadoventa updateManyAndReturn
   */
  export type estadoventaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoventa
     */
    select?: estadoventaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the estadoventa
     */
    omit?: estadoventaOmit<ExtArgs> | null
    /**
     * The data used to update estadoventas.
     */
    data: XOR<estadoventaUpdateManyMutationInput, estadoventaUncheckedUpdateManyInput>
    /**
     * Filter which estadoventas to update
     */
    where?: estadoventaWhereInput
    /**
     * Limit how many estadoventas to update.
     */
    limit?: number
  }

  /**
   * estadoventa upsert
   */
  export type estadoventaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoventa
     */
    select?: estadoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoventa
     */
    omit?: estadoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoventaInclude<ExtArgs> | null
    /**
     * The filter to search for the estadoventa to update in case it exists.
     */
    where: estadoventaWhereUniqueInput
    /**
     * In case the estadoventa found by the `where` argument doesn't exist, create a new estadoventa with this data.
     */
    create: XOR<estadoventaCreateInput, estadoventaUncheckedCreateInput>
    /**
     * In case the estadoventa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<estadoventaUpdateInput, estadoventaUncheckedUpdateInput>
  }

  /**
   * estadoventa delete
   */
  export type estadoventaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoventa
     */
    select?: estadoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoventa
     */
    omit?: estadoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoventaInclude<ExtArgs> | null
    /**
     * Filter which estadoventa to delete.
     */
    where: estadoventaWhereUniqueInput
  }

  /**
   * estadoventa deleteMany
   */
  export type estadoventaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which estadoventas to delete
     */
    where?: estadoventaWhereInput
    /**
     * Limit how many estadoventas to delete.
     */
    limit?: number
  }

  /**
   * estadoventa.venta
   */
  export type estadoventa$ventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaInclude<ExtArgs> | null
    where?: ventaWhereInput
    orderBy?: ventaOrderByWithRelationInput | ventaOrderByWithRelationInput[]
    cursor?: ventaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * estadoventa without action
   */
  export type estadoventaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoventa
     */
    select?: estadoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoventa
     */
    omit?: estadoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoventaInclude<ExtArgs> | null
  }


  /**
   * Model insumoproduccion
   */

  export type AggregateInsumoproduccion = {
    _count: InsumoproduccionCountAggregateOutputType | null
    _avg: InsumoproduccionAvgAggregateOutputType | null
    _sum: InsumoproduccionSumAggregateOutputType | null
    _min: InsumoproduccionMinAggregateOutputType | null
    _max: InsumoproduccionMaxAggregateOutputType | null
  }

  export type InsumoproduccionAvgAggregateOutputType = {
    id: number | null
    orden_id: number | null
    producto_id: number | null
    cantidad: number | null
  }

  export type InsumoproduccionSumAggregateOutputType = {
    id: number | null
    orden_id: number | null
    producto_id: number | null
    cantidad: number | null
  }

  export type InsumoproduccionMinAggregateOutputType = {
    id: number | null
    orden_id: number | null
    producto_id: number | null
    cantidad: number | null
  }

  export type InsumoproduccionMaxAggregateOutputType = {
    id: number | null
    orden_id: number | null
    producto_id: number | null
    cantidad: number | null
  }

  export type InsumoproduccionCountAggregateOutputType = {
    id: number
    orden_id: number
    producto_id: number
    cantidad: number
    _all: number
  }


  export type InsumoproduccionAvgAggregateInputType = {
    id?: true
    orden_id?: true
    producto_id?: true
    cantidad?: true
  }

  export type InsumoproduccionSumAggregateInputType = {
    id?: true
    orden_id?: true
    producto_id?: true
    cantidad?: true
  }

  export type InsumoproduccionMinAggregateInputType = {
    id?: true
    orden_id?: true
    producto_id?: true
    cantidad?: true
  }

  export type InsumoproduccionMaxAggregateInputType = {
    id?: true
    orden_id?: true
    producto_id?: true
    cantidad?: true
  }

  export type InsumoproduccionCountAggregateInputType = {
    id?: true
    orden_id?: true
    producto_id?: true
    cantidad?: true
    _all?: true
  }

  export type InsumoproduccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which insumoproduccion to aggregate.
     */
    where?: insumoproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of insumoproduccions to fetch.
     */
    orderBy?: insumoproduccionOrderByWithRelationInput | insumoproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: insumoproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` insumoproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` insumoproduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned insumoproduccions
    **/
    _count?: true | InsumoproduccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InsumoproduccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InsumoproduccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InsumoproduccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InsumoproduccionMaxAggregateInputType
  }

  export type GetInsumoproduccionAggregateType<T extends InsumoproduccionAggregateArgs> = {
        [P in keyof T & keyof AggregateInsumoproduccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInsumoproduccion[P]>
      : GetScalarType<T[P], AggregateInsumoproduccion[P]>
  }




  export type insumoproduccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: insumoproduccionWhereInput
    orderBy?: insumoproduccionOrderByWithAggregationInput | insumoproduccionOrderByWithAggregationInput[]
    by: InsumoproduccionScalarFieldEnum[] | InsumoproduccionScalarFieldEnum
    having?: insumoproduccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InsumoproduccionCountAggregateInputType | true
    _avg?: InsumoproduccionAvgAggregateInputType
    _sum?: InsumoproduccionSumAggregateInputType
    _min?: InsumoproduccionMinAggregateInputType
    _max?: InsumoproduccionMaxAggregateInputType
  }

  export type InsumoproduccionGroupByOutputType = {
    id: number
    orden_id: number | null
    producto_id: number | null
    cantidad: number
    _count: InsumoproduccionCountAggregateOutputType | null
    _avg: InsumoproduccionAvgAggregateOutputType | null
    _sum: InsumoproduccionSumAggregateOutputType | null
    _min: InsumoproduccionMinAggregateOutputType | null
    _max: InsumoproduccionMaxAggregateOutputType | null
  }

  type GetInsumoproduccionGroupByPayload<T extends insumoproduccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InsumoproduccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InsumoproduccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InsumoproduccionGroupByOutputType[P]>
            : GetScalarType<T[P], InsumoproduccionGroupByOutputType[P]>
        }
      >
    >


  export type insumoproduccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orden_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
    ordenproduccion?: boolean | insumoproduccion$ordenproduccionArgs<ExtArgs>
    producto?: boolean | insumoproduccion$productoArgs<ExtArgs>
  }, ExtArgs["result"]["insumoproduccion"]>

  export type insumoproduccionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orden_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
    ordenproduccion?: boolean | insumoproduccion$ordenproduccionArgs<ExtArgs>
    producto?: boolean | insumoproduccion$productoArgs<ExtArgs>
  }, ExtArgs["result"]["insumoproduccion"]>

  export type insumoproduccionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orden_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
    ordenproduccion?: boolean | insumoproduccion$ordenproduccionArgs<ExtArgs>
    producto?: boolean | insumoproduccion$productoArgs<ExtArgs>
  }, ExtArgs["result"]["insumoproduccion"]>

  export type insumoproduccionSelectScalar = {
    id?: boolean
    orden_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
  }

  export type insumoproduccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orden_id" | "producto_id" | "cantidad", ExtArgs["result"]["insumoproduccion"]>
  export type insumoproduccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordenproduccion?: boolean | insumoproduccion$ordenproduccionArgs<ExtArgs>
    producto?: boolean | insumoproduccion$productoArgs<ExtArgs>
  }
  export type insumoproduccionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordenproduccion?: boolean | insumoproduccion$ordenproduccionArgs<ExtArgs>
    producto?: boolean | insumoproduccion$productoArgs<ExtArgs>
  }
  export type insumoproduccionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ordenproduccion?: boolean | insumoproduccion$ordenproduccionArgs<ExtArgs>
    producto?: boolean | insumoproduccion$productoArgs<ExtArgs>
  }

  export type $insumoproduccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "insumoproduccion"
    objects: {
      ordenproduccion: Prisma.$ordenproduccionPayload<ExtArgs> | null
      producto: Prisma.$productoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      orden_id: number | null
      producto_id: number | null
      cantidad: number
    }, ExtArgs["result"]["insumoproduccion"]>
    composites: {}
  }

  type insumoproduccionGetPayload<S extends boolean | null | undefined | insumoproduccionDefaultArgs> = $Result.GetResult<Prisma.$insumoproduccionPayload, S>

  type insumoproduccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<insumoproduccionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InsumoproduccionCountAggregateInputType | true
    }

  export interface insumoproduccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['insumoproduccion'], meta: { name: 'insumoproduccion' } }
    /**
     * Find zero or one Insumoproduccion that matches the filter.
     * @param {insumoproduccionFindUniqueArgs} args - Arguments to find a Insumoproduccion
     * @example
     * // Get one Insumoproduccion
     * const insumoproduccion = await prisma.insumoproduccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends insumoproduccionFindUniqueArgs>(args: SelectSubset<T, insumoproduccionFindUniqueArgs<ExtArgs>>): Prisma__insumoproduccionClient<$Result.GetResult<Prisma.$insumoproduccionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Insumoproduccion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {insumoproduccionFindUniqueOrThrowArgs} args - Arguments to find a Insumoproduccion
     * @example
     * // Get one Insumoproduccion
     * const insumoproduccion = await prisma.insumoproduccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends insumoproduccionFindUniqueOrThrowArgs>(args: SelectSubset<T, insumoproduccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__insumoproduccionClient<$Result.GetResult<Prisma.$insumoproduccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Insumoproduccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {insumoproduccionFindFirstArgs} args - Arguments to find a Insumoproduccion
     * @example
     * // Get one Insumoproduccion
     * const insumoproduccion = await prisma.insumoproduccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends insumoproduccionFindFirstArgs>(args?: SelectSubset<T, insumoproduccionFindFirstArgs<ExtArgs>>): Prisma__insumoproduccionClient<$Result.GetResult<Prisma.$insumoproduccionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Insumoproduccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {insumoproduccionFindFirstOrThrowArgs} args - Arguments to find a Insumoproduccion
     * @example
     * // Get one Insumoproduccion
     * const insumoproduccion = await prisma.insumoproduccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends insumoproduccionFindFirstOrThrowArgs>(args?: SelectSubset<T, insumoproduccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__insumoproduccionClient<$Result.GetResult<Prisma.$insumoproduccionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Insumoproduccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {insumoproduccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Insumoproduccions
     * const insumoproduccions = await prisma.insumoproduccion.findMany()
     * 
     * // Get first 10 Insumoproduccions
     * const insumoproduccions = await prisma.insumoproduccion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const insumoproduccionWithIdOnly = await prisma.insumoproduccion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends insumoproduccionFindManyArgs>(args?: SelectSubset<T, insumoproduccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$insumoproduccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Insumoproduccion.
     * @param {insumoproduccionCreateArgs} args - Arguments to create a Insumoproduccion.
     * @example
     * // Create one Insumoproduccion
     * const Insumoproduccion = await prisma.insumoproduccion.create({
     *   data: {
     *     // ... data to create a Insumoproduccion
     *   }
     * })
     * 
     */
    create<T extends insumoproduccionCreateArgs>(args: SelectSubset<T, insumoproduccionCreateArgs<ExtArgs>>): Prisma__insumoproduccionClient<$Result.GetResult<Prisma.$insumoproduccionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Insumoproduccions.
     * @param {insumoproduccionCreateManyArgs} args - Arguments to create many Insumoproduccions.
     * @example
     * // Create many Insumoproduccions
     * const insumoproduccion = await prisma.insumoproduccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends insumoproduccionCreateManyArgs>(args?: SelectSubset<T, insumoproduccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Insumoproduccions and returns the data saved in the database.
     * @param {insumoproduccionCreateManyAndReturnArgs} args - Arguments to create many Insumoproduccions.
     * @example
     * // Create many Insumoproduccions
     * const insumoproduccion = await prisma.insumoproduccion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Insumoproduccions and only return the `id`
     * const insumoproduccionWithIdOnly = await prisma.insumoproduccion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends insumoproduccionCreateManyAndReturnArgs>(args?: SelectSubset<T, insumoproduccionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$insumoproduccionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Insumoproduccion.
     * @param {insumoproduccionDeleteArgs} args - Arguments to delete one Insumoproduccion.
     * @example
     * // Delete one Insumoproduccion
     * const Insumoproduccion = await prisma.insumoproduccion.delete({
     *   where: {
     *     // ... filter to delete one Insumoproduccion
     *   }
     * })
     * 
     */
    delete<T extends insumoproduccionDeleteArgs>(args: SelectSubset<T, insumoproduccionDeleteArgs<ExtArgs>>): Prisma__insumoproduccionClient<$Result.GetResult<Prisma.$insumoproduccionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Insumoproduccion.
     * @param {insumoproduccionUpdateArgs} args - Arguments to update one Insumoproduccion.
     * @example
     * // Update one Insumoproduccion
     * const insumoproduccion = await prisma.insumoproduccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends insumoproduccionUpdateArgs>(args: SelectSubset<T, insumoproduccionUpdateArgs<ExtArgs>>): Prisma__insumoproduccionClient<$Result.GetResult<Prisma.$insumoproduccionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Insumoproduccions.
     * @param {insumoproduccionDeleteManyArgs} args - Arguments to filter Insumoproduccions to delete.
     * @example
     * // Delete a few Insumoproduccions
     * const { count } = await prisma.insumoproduccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends insumoproduccionDeleteManyArgs>(args?: SelectSubset<T, insumoproduccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Insumoproduccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {insumoproduccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Insumoproduccions
     * const insumoproduccion = await prisma.insumoproduccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends insumoproduccionUpdateManyArgs>(args: SelectSubset<T, insumoproduccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Insumoproduccions and returns the data updated in the database.
     * @param {insumoproduccionUpdateManyAndReturnArgs} args - Arguments to update many Insumoproduccions.
     * @example
     * // Update many Insumoproduccions
     * const insumoproduccion = await prisma.insumoproduccion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Insumoproduccions and only return the `id`
     * const insumoproduccionWithIdOnly = await prisma.insumoproduccion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends insumoproduccionUpdateManyAndReturnArgs>(args: SelectSubset<T, insumoproduccionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$insumoproduccionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Insumoproduccion.
     * @param {insumoproduccionUpsertArgs} args - Arguments to update or create a Insumoproduccion.
     * @example
     * // Update or create a Insumoproduccion
     * const insumoproduccion = await prisma.insumoproduccion.upsert({
     *   create: {
     *     // ... data to create a Insumoproduccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Insumoproduccion we want to update
     *   }
     * })
     */
    upsert<T extends insumoproduccionUpsertArgs>(args: SelectSubset<T, insumoproduccionUpsertArgs<ExtArgs>>): Prisma__insumoproduccionClient<$Result.GetResult<Prisma.$insumoproduccionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Insumoproduccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {insumoproduccionCountArgs} args - Arguments to filter Insumoproduccions to count.
     * @example
     * // Count the number of Insumoproduccions
     * const count = await prisma.insumoproduccion.count({
     *   where: {
     *     // ... the filter for the Insumoproduccions we want to count
     *   }
     * })
    **/
    count<T extends insumoproduccionCountArgs>(
      args?: Subset<T, insumoproduccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InsumoproduccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Insumoproduccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InsumoproduccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InsumoproduccionAggregateArgs>(args: Subset<T, InsumoproduccionAggregateArgs>): Prisma.PrismaPromise<GetInsumoproduccionAggregateType<T>>

    /**
     * Group by Insumoproduccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {insumoproduccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends insumoproduccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: insumoproduccionGroupByArgs['orderBy'] }
        : { orderBy?: insumoproduccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, insumoproduccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInsumoproduccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the insumoproduccion model
   */
  readonly fields: insumoproduccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for insumoproduccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__insumoproduccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ordenproduccion<T extends insumoproduccion$ordenproduccionArgs<ExtArgs> = {}>(args?: Subset<T, insumoproduccion$ordenproduccionArgs<ExtArgs>>): Prisma__ordenproduccionClient<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    producto<T extends insumoproduccion$productoArgs<ExtArgs> = {}>(args?: Subset<T, insumoproduccion$productoArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the insumoproduccion model
   */
  interface insumoproduccionFieldRefs {
    readonly id: FieldRef<"insumoproduccion", 'Int'>
    readonly orden_id: FieldRef<"insumoproduccion", 'Int'>
    readonly producto_id: FieldRef<"insumoproduccion", 'Int'>
    readonly cantidad: FieldRef<"insumoproduccion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * insumoproduccion findUnique
   */
  export type insumoproduccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumoproduccion
     */
    select?: insumoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumoproduccion
     */
    omit?: insumoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumoproduccionInclude<ExtArgs> | null
    /**
     * Filter, which insumoproduccion to fetch.
     */
    where: insumoproduccionWhereUniqueInput
  }

  /**
   * insumoproduccion findUniqueOrThrow
   */
  export type insumoproduccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumoproduccion
     */
    select?: insumoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumoproduccion
     */
    omit?: insumoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumoproduccionInclude<ExtArgs> | null
    /**
     * Filter, which insumoproduccion to fetch.
     */
    where: insumoproduccionWhereUniqueInput
  }

  /**
   * insumoproduccion findFirst
   */
  export type insumoproduccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumoproduccion
     */
    select?: insumoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumoproduccion
     */
    omit?: insumoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumoproduccionInclude<ExtArgs> | null
    /**
     * Filter, which insumoproduccion to fetch.
     */
    where?: insumoproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of insumoproduccions to fetch.
     */
    orderBy?: insumoproduccionOrderByWithRelationInput | insumoproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for insumoproduccions.
     */
    cursor?: insumoproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` insumoproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` insumoproduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of insumoproduccions.
     */
    distinct?: InsumoproduccionScalarFieldEnum | InsumoproduccionScalarFieldEnum[]
  }

  /**
   * insumoproduccion findFirstOrThrow
   */
  export type insumoproduccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumoproduccion
     */
    select?: insumoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumoproduccion
     */
    omit?: insumoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumoproduccionInclude<ExtArgs> | null
    /**
     * Filter, which insumoproduccion to fetch.
     */
    where?: insumoproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of insumoproduccions to fetch.
     */
    orderBy?: insumoproduccionOrderByWithRelationInput | insumoproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for insumoproduccions.
     */
    cursor?: insumoproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` insumoproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` insumoproduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of insumoproduccions.
     */
    distinct?: InsumoproduccionScalarFieldEnum | InsumoproduccionScalarFieldEnum[]
  }

  /**
   * insumoproduccion findMany
   */
  export type insumoproduccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumoproduccion
     */
    select?: insumoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumoproduccion
     */
    omit?: insumoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumoproduccionInclude<ExtArgs> | null
    /**
     * Filter, which insumoproduccions to fetch.
     */
    where?: insumoproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of insumoproduccions to fetch.
     */
    orderBy?: insumoproduccionOrderByWithRelationInput | insumoproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing insumoproduccions.
     */
    cursor?: insumoproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` insumoproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` insumoproduccions.
     */
    skip?: number
    distinct?: InsumoproduccionScalarFieldEnum | InsumoproduccionScalarFieldEnum[]
  }

  /**
   * insumoproduccion create
   */
  export type insumoproduccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumoproduccion
     */
    select?: insumoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumoproduccion
     */
    omit?: insumoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumoproduccionInclude<ExtArgs> | null
    /**
     * The data needed to create a insumoproduccion.
     */
    data: XOR<insumoproduccionCreateInput, insumoproduccionUncheckedCreateInput>
  }

  /**
   * insumoproduccion createMany
   */
  export type insumoproduccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many insumoproduccions.
     */
    data: insumoproduccionCreateManyInput | insumoproduccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * insumoproduccion createManyAndReturn
   */
  export type insumoproduccionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumoproduccion
     */
    select?: insumoproduccionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the insumoproduccion
     */
    omit?: insumoproduccionOmit<ExtArgs> | null
    /**
     * The data used to create many insumoproduccions.
     */
    data: insumoproduccionCreateManyInput | insumoproduccionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumoproduccionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * insumoproduccion update
   */
  export type insumoproduccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumoproduccion
     */
    select?: insumoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumoproduccion
     */
    omit?: insumoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumoproduccionInclude<ExtArgs> | null
    /**
     * The data needed to update a insumoproduccion.
     */
    data: XOR<insumoproduccionUpdateInput, insumoproduccionUncheckedUpdateInput>
    /**
     * Choose, which insumoproduccion to update.
     */
    where: insumoproduccionWhereUniqueInput
  }

  /**
   * insumoproduccion updateMany
   */
  export type insumoproduccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update insumoproduccions.
     */
    data: XOR<insumoproduccionUpdateManyMutationInput, insumoproduccionUncheckedUpdateManyInput>
    /**
     * Filter which insumoproduccions to update
     */
    where?: insumoproduccionWhereInput
    /**
     * Limit how many insumoproduccions to update.
     */
    limit?: number
  }

  /**
   * insumoproduccion updateManyAndReturn
   */
  export type insumoproduccionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumoproduccion
     */
    select?: insumoproduccionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the insumoproduccion
     */
    omit?: insumoproduccionOmit<ExtArgs> | null
    /**
     * The data used to update insumoproduccions.
     */
    data: XOR<insumoproduccionUpdateManyMutationInput, insumoproduccionUncheckedUpdateManyInput>
    /**
     * Filter which insumoproduccions to update
     */
    where?: insumoproduccionWhereInput
    /**
     * Limit how many insumoproduccions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumoproduccionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * insumoproduccion upsert
   */
  export type insumoproduccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumoproduccion
     */
    select?: insumoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumoproduccion
     */
    omit?: insumoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumoproduccionInclude<ExtArgs> | null
    /**
     * The filter to search for the insumoproduccion to update in case it exists.
     */
    where: insumoproduccionWhereUniqueInput
    /**
     * In case the insumoproduccion found by the `where` argument doesn't exist, create a new insumoproduccion with this data.
     */
    create: XOR<insumoproduccionCreateInput, insumoproduccionUncheckedCreateInput>
    /**
     * In case the insumoproduccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<insumoproduccionUpdateInput, insumoproduccionUncheckedUpdateInput>
  }

  /**
   * insumoproduccion delete
   */
  export type insumoproduccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumoproduccion
     */
    select?: insumoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumoproduccion
     */
    omit?: insumoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumoproduccionInclude<ExtArgs> | null
    /**
     * Filter which insumoproduccion to delete.
     */
    where: insumoproduccionWhereUniqueInput
  }

  /**
   * insumoproduccion deleteMany
   */
  export type insumoproduccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which insumoproduccions to delete
     */
    where?: insumoproduccionWhereInput
    /**
     * Limit how many insumoproduccions to delete.
     */
    limit?: number
  }

  /**
   * insumoproduccion.ordenproduccion
   */
  export type insumoproduccion$ordenproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionInclude<ExtArgs> | null
    where?: ordenproduccionWhereInput
  }

  /**
   * insumoproduccion.producto
   */
  export type insumoproduccion$productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    where?: productoWhereInput
  }

  /**
   * insumoproduccion without action
   */
  export type insumoproduccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumoproduccion
     */
    select?: insumoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumoproduccion
     */
    omit?: insumoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumoproduccionInclude<ExtArgs> | null
  }


  /**
   * Model listaprecio
   */

  export type AggregateListaprecio = {
    _count: ListaprecioCountAggregateOutputType | null
    _avg: ListaprecioAvgAggregateOutputType | null
    _sum: ListaprecioSumAggregateOutputType | null
    _min: ListaprecioMinAggregateOutputType | null
    _max: ListaprecioMaxAggregateOutputType | null
  }

  export type ListaprecioAvgAggregateOutputType = {
    id: number | null
    producto_id: number | null
    sucursal_id: number | null
    tipo_lista_id: number | null
    precio: Decimal | null
  }

  export type ListaprecioSumAggregateOutputType = {
    id: number | null
    producto_id: number | null
    sucursal_id: number | null
    tipo_lista_id: number | null
    precio: Decimal | null
  }

  export type ListaprecioMinAggregateOutputType = {
    id: number | null
    producto_id: number | null
    sucursal_id: number | null
    tipo_lista_id: number | null
    precio: Decimal | null
  }

  export type ListaprecioMaxAggregateOutputType = {
    id: number | null
    producto_id: number | null
    sucursal_id: number | null
    tipo_lista_id: number | null
    precio: Decimal | null
  }

  export type ListaprecioCountAggregateOutputType = {
    id: number
    producto_id: number
    sucursal_id: number
    tipo_lista_id: number
    precio: number
    _all: number
  }


  export type ListaprecioAvgAggregateInputType = {
    id?: true
    producto_id?: true
    sucursal_id?: true
    tipo_lista_id?: true
    precio?: true
  }

  export type ListaprecioSumAggregateInputType = {
    id?: true
    producto_id?: true
    sucursal_id?: true
    tipo_lista_id?: true
    precio?: true
  }

  export type ListaprecioMinAggregateInputType = {
    id?: true
    producto_id?: true
    sucursal_id?: true
    tipo_lista_id?: true
    precio?: true
  }

  export type ListaprecioMaxAggregateInputType = {
    id?: true
    producto_id?: true
    sucursal_id?: true
    tipo_lista_id?: true
    precio?: true
  }

  export type ListaprecioCountAggregateInputType = {
    id?: true
    producto_id?: true
    sucursal_id?: true
    tipo_lista_id?: true
    precio?: true
    _all?: true
  }

  export type ListaprecioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which listaprecio to aggregate.
     */
    where?: listaprecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of listaprecios to fetch.
     */
    orderBy?: listaprecioOrderByWithRelationInput | listaprecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: listaprecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` listaprecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` listaprecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned listaprecios
    **/
    _count?: true | ListaprecioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ListaprecioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ListaprecioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListaprecioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListaprecioMaxAggregateInputType
  }

  export type GetListaprecioAggregateType<T extends ListaprecioAggregateArgs> = {
        [P in keyof T & keyof AggregateListaprecio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListaprecio[P]>
      : GetScalarType<T[P], AggregateListaprecio[P]>
  }




  export type listaprecioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: listaprecioWhereInput
    orderBy?: listaprecioOrderByWithAggregationInput | listaprecioOrderByWithAggregationInput[]
    by: ListaprecioScalarFieldEnum[] | ListaprecioScalarFieldEnum
    having?: listaprecioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListaprecioCountAggregateInputType | true
    _avg?: ListaprecioAvgAggregateInputType
    _sum?: ListaprecioSumAggregateInputType
    _min?: ListaprecioMinAggregateInputType
    _max?: ListaprecioMaxAggregateInputType
  }

  export type ListaprecioGroupByOutputType = {
    id: number
    producto_id: number | null
    sucursal_id: number | null
    tipo_lista_id: number | null
    precio: Decimal
    _count: ListaprecioCountAggregateOutputType | null
    _avg: ListaprecioAvgAggregateOutputType | null
    _sum: ListaprecioSumAggregateOutputType | null
    _min: ListaprecioMinAggregateOutputType | null
    _max: ListaprecioMaxAggregateOutputType | null
  }

  type GetListaprecioGroupByPayload<T extends listaprecioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListaprecioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListaprecioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListaprecioGroupByOutputType[P]>
            : GetScalarType<T[P], ListaprecioGroupByOutputType[P]>
        }
      >
    >


  export type listaprecioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producto_id?: boolean
    sucursal_id?: boolean
    tipo_lista_id?: boolean
    precio?: boolean
    producto?: boolean | listaprecio$productoArgs<ExtArgs>
    sucursal?: boolean | listaprecio$sucursalArgs<ExtArgs>
    tipolistaprecio?: boolean | listaprecio$tipolistaprecioArgs<ExtArgs>
  }, ExtArgs["result"]["listaprecio"]>

  export type listaprecioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producto_id?: boolean
    sucursal_id?: boolean
    tipo_lista_id?: boolean
    precio?: boolean
    producto?: boolean | listaprecio$productoArgs<ExtArgs>
    sucursal?: boolean | listaprecio$sucursalArgs<ExtArgs>
    tipolistaprecio?: boolean | listaprecio$tipolistaprecioArgs<ExtArgs>
  }, ExtArgs["result"]["listaprecio"]>

  export type listaprecioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producto_id?: boolean
    sucursal_id?: boolean
    tipo_lista_id?: boolean
    precio?: boolean
    producto?: boolean | listaprecio$productoArgs<ExtArgs>
    sucursal?: boolean | listaprecio$sucursalArgs<ExtArgs>
    tipolistaprecio?: boolean | listaprecio$tipolistaprecioArgs<ExtArgs>
  }, ExtArgs["result"]["listaprecio"]>

  export type listaprecioSelectScalar = {
    id?: boolean
    producto_id?: boolean
    sucursal_id?: boolean
    tipo_lista_id?: boolean
    precio?: boolean
  }

  export type listaprecioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "producto_id" | "sucursal_id" | "tipo_lista_id" | "precio", ExtArgs["result"]["listaprecio"]>
  export type listaprecioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | listaprecio$productoArgs<ExtArgs>
    sucursal?: boolean | listaprecio$sucursalArgs<ExtArgs>
    tipolistaprecio?: boolean | listaprecio$tipolistaprecioArgs<ExtArgs>
  }
  export type listaprecioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | listaprecio$productoArgs<ExtArgs>
    sucursal?: boolean | listaprecio$sucursalArgs<ExtArgs>
    tipolistaprecio?: boolean | listaprecio$tipolistaprecioArgs<ExtArgs>
  }
  export type listaprecioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | listaprecio$productoArgs<ExtArgs>
    sucursal?: boolean | listaprecio$sucursalArgs<ExtArgs>
    tipolistaprecio?: boolean | listaprecio$tipolistaprecioArgs<ExtArgs>
  }

  export type $listaprecioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "listaprecio"
    objects: {
      producto: Prisma.$productoPayload<ExtArgs> | null
      sucursal: Prisma.$sucursalPayload<ExtArgs> | null
      tipolistaprecio: Prisma.$tipolistaprecioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      producto_id: number | null
      sucursal_id: number | null
      tipo_lista_id: number | null
      precio: Prisma.Decimal
    }, ExtArgs["result"]["listaprecio"]>
    composites: {}
  }

  type listaprecioGetPayload<S extends boolean | null | undefined | listaprecioDefaultArgs> = $Result.GetResult<Prisma.$listaprecioPayload, S>

  type listaprecioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<listaprecioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListaprecioCountAggregateInputType | true
    }

  export interface listaprecioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['listaprecio'], meta: { name: 'listaprecio' } }
    /**
     * Find zero or one Listaprecio that matches the filter.
     * @param {listaprecioFindUniqueArgs} args - Arguments to find a Listaprecio
     * @example
     * // Get one Listaprecio
     * const listaprecio = await prisma.listaprecio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends listaprecioFindUniqueArgs>(args: SelectSubset<T, listaprecioFindUniqueArgs<ExtArgs>>): Prisma__listaprecioClient<$Result.GetResult<Prisma.$listaprecioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Listaprecio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {listaprecioFindUniqueOrThrowArgs} args - Arguments to find a Listaprecio
     * @example
     * // Get one Listaprecio
     * const listaprecio = await prisma.listaprecio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends listaprecioFindUniqueOrThrowArgs>(args: SelectSubset<T, listaprecioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__listaprecioClient<$Result.GetResult<Prisma.$listaprecioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Listaprecio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {listaprecioFindFirstArgs} args - Arguments to find a Listaprecio
     * @example
     * // Get one Listaprecio
     * const listaprecio = await prisma.listaprecio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends listaprecioFindFirstArgs>(args?: SelectSubset<T, listaprecioFindFirstArgs<ExtArgs>>): Prisma__listaprecioClient<$Result.GetResult<Prisma.$listaprecioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Listaprecio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {listaprecioFindFirstOrThrowArgs} args - Arguments to find a Listaprecio
     * @example
     * // Get one Listaprecio
     * const listaprecio = await prisma.listaprecio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends listaprecioFindFirstOrThrowArgs>(args?: SelectSubset<T, listaprecioFindFirstOrThrowArgs<ExtArgs>>): Prisma__listaprecioClient<$Result.GetResult<Prisma.$listaprecioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Listaprecios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {listaprecioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Listaprecios
     * const listaprecios = await prisma.listaprecio.findMany()
     * 
     * // Get first 10 Listaprecios
     * const listaprecios = await prisma.listaprecio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const listaprecioWithIdOnly = await prisma.listaprecio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends listaprecioFindManyArgs>(args?: SelectSubset<T, listaprecioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$listaprecioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Listaprecio.
     * @param {listaprecioCreateArgs} args - Arguments to create a Listaprecio.
     * @example
     * // Create one Listaprecio
     * const Listaprecio = await prisma.listaprecio.create({
     *   data: {
     *     // ... data to create a Listaprecio
     *   }
     * })
     * 
     */
    create<T extends listaprecioCreateArgs>(args: SelectSubset<T, listaprecioCreateArgs<ExtArgs>>): Prisma__listaprecioClient<$Result.GetResult<Prisma.$listaprecioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Listaprecios.
     * @param {listaprecioCreateManyArgs} args - Arguments to create many Listaprecios.
     * @example
     * // Create many Listaprecios
     * const listaprecio = await prisma.listaprecio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends listaprecioCreateManyArgs>(args?: SelectSubset<T, listaprecioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Listaprecios and returns the data saved in the database.
     * @param {listaprecioCreateManyAndReturnArgs} args - Arguments to create many Listaprecios.
     * @example
     * // Create many Listaprecios
     * const listaprecio = await prisma.listaprecio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Listaprecios and only return the `id`
     * const listaprecioWithIdOnly = await prisma.listaprecio.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends listaprecioCreateManyAndReturnArgs>(args?: SelectSubset<T, listaprecioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$listaprecioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Listaprecio.
     * @param {listaprecioDeleteArgs} args - Arguments to delete one Listaprecio.
     * @example
     * // Delete one Listaprecio
     * const Listaprecio = await prisma.listaprecio.delete({
     *   where: {
     *     // ... filter to delete one Listaprecio
     *   }
     * })
     * 
     */
    delete<T extends listaprecioDeleteArgs>(args: SelectSubset<T, listaprecioDeleteArgs<ExtArgs>>): Prisma__listaprecioClient<$Result.GetResult<Prisma.$listaprecioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Listaprecio.
     * @param {listaprecioUpdateArgs} args - Arguments to update one Listaprecio.
     * @example
     * // Update one Listaprecio
     * const listaprecio = await prisma.listaprecio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends listaprecioUpdateArgs>(args: SelectSubset<T, listaprecioUpdateArgs<ExtArgs>>): Prisma__listaprecioClient<$Result.GetResult<Prisma.$listaprecioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Listaprecios.
     * @param {listaprecioDeleteManyArgs} args - Arguments to filter Listaprecios to delete.
     * @example
     * // Delete a few Listaprecios
     * const { count } = await prisma.listaprecio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends listaprecioDeleteManyArgs>(args?: SelectSubset<T, listaprecioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Listaprecios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {listaprecioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Listaprecios
     * const listaprecio = await prisma.listaprecio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends listaprecioUpdateManyArgs>(args: SelectSubset<T, listaprecioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Listaprecios and returns the data updated in the database.
     * @param {listaprecioUpdateManyAndReturnArgs} args - Arguments to update many Listaprecios.
     * @example
     * // Update many Listaprecios
     * const listaprecio = await prisma.listaprecio.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Listaprecios and only return the `id`
     * const listaprecioWithIdOnly = await prisma.listaprecio.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends listaprecioUpdateManyAndReturnArgs>(args: SelectSubset<T, listaprecioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$listaprecioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Listaprecio.
     * @param {listaprecioUpsertArgs} args - Arguments to update or create a Listaprecio.
     * @example
     * // Update or create a Listaprecio
     * const listaprecio = await prisma.listaprecio.upsert({
     *   create: {
     *     // ... data to create a Listaprecio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Listaprecio we want to update
     *   }
     * })
     */
    upsert<T extends listaprecioUpsertArgs>(args: SelectSubset<T, listaprecioUpsertArgs<ExtArgs>>): Prisma__listaprecioClient<$Result.GetResult<Prisma.$listaprecioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Listaprecios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {listaprecioCountArgs} args - Arguments to filter Listaprecios to count.
     * @example
     * // Count the number of Listaprecios
     * const count = await prisma.listaprecio.count({
     *   where: {
     *     // ... the filter for the Listaprecios we want to count
     *   }
     * })
    **/
    count<T extends listaprecioCountArgs>(
      args?: Subset<T, listaprecioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListaprecioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Listaprecio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListaprecioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListaprecioAggregateArgs>(args: Subset<T, ListaprecioAggregateArgs>): Prisma.PrismaPromise<GetListaprecioAggregateType<T>>

    /**
     * Group by Listaprecio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {listaprecioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends listaprecioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: listaprecioGroupByArgs['orderBy'] }
        : { orderBy?: listaprecioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, listaprecioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListaprecioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the listaprecio model
   */
  readonly fields: listaprecioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for listaprecio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__listaprecioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends listaprecio$productoArgs<ExtArgs> = {}>(args?: Subset<T, listaprecio$productoArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sucursal<T extends listaprecio$sucursalArgs<ExtArgs> = {}>(args?: Subset<T, listaprecio$sucursalArgs<ExtArgs>>): Prisma__sucursalClient<$Result.GetResult<Prisma.$sucursalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tipolistaprecio<T extends listaprecio$tipolistaprecioArgs<ExtArgs> = {}>(args?: Subset<T, listaprecio$tipolistaprecioArgs<ExtArgs>>): Prisma__tipolistaprecioClient<$Result.GetResult<Prisma.$tipolistaprecioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the listaprecio model
   */
  interface listaprecioFieldRefs {
    readonly id: FieldRef<"listaprecio", 'Int'>
    readonly producto_id: FieldRef<"listaprecio", 'Int'>
    readonly sucursal_id: FieldRef<"listaprecio", 'Int'>
    readonly tipo_lista_id: FieldRef<"listaprecio", 'Int'>
    readonly precio: FieldRef<"listaprecio", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * listaprecio findUnique
   */
  export type listaprecioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioInclude<ExtArgs> | null
    /**
     * Filter, which listaprecio to fetch.
     */
    where: listaprecioWhereUniqueInput
  }

  /**
   * listaprecio findUniqueOrThrow
   */
  export type listaprecioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioInclude<ExtArgs> | null
    /**
     * Filter, which listaprecio to fetch.
     */
    where: listaprecioWhereUniqueInput
  }

  /**
   * listaprecio findFirst
   */
  export type listaprecioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioInclude<ExtArgs> | null
    /**
     * Filter, which listaprecio to fetch.
     */
    where?: listaprecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of listaprecios to fetch.
     */
    orderBy?: listaprecioOrderByWithRelationInput | listaprecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for listaprecios.
     */
    cursor?: listaprecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` listaprecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` listaprecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of listaprecios.
     */
    distinct?: ListaprecioScalarFieldEnum | ListaprecioScalarFieldEnum[]
  }

  /**
   * listaprecio findFirstOrThrow
   */
  export type listaprecioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioInclude<ExtArgs> | null
    /**
     * Filter, which listaprecio to fetch.
     */
    where?: listaprecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of listaprecios to fetch.
     */
    orderBy?: listaprecioOrderByWithRelationInput | listaprecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for listaprecios.
     */
    cursor?: listaprecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` listaprecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` listaprecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of listaprecios.
     */
    distinct?: ListaprecioScalarFieldEnum | ListaprecioScalarFieldEnum[]
  }

  /**
   * listaprecio findMany
   */
  export type listaprecioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioInclude<ExtArgs> | null
    /**
     * Filter, which listaprecios to fetch.
     */
    where?: listaprecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of listaprecios to fetch.
     */
    orderBy?: listaprecioOrderByWithRelationInput | listaprecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing listaprecios.
     */
    cursor?: listaprecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` listaprecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` listaprecios.
     */
    skip?: number
    distinct?: ListaprecioScalarFieldEnum | ListaprecioScalarFieldEnum[]
  }

  /**
   * listaprecio create
   */
  export type listaprecioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioInclude<ExtArgs> | null
    /**
     * The data needed to create a listaprecio.
     */
    data: XOR<listaprecioCreateInput, listaprecioUncheckedCreateInput>
  }

  /**
   * listaprecio createMany
   */
  export type listaprecioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many listaprecios.
     */
    data: listaprecioCreateManyInput | listaprecioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * listaprecio createManyAndReturn
   */
  export type listaprecioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * The data used to create many listaprecios.
     */
    data: listaprecioCreateManyInput | listaprecioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * listaprecio update
   */
  export type listaprecioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioInclude<ExtArgs> | null
    /**
     * The data needed to update a listaprecio.
     */
    data: XOR<listaprecioUpdateInput, listaprecioUncheckedUpdateInput>
    /**
     * Choose, which listaprecio to update.
     */
    where: listaprecioWhereUniqueInput
  }

  /**
   * listaprecio updateMany
   */
  export type listaprecioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update listaprecios.
     */
    data: XOR<listaprecioUpdateManyMutationInput, listaprecioUncheckedUpdateManyInput>
    /**
     * Filter which listaprecios to update
     */
    where?: listaprecioWhereInput
    /**
     * Limit how many listaprecios to update.
     */
    limit?: number
  }

  /**
   * listaprecio updateManyAndReturn
   */
  export type listaprecioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * The data used to update listaprecios.
     */
    data: XOR<listaprecioUpdateManyMutationInput, listaprecioUncheckedUpdateManyInput>
    /**
     * Filter which listaprecios to update
     */
    where?: listaprecioWhereInput
    /**
     * Limit how many listaprecios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * listaprecio upsert
   */
  export type listaprecioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioInclude<ExtArgs> | null
    /**
     * The filter to search for the listaprecio to update in case it exists.
     */
    where: listaprecioWhereUniqueInput
    /**
     * In case the listaprecio found by the `where` argument doesn't exist, create a new listaprecio with this data.
     */
    create: XOR<listaprecioCreateInput, listaprecioUncheckedCreateInput>
    /**
     * In case the listaprecio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<listaprecioUpdateInput, listaprecioUncheckedUpdateInput>
  }

  /**
   * listaprecio delete
   */
  export type listaprecioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioInclude<ExtArgs> | null
    /**
     * Filter which listaprecio to delete.
     */
    where: listaprecioWhereUniqueInput
  }

  /**
   * listaprecio deleteMany
   */
  export type listaprecioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which listaprecios to delete
     */
    where?: listaprecioWhereInput
    /**
     * Limit how many listaprecios to delete.
     */
    limit?: number
  }

  /**
   * listaprecio.producto
   */
  export type listaprecio$productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    where?: productoWhereInput
  }

  /**
   * listaprecio.sucursal
   */
  export type listaprecio$sucursalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sucursal
     */
    select?: sucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sucursal
     */
    omit?: sucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sucursalInclude<ExtArgs> | null
    where?: sucursalWhereInput
  }

  /**
   * listaprecio.tipolistaprecio
   */
  export type listaprecio$tipolistaprecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipolistaprecio
     */
    select?: tipolistaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipolistaprecio
     */
    omit?: tipolistaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipolistaprecioInclude<ExtArgs> | null
    where?: tipolistaprecioWhereInput
  }

  /**
   * listaprecio without action
   */
  export type listaprecioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioInclude<ExtArgs> | null
  }


  /**
   * Model lote
   */

  export type AggregateLote = {
    _count: LoteCountAggregateOutputType | null
    _avg: LoteAvgAggregateOutputType | null
    _sum: LoteSumAggregateOutputType | null
    _min: LoteMinAggregateOutputType | null
    _max: LoteMaxAggregateOutputType | null
  }

  export type LoteAvgAggregateOutputType = {
    id: number | null
    codigo_barra_id: number | null
    cantidad: number | null
  }

  export type LoteSumAggregateOutputType = {
    id: number | null
    codigo_barra_id: number | null
    cantidad: number | null
  }

  export type LoteMinAggregateOutputType = {
    id: number | null
    codigo_barra_id: number | null
    fecha_vencimiento: Date | null
    cantidad: number | null
    ubicacion: string | null
  }

  export type LoteMaxAggregateOutputType = {
    id: number | null
    codigo_barra_id: number | null
    fecha_vencimiento: Date | null
    cantidad: number | null
    ubicacion: string | null
  }

  export type LoteCountAggregateOutputType = {
    id: number
    codigo_barra_id: number
    fecha_vencimiento: number
    cantidad: number
    ubicacion: number
    _all: number
  }


  export type LoteAvgAggregateInputType = {
    id?: true
    codigo_barra_id?: true
    cantidad?: true
  }

  export type LoteSumAggregateInputType = {
    id?: true
    codigo_barra_id?: true
    cantidad?: true
  }

  export type LoteMinAggregateInputType = {
    id?: true
    codigo_barra_id?: true
    fecha_vencimiento?: true
    cantidad?: true
    ubicacion?: true
  }

  export type LoteMaxAggregateInputType = {
    id?: true
    codigo_barra_id?: true
    fecha_vencimiento?: true
    cantidad?: true
    ubicacion?: true
  }

  export type LoteCountAggregateInputType = {
    id?: true
    codigo_barra_id?: true
    fecha_vencimiento?: true
    cantidad?: true
    ubicacion?: true
    _all?: true
  }

  export type LoteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which lote to aggregate.
     */
    where?: loteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lotes to fetch.
     */
    orderBy?: loteOrderByWithRelationInput | loteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: loteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned lotes
    **/
    _count?: true | LoteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LoteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LoteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LoteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LoteMaxAggregateInputType
  }

  export type GetLoteAggregateType<T extends LoteAggregateArgs> = {
        [P in keyof T & keyof AggregateLote]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLote[P]>
      : GetScalarType<T[P], AggregateLote[P]>
  }




  export type loteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: loteWhereInput
    orderBy?: loteOrderByWithAggregationInput | loteOrderByWithAggregationInput[]
    by: LoteScalarFieldEnum[] | LoteScalarFieldEnum
    having?: loteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LoteCountAggregateInputType | true
    _avg?: LoteAvgAggregateInputType
    _sum?: LoteSumAggregateInputType
    _min?: LoteMinAggregateInputType
    _max?: LoteMaxAggregateInputType
  }

  export type LoteGroupByOutputType = {
    id: number
    codigo_barra_id: number | null
    fecha_vencimiento: Date | null
    cantidad: number
    ubicacion: string | null
    _count: LoteCountAggregateOutputType | null
    _avg: LoteAvgAggregateOutputType | null
    _sum: LoteSumAggregateOutputType | null
    _min: LoteMinAggregateOutputType | null
    _max: LoteMaxAggregateOutputType | null
  }

  type GetLoteGroupByPayload<T extends loteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LoteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LoteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LoteGroupByOutputType[P]>
            : GetScalarType<T[P], LoteGroupByOutputType[P]>
        }
      >
    >


  export type loteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo_barra_id?: boolean
    fecha_vencimiento?: boolean
    cantidad?: boolean
    ubicacion?: boolean
    detallecompra?: boolean | lote$detallecompraArgs<ExtArgs>
    codigobarra?: boolean | lote$codigobarraArgs<ExtArgs>
    productoterminado?: boolean | lote$productoterminadoArgs<ExtArgs>
    _count?: boolean | LoteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lote"]>

  export type loteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo_barra_id?: boolean
    fecha_vencimiento?: boolean
    cantidad?: boolean
    ubicacion?: boolean
    codigobarra?: boolean | lote$codigobarraArgs<ExtArgs>
  }, ExtArgs["result"]["lote"]>

  export type loteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    codigo_barra_id?: boolean
    fecha_vencimiento?: boolean
    cantidad?: boolean
    ubicacion?: boolean
    codigobarra?: boolean | lote$codigobarraArgs<ExtArgs>
  }, ExtArgs["result"]["lote"]>

  export type loteSelectScalar = {
    id?: boolean
    codigo_barra_id?: boolean
    fecha_vencimiento?: boolean
    cantidad?: boolean
    ubicacion?: boolean
  }

  export type loteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "codigo_barra_id" | "fecha_vencimiento" | "cantidad" | "ubicacion", ExtArgs["result"]["lote"]>
  export type loteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detallecompra?: boolean | lote$detallecompraArgs<ExtArgs>
    codigobarra?: boolean | lote$codigobarraArgs<ExtArgs>
    productoterminado?: boolean | lote$productoterminadoArgs<ExtArgs>
    _count?: boolean | LoteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type loteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    codigobarra?: boolean | lote$codigobarraArgs<ExtArgs>
  }
  export type loteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    codigobarra?: boolean | lote$codigobarraArgs<ExtArgs>
  }

  export type $lotePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "lote"
    objects: {
      detallecompra: Prisma.$detallecompraPayload<ExtArgs>[]
      codigobarra: Prisma.$codigobarraPayload<ExtArgs> | null
      productoterminado: Prisma.$productoterminadoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      codigo_barra_id: number | null
      fecha_vencimiento: Date | null
      cantidad: number
      ubicacion: string | null
    }, ExtArgs["result"]["lote"]>
    composites: {}
  }

  type loteGetPayload<S extends boolean | null | undefined | loteDefaultArgs> = $Result.GetResult<Prisma.$lotePayload, S>

  type loteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<loteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LoteCountAggregateInputType | true
    }

  export interface loteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['lote'], meta: { name: 'lote' } }
    /**
     * Find zero or one Lote that matches the filter.
     * @param {loteFindUniqueArgs} args - Arguments to find a Lote
     * @example
     * // Get one Lote
     * const lote = await prisma.lote.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends loteFindUniqueArgs>(args: SelectSubset<T, loteFindUniqueArgs<ExtArgs>>): Prisma__loteClient<$Result.GetResult<Prisma.$lotePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Lote that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {loteFindUniqueOrThrowArgs} args - Arguments to find a Lote
     * @example
     * // Get one Lote
     * const lote = await prisma.lote.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends loteFindUniqueOrThrowArgs>(args: SelectSubset<T, loteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__loteClient<$Result.GetResult<Prisma.$lotePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Lote that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loteFindFirstArgs} args - Arguments to find a Lote
     * @example
     * // Get one Lote
     * const lote = await prisma.lote.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends loteFindFirstArgs>(args?: SelectSubset<T, loteFindFirstArgs<ExtArgs>>): Prisma__loteClient<$Result.GetResult<Prisma.$lotePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Lote that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loteFindFirstOrThrowArgs} args - Arguments to find a Lote
     * @example
     * // Get one Lote
     * const lote = await prisma.lote.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends loteFindFirstOrThrowArgs>(args?: SelectSubset<T, loteFindFirstOrThrowArgs<ExtArgs>>): Prisma__loteClient<$Result.GetResult<Prisma.$lotePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Lotes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Lotes
     * const lotes = await prisma.lote.findMany()
     * 
     * // Get first 10 Lotes
     * const lotes = await prisma.lote.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const loteWithIdOnly = await prisma.lote.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends loteFindManyArgs>(args?: SelectSubset<T, loteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Lote.
     * @param {loteCreateArgs} args - Arguments to create a Lote.
     * @example
     * // Create one Lote
     * const Lote = await prisma.lote.create({
     *   data: {
     *     // ... data to create a Lote
     *   }
     * })
     * 
     */
    create<T extends loteCreateArgs>(args: SelectSubset<T, loteCreateArgs<ExtArgs>>): Prisma__loteClient<$Result.GetResult<Prisma.$lotePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Lotes.
     * @param {loteCreateManyArgs} args - Arguments to create many Lotes.
     * @example
     * // Create many Lotes
     * const lote = await prisma.lote.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends loteCreateManyArgs>(args?: SelectSubset<T, loteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Lotes and returns the data saved in the database.
     * @param {loteCreateManyAndReturnArgs} args - Arguments to create many Lotes.
     * @example
     * // Create many Lotes
     * const lote = await prisma.lote.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Lotes and only return the `id`
     * const loteWithIdOnly = await prisma.lote.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends loteCreateManyAndReturnArgs>(args?: SelectSubset<T, loteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lotePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Lote.
     * @param {loteDeleteArgs} args - Arguments to delete one Lote.
     * @example
     * // Delete one Lote
     * const Lote = await prisma.lote.delete({
     *   where: {
     *     // ... filter to delete one Lote
     *   }
     * })
     * 
     */
    delete<T extends loteDeleteArgs>(args: SelectSubset<T, loteDeleteArgs<ExtArgs>>): Prisma__loteClient<$Result.GetResult<Prisma.$lotePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Lote.
     * @param {loteUpdateArgs} args - Arguments to update one Lote.
     * @example
     * // Update one Lote
     * const lote = await prisma.lote.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends loteUpdateArgs>(args: SelectSubset<T, loteUpdateArgs<ExtArgs>>): Prisma__loteClient<$Result.GetResult<Prisma.$lotePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Lotes.
     * @param {loteDeleteManyArgs} args - Arguments to filter Lotes to delete.
     * @example
     * // Delete a few Lotes
     * const { count } = await prisma.lote.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends loteDeleteManyArgs>(args?: SelectSubset<T, loteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Lotes
     * const lote = await prisma.lote.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends loteUpdateManyArgs>(args: SelectSubset<T, loteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lotes and returns the data updated in the database.
     * @param {loteUpdateManyAndReturnArgs} args - Arguments to update many Lotes.
     * @example
     * // Update many Lotes
     * const lote = await prisma.lote.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Lotes and only return the `id`
     * const loteWithIdOnly = await prisma.lote.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends loteUpdateManyAndReturnArgs>(args: SelectSubset<T, loteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lotePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Lote.
     * @param {loteUpsertArgs} args - Arguments to update or create a Lote.
     * @example
     * // Update or create a Lote
     * const lote = await prisma.lote.upsert({
     *   create: {
     *     // ... data to create a Lote
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Lote we want to update
     *   }
     * })
     */
    upsert<T extends loteUpsertArgs>(args: SelectSubset<T, loteUpsertArgs<ExtArgs>>): Prisma__loteClient<$Result.GetResult<Prisma.$lotePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Lotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loteCountArgs} args - Arguments to filter Lotes to count.
     * @example
     * // Count the number of Lotes
     * const count = await prisma.lote.count({
     *   where: {
     *     // ... the filter for the Lotes we want to count
     *   }
     * })
    **/
    count<T extends loteCountArgs>(
      args?: Subset<T, loteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LoteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Lote.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LoteAggregateArgs>(args: Subset<T, LoteAggregateArgs>): Prisma.PrismaPromise<GetLoteAggregateType<T>>

    /**
     * Group by Lote.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {loteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends loteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: loteGroupByArgs['orderBy'] }
        : { orderBy?: loteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, loteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLoteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the lote model
   */
  readonly fields: loteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for lote.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__loteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detallecompra<T extends lote$detallecompraArgs<ExtArgs> = {}>(args?: Subset<T, lote$detallecompraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detallecompraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    codigobarra<T extends lote$codigobarraArgs<ExtArgs> = {}>(args?: Subset<T, lote$codigobarraArgs<ExtArgs>>): Prisma__codigobarraClient<$Result.GetResult<Prisma.$codigobarraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    productoterminado<T extends lote$productoterminadoArgs<ExtArgs> = {}>(args?: Subset<T, lote$productoterminadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productoterminadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the lote model
   */
  interface loteFieldRefs {
    readonly id: FieldRef<"lote", 'Int'>
    readonly codigo_barra_id: FieldRef<"lote", 'Int'>
    readonly fecha_vencimiento: FieldRef<"lote", 'DateTime'>
    readonly cantidad: FieldRef<"lote", 'Int'>
    readonly ubicacion: FieldRef<"lote", 'String'>
  }
    

  // Custom InputTypes
  /**
   * lote findUnique
   */
  export type loteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteInclude<ExtArgs> | null
    /**
     * Filter, which lote to fetch.
     */
    where: loteWhereUniqueInput
  }

  /**
   * lote findUniqueOrThrow
   */
  export type loteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteInclude<ExtArgs> | null
    /**
     * Filter, which lote to fetch.
     */
    where: loteWhereUniqueInput
  }

  /**
   * lote findFirst
   */
  export type loteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteInclude<ExtArgs> | null
    /**
     * Filter, which lote to fetch.
     */
    where?: loteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lotes to fetch.
     */
    orderBy?: loteOrderByWithRelationInput | loteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for lotes.
     */
    cursor?: loteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of lotes.
     */
    distinct?: LoteScalarFieldEnum | LoteScalarFieldEnum[]
  }

  /**
   * lote findFirstOrThrow
   */
  export type loteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteInclude<ExtArgs> | null
    /**
     * Filter, which lote to fetch.
     */
    where?: loteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lotes to fetch.
     */
    orderBy?: loteOrderByWithRelationInput | loteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for lotes.
     */
    cursor?: loteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of lotes.
     */
    distinct?: LoteScalarFieldEnum | LoteScalarFieldEnum[]
  }

  /**
   * lote findMany
   */
  export type loteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteInclude<ExtArgs> | null
    /**
     * Filter, which lotes to fetch.
     */
    where?: loteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lotes to fetch.
     */
    orderBy?: loteOrderByWithRelationInput | loteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing lotes.
     */
    cursor?: loteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lotes.
     */
    skip?: number
    distinct?: LoteScalarFieldEnum | LoteScalarFieldEnum[]
  }

  /**
   * lote create
   */
  export type loteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteInclude<ExtArgs> | null
    /**
     * The data needed to create a lote.
     */
    data: XOR<loteCreateInput, loteUncheckedCreateInput>
  }

  /**
   * lote createMany
   */
  export type loteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many lotes.
     */
    data: loteCreateManyInput | loteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * lote createManyAndReturn
   */
  export type loteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * The data used to create many lotes.
     */
    data: loteCreateManyInput | loteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * lote update
   */
  export type loteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteInclude<ExtArgs> | null
    /**
     * The data needed to update a lote.
     */
    data: XOR<loteUpdateInput, loteUncheckedUpdateInput>
    /**
     * Choose, which lote to update.
     */
    where: loteWhereUniqueInput
  }

  /**
   * lote updateMany
   */
  export type loteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update lotes.
     */
    data: XOR<loteUpdateManyMutationInput, loteUncheckedUpdateManyInput>
    /**
     * Filter which lotes to update
     */
    where?: loteWhereInput
    /**
     * Limit how many lotes to update.
     */
    limit?: number
  }

  /**
   * lote updateManyAndReturn
   */
  export type loteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * The data used to update lotes.
     */
    data: XOR<loteUpdateManyMutationInput, loteUncheckedUpdateManyInput>
    /**
     * Filter which lotes to update
     */
    where?: loteWhereInput
    /**
     * Limit how many lotes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * lote upsert
   */
  export type loteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteInclude<ExtArgs> | null
    /**
     * The filter to search for the lote to update in case it exists.
     */
    where: loteWhereUniqueInput
    /**
     * In case the lote found by the `where` argument doesn't exist, create a new lote with this data.
     */
    create: XOR<loteCreateInput, loteUncheckedCreateInput>
    /**
     * In case the lote was found with the provided `where` argument, update it with this data.
     */
    update: XOR<loteUpdateInput, loteUncheckedUpdateInput>
  }

  /**
   * lote delete
   */
  export type loteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteInclude<ExtArgs> | null
    /**
     * Filter which lote to delete.
     */
    where: loteWhereUniqueInput
  }

  /**
   * lote deleteMany
   */
  export type loteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which lotes to delete
     */
    where?: loteWhereInput
    /**
     * Limit how many lotes to delete.
     */
    limit?: number
  }

  /**
   * lote.detallecompra
   */
  export type lote$detallecompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detallecompra
     */
    select?: detallecompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detallecompra
     */
    omit?: detallecompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detallecompraInclude<ExtArgs> | null
    where?: detallecompraWhereInput
    orderBy?: detallecompraOrderByWithRelationInput | detallecompraOrderByWithRelationInput[]
    cursor?: detallecompraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetallecompraScalarFieldEnum | DetallecompraScalarFieldEnum[]
  }

  /**
   * lote.codigobarra
   */
  export type lote$codigobarraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraInclude<ExtArgs> | null
    where?: codigobarraWhereInput
  }

  /**
   * lote.productoterminado
   */
  export type lote$productoterminadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoterminado
     */
    select?: productoterminadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoterminado
     */
    omit?: productoterminadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoterminadoInclude<ExtArgs> | null
    where?: productoterminadoWhereInput
    orderBy?: productoterminadoOrderByWithRelationInput | productoterminadoOrderByWithRelationInput[]
    cursor?: productoterminadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoterminadoScalarFieldEnum | ProductoterminadoScalarFieldEnum[]
  }

  /**
   * lote without action
   */
  export type loteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteInclude<ExtArgs> | null
  }


  /**
   * Model ordencompra
   */

  export type AggregateOrdencompra = {
    _count: OrdencompraCountAggregateOutputType | null
    _avg: OrdencompraAvgAggregateOutputType | null
    _sum: OrdencompraSumAggregateOutputType | null
    _min: OrdencompraMinAggregateOutputType | null
    _max: OrdencompraMaxAggregateOutputType | null
  }

  export type OrdencompraAvgAggregateOutputType = {
    id: number | null
    proveedor_id: number | null
    estado_id: number | null
  }

  export type OrdencompraSumAggregateOutputType = {
    id: number | null
    proveedor_id: number | null
    estado_id: number | null
  }

  export type OrdencompraMinAggregateOutputType = {
    id: number | null
    proveedor_id: number | null
    fecha: Date | null
    estado_id: number | null
    observaciones: string | null
  }

  export type OrdencompraMaxAggregateOutputType = {
    id: number | null
    proveedor_id: number | null
    fecha: Date | null
    estado_id: number | null
    observaciones: string | null
  }

  export type OrdencompraCountAggregateOutputType = {
    id: number
    proveedor_id: number
    fecha: number
    estado_id: number
    observaciones: number
    _all: number
  }


  export type OrdencompraAvgAggregateInputType = {
    id?: true
    proveedor_id?: true
    estado_id?: true
  }

  export type OrdencompraSumAggregateInputType = {
    id?: true
    proveedor_id?: true
    estado_id?: true
  }

  export type OrdencompraMinAggregateInputType = {
    id?: true
    proveedor_id?: true
    fecha?: true
    estado_id?: true
    observaciones?: true
  }

  export type OrdencompraMaxAggregateInputType = {
    id?: true
    proveedor_id?: true
    fecha?: true
    estado_id?: true
    observaciones?: true
  }

  export type OrdencompraCountAggregateInputType = {
    id?: true
    proveedor_id?: true
    fecha?: true
    estado_id?: true
    observaciones?: true
    _all?: true
  }

  export type OrdencompraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ordencompra to aggregate.
     */
    where?: ordencompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ordencompras to fetch.
     */
    orderBy?: ordencompraOrderByWithRelationInput | ordencompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ordencompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ordencompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ordencompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ordencompras
    **/
    _count?: true | OrdencompraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrdencompraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrdencompraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrdencompraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrdencompraMaxAggregateInputType
  }

  export type GetOrdencompraAggregateType<T extends OrdencompraAggregateArgs> = {
        [P in keyof T & keyof AggregateOrdencompra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrdencompra[P]>
      : GetScalarType<T[P], AggregateOrdencompra[P]>
  }




  export type ordencompraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordencompraWhereInput
    orderBy?: ordencompraOrderByWithAggregationInput | ordencompraOrderByWithAggregationInput[]
    by: OrdencompraScalarFieldEnum[] | OrdencompraScalarFieldEnum
    having?: ordencompraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrdencompraCountAggregateInputType | true
    _avg?: OrdencompraAvgAggregateInputType
    _sum?: OrdencompraSumAggregateInputType
    _min?: OrdencompraMinAggregateInputType
    _max?: OrdencompraMaxAggregateInputType
  }

  export type OrdencompraGroupByOutputType = {
    id: number
    proveedor_id: number | null
    fecha: Date
    estado_id: number | null
    observaciones: string | null
    _count: OrdencompraCountAggregateOutputType | null
    _avg: OrdencompraAvgAggregateOutputType | null
    _sum: OrdencompraSumAggregateOutputType | null
    _min: OrdencompraMinAggregateOutputType | null
    _max: OrdencompraMaxAggregateOutputType | null
  }

  type GetOrdencompraGroupByPayload<T extends ordencompraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrdencompraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrdencompraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrdencompraGroupByOutputType[P]>
            : GetScalarType<T[P], OrdencompraGroupByOutputType[P]>
        }
      >
    >


  export type ordencompraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    proveedor_id?: boolean
    fecha?: boolean
    estado_id?: boolean
    observaciones?: boolean
    detalleordencompra?: boolean | ordencompra$detalleordencompraArgs<ExtArgs>
    estadoordencompra?: boolean | ordencompra$estadoordencompraArgs<ExtArgs>
    proveedor?: boolean | ordencompra$proveedorArgs<ExtArgs>
    ordencompracompra?: boolean | ordencompra$ordencompracompraArgs<ExtArgs>
    _count?: boolean | OrdencompraCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ordencompra"]>

  export type ordencompraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    proveedor_id?: boolean
    fecha?: boolean
    estado_id?: boolean
    observaciones?: boolean
    estadoordencompra?: boolean | ordencompra$estadoordencompraArgs<ExtArgs>
    proveedor?: boolean | ordencompra$proveedorArgs<ExtArgs>
  }, ExtArgs["result"]["ordencompra"]>

  export type ordencompraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    proveedor_id?: boolean
    fecha?: boolean
    estado_id?: boolean
    observaciones?: boolean
    estadoordencompra?: boolean | ordencompra$estadoordencompraArgs<ExtArgs>
    proveedor?: boolean | ordencompra$proveedorArgs<ExtArgs>
  }, ExtArgs["result"]["ordencompra"]>

  export type ordencompraSelectScalar = {
    id?: boolean
    proveedor_id?: boolean
    fecha?: boolean
    estado_id?: boolean
    observaciones?: boolean
  }

  export type ordencompraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "proveedor_id" | "fecha" | "estado_id" | "observaciones", ExtArgs["result"]["ordencompra"]>
  export type ordencompraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalleordencompra?: boolean | ordencompra$detalleordencompraArgs<ExtArgs>
    estadoordencompra?: boolean | ordencompra$estadoordencompraArgs<ExtArgs>
    proveedor?: boolean | ordencompra$proveedorArgs<ExtArgs>
    ordencompracompra?: boolean | ordencompra$ordencompracompraArgs<ExtArgs>
    _count?: boolean | OrdencompraCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ordencompraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estadoordencompra?: boolean | ordencompra$estadoordencompraArgs<ExtArgs>
    proveedor?: boolean | ordencompra$proveedorArgs<ExtArgs>
  }
  export type ordencompraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estadoordencompra?: boolean | ordencompra$estadoordencompraArgs<ExtArgs>
    proveedor?: boolean | ordencompra$proveedorArgs<ExtArgs>
  }

  export type $ordencompraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ordencompra"
    objects: {
      detalleordencompra: Prisma.$detalleordencompraPayload<ExtArgs>[]
      estadoordencompra: Prisma.$estadoordencompraPayload<ExtArgs> | null
      proveedor: Prisma.$proveedorPayload<ExtArgs> | null
      ordencompracompra: Prisma.$ordencompracompraPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      proveedor_id: number | null
      fecha: Date
      estado_id: number | null
      observaciones: string | null
    }, ExtArgs["result"]["ordencompra"]>
    composites: {}
  }

  type ordencompraGetPayload<S extends boolean | null | undefined | ordencompraDefaultArgs> = $Result.GetResult<Prisma.$ordencompraPayload, S>

  type ordencompraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ordencompraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrdencompraCountAggregateInputType | true
    }

  export interface ordencompraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ordencompra'], meta: { name: 'ordencompra' } }
    /**
     * Find zero or one Ordencompra that matches the filter.
     * @param {ordencompraFindUniqueArgs} args - Arguments to find a Ordencompra
     * @example
     * // Get one Ordencompra
     * const ordencompra = await prisma.ordencompra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ordencompraFindUniqueArgs>(args: SelectSubset<T, ordencompraFindUniqueArgs<ExtArgs>>): Prisma__ordencompraClient<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ordencompra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ordencompraFindUniqueOrThrowArgs} args - Arguments to find a Ordencompra
     * @example
     * // Get one Ordencompra
     * const ordencompra = await prisma.ordencompra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ordencompraFindUniqueOrThrowArgs>(args: SelectSubset<T, ordencompraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ordencompraClient<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ordencompra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordencompraFindFirstArgs} args - Arguments to find a Ordencompra
     * @example
     * // Get one Ordencompra
     * const ordencompra = await prisma.ordencompra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ordencompraFindFirstArgs>(args?: SelectSubset<T, ordencompraFindFirstArgs<ExtArgs>>): Prisma__ordencompraClient<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ordencompra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordencompraFindFirstOrThrowArgs} args - Arguments to find a Ordencompra
     * @example
     * // Get one Ordencompra
     * const ordencompra = await prisma.ordencompra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ordencompraFindFirstOrThrowArgs>(args?: SelectSubset<T, ordencompraFindFirstOrThrowArgs<ExtArgs>>): Prisma__ordencompraClient<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ordencompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordencompraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ordencompras
     * const ordencompras = await prisma.ordencompra.findMany()
     * 
     * // Get first 10 Ordencompras
     * const ordencompras = await prisma.ordencompra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ordencompraWithIdOnly = await prisma.ordencompra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ordencompraFindManyArgs>(args?: SelectSubset<T, ordencompraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ordencompra.
     * @param {ordencompraCreateArgs} args - Arguments to create a Ordencompra.
     * @example
     * // Create one Ordencompra
     * const Ordencompra = await prisma.ordencompra.create({
     *   data: {
     *     // ... data to create a Ordencompra
     *   }
     * })
     * 
     */
    create<T extends ordencompraCreateArgs>(args: SelectSubset<T, ordencompraCreateArgs<ExtArgs>>): Prisma__ordencompraClient<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ordencompras.
     * @param {ordencompraCreateManyArgs} args - Arguments to create many Ordencompras.
     * @example
     * // Create many Ordencompras
     * const ordencompra = await prisma.ordencompra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ordencompraCreateManyArgs>(args?: SelectSubset<T, ordencompraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ordencompras and returns the data saved in the database.
     * @param {ordencompraCreateManyAndReturnArgs} args - Arguments to create many Ordencompras.
     * @example
     * // Create many Ordencompras
     * const ordencompra = await prisma.ordencompra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ordencompras and only return the `id`
     * const ordencompraWithIdOnly = await prisma.ordencompra.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ordencompraCreateManyAndReturnArgs>(args?: SelectSubset<T, ordencompraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ordencompra.
     * @param {ordencompraDeleteArgs} args - Arguments to delete one Ordencompra.
     * @example
     * // Delete one Ordencompra
     * const Ordencompra = await prisma.ordencompra.delete({
     *   where: {
     *     // ... filter to delete one Ordencompra
     *   }
     * })
     * 
     */
    delete<T extends ordencompraDeleteArgs>(args: SelectSubset<T, ordencompraDeleteArgs<ExtArgs>>): Prisma__ordencompraClient<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ordencompra.
     * @param {ordencompraUpdateArgs} args - Arguments to update one Ordencompra.
     * @example
     * // Update one Ordencompra
     * const ordencompra = await prisma.ordencompra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ordencompraUpdateArgs>(args: SelectSubset<T, ordencompraUpdateArgs<ExtArgs>>): Prisma__ordencompraClient<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ordencompras.
     * @param {ordencompraDeleteManyArgs} args - Arguments to filter Ordencompras to delete.
     * @example
     * // Delete a few Ordencompras
     * const { count } = await prisma.ordencompra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ordencompraDeleteManyArgs>(args?: SelectSubset<T, ordencompraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ordencompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordencompraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ordencompras
     * const ordencompra = await prisma.ordencompra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ordencompraUpdateManyArgs>(args: SelectSubset<T, ordencompraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ordencompras and returns the data updated in the database.
     * @param {ordencompraUpdateManyAndReturnArgs} args - Arguments to update many Ordencompras.
     * @example
     * // Update many Ordencompras
     * const ordencompra = await prisma.ordencompra.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ordencompras and only return the `id`
     * const ordencompraWithIdOnly = await prisma.ordencompra.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ordencompraUpdateManyAndReturnArgs>(args: SelectSubset<T, ordencompraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ordencompra.
     * @param {ordencompraUpsertArgs} args - Arguments to update or create a Ordencompra.
     * @example
     * // Update or create a Ordencompra
     * const ordencompra = await prisma.ordencompra.upsert({
     *   create: {
     *     // ... data to create a Ordencompra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ordencompra we want to update
     *   }
     * })
     */
    upsert<T extends ordencompraUpsertArgs>(args: SelectSubset<T, ordencompraUpsertArgs<ExtArgs>>): Prisma__ordencompraClient<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ordencompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordencompraCountArgs} args - Arguments to filter Ordencompras to count.
     * @example
     * // Count the number of Ordencompras
     * const count = await prisma.ordencompra.count({
     *   where: {
     *     // ... the filter for the Ordencompras we want to count
     *   }
     * })
    **/
    count<T extends ordencompraCountArgs>(
      args?: Subset<T, ordencompraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrdencompraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ordencompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdencompraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrdencompraAggregateArgs>(args: Subset<T, OrdencompraAggregateArgs>): Prisma.PrismaPromise<GetOrdencompraAggregateType<T>>

    /**
     * Group by Ordencompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordencompraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ordencompraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ordencompraGroupByArgs['orderBy'] }
        : { orderBy?: ordencompraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ordencompraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdencompraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ordencompra model
   */
  readonly fields: ordencompraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ordencompra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ordencompraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalleordencompra<T extends ordencompra$detalleordencompraArgs<ExtArgs> = {}>(args?: Subset<T, ordencompra$detalleordencompraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleordencompraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    estadoordencompra<T extends ordencompra$estadoordencompraArgs<ExtArgs> = {}>(args?: Subset<T, ordencompra$estadoordencompraArgs<ExtArgs>>): Prisma__estadoordencompraClient<$Result.GetResult<Prisma.$estadoordencompraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    proveedor<T extends ordencompra$proveedorArgs<ExtArgs> = {}>(args?: Subset<T, ordencompra$proveedorArgs<ExtArgs>>): Prisma__proveedorClient<$Result.GetResult<Prisma.$proveedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ordencompracompra<T extends ordencompra$ordencompracompraArgs<ExtArgs> = {}>(args?: Subset<T, ordencompra$ordencompracompraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordencompracompraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ordencompra model
   */
  interface ordencompraFieldRefs {
    readonly id: FieldRef<"ordencompra", 'Int'>
    readonly proveedor_id: FieldRef<"ordencompra", 'Int'>
    readonly fecha: FieldRef<"ordencompra", 'DateTime'>
    readonly estado_id: FieldRef<"ordencompra", 'Int'>
    readonly observaciones: FieldRef<"ordencompra", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ordencompra findUnique
   */
  export type ordencompraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraInclude<ExtArgs> | null
    /**
     * Filter, which ordencompra to fetch.
     */
    where: ordencompraWhereUniqueInput
  }

  /**
   * ordencompra findUniqueOrThrow
   */
  export type ordencompraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraInclude<ExtArgs> | null
    /**
     * Filter, which ordencompra to fetch.
     */
    where: ordencompraWhereUniqueInput
  }

  /**
   * ordencompra findFirst
   */
  export type ordencompraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraInclude<ExtArgs> | null
    /**
     * Filter, which ordencompra to fetch.
     */
    where?: ordencompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ordencompras to fetch.
     */
    orderBy?: ordencompraOrderByWithRelationInput | ordencompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ordencompras.
     */
    cursor?: ordencompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ordencompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ordencompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ordencompras.
     */
    distinct?: OrdencompraScalarFieldEnum | OrdencompraScalarFieldEnum[]
  }

  /**
   * ordencompra findFirstOrThrow
   */
  export type ordencompraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraInclude<ExtArgs> | null
    /**
     * Filter, which ordencompra to fetch.
     */
    where?: ordencompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ordencompras to fetch.
     */
    orderBy?: ordencompraOrderByWithRelationInput | ordencompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ordencompras.
     */
    cursor?: ordencompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ordencompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ordencompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ordencompras.
     */
    distinct?: OrdencompraScalarFieldEnum | OrdencompraScalarFieldEnum[]
  }

  /**
   * ordencompra findMany
   */
  export type ordencompraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraInclude<ExtArgs> | null
    /**
     * Filter, which ordencompras to fetch.
     */
    where?: ordencompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ordencompras to fetch.
     */
    orderBy?: ordencompraOrderByWithRelationInput | ordencompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ordencompras.
     */
    cursor?: ordencompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ordencompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ordencompras.
     */
    skip?: number
    distinct?: OrdencompraScalarFieldEnum | OrdencompraScalarFieldEnum[]
  }

  /**
   * ordencompra create
   */
  export type ordencompraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraInclude<ExtArgs> | null
    /**
     * The data needed to create a ordencompra.
     */
    data: XOR<ordencompraCreateInput, ordencompraUncheckedCreateInput>
  }

  /**
   * ordencompra createMany
   */
  export type ordencompraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ordencompras.
     */
    data: ordencompraCreateManyInput | ordencompraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ordencompra createManyAndReturn
   */
  export type ordencompraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * The data used to create many ordencompras.
     */
    data: ordencompraCreateManyInput | ordencompraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ordencompra update
   */
  export type ordencompraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraInclude<ExtArgs> | null
    /**
     * The data needed to update a ordencompra.
     */
    data: XOR<ordencompraUpdateInput, ordencompraUncheckedUpdateInput>
    /**
     * Choose, which ordencompra to update.
     */
    where: ordencompraWhereUniqueInput
  }

  /**
   * ordencompra updateMany
   */
  export type ordencompraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ordencompras.
     */
    data: XOR<ordencompraUpdateManyMutationInput, ordencompraUncheckedUpdateManyInput>
    /**
     * Filter which ordencompras to update
     */
    where?: ordencompraWhereInput
    /**
     * Limit how many ordencompras to update.
     */
    limit?: number
  }

  /**
   * ordencompra updateManyAndReturn
   */
  export type ordencompraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * The data used to update ordencompras.
     */
    data: XOR<ordencompraUpdateManyMutationInput, ordencompraUncheckedUpdateManyInput>
    /**
     * Filter which ordencompras to update
     */
    where?: ordencompraWhereInput
    /**
     * Limit how many ordencompras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ordencompra upsert
   */
  export type ordencompraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraInclude<ExtArgs> | null
    /**
     * The filter to search for the ordencompra to update in case it exists.
     */
    where: ordencompraWhereUniqueInput
    /**
     * In case the ordencompra found by the `where` argument doesn't exist, create a new ordencompra with this data.
     */
    create: XOR<ordencompraCreateInput, ordencompraUncheckedCreateInput>
    /**
     * In case the ordencompra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ordencompraUpdateInput, ordencompraUncheckedUpdateInput>
  }

  /**
   * ordencompra delete
   */
  export type ordencompraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraInclude<ExtArgs> | null
    /**
     * Filter which ordencompra to delete.
     */
    where: ordencompraWhereUniqueInput
  }

  /**
   * ordencompra deleteMany
   */
  export type ordencompraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ordencompras to delete
     */
    where?: ordencompraWhereInput
    /**
     * Limit how many ordencompras to delete.
     */
    limit?: number
  }

  /**
   * ordencompra.detalleordencompra
   */
  export type ordencompra$detalleordencompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleordencompra
     */
    select?: detalleordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleordencompra
     */
    omit?: detalleordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleordencompraInclude<ExtArgs> | null
    where?: detalleordencompraWhereInput
    orderBy?: detalleordencompraOrderByWithRelationInput | detalleordencompraOrderByWithRelationInput[]
    cursor?: detalleordencompraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleordencompraScalarFieldEnum | DetalleordencompraScalarFieldEnum[]
  }

  /**
   * ordencompra.estadoordencompra
   */
  export type ordencompra$estadoordencompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoordencompra
     */
    select?: estadoordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoordencompra
     */
    omit?: estadoordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoordencompraInclude<ExtArgs> | null
    where?: estadoordencompraWhereInput
  }

  /**
   * ordencompra.proveedor
   */
  export type ordencompra$proveedorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedor
     */
    select?: proveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedor
     */
    omit?: proveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedorInclude<ExtArgs> | null
    where?: proveedorWhereInput
  }

  /**
   * ordencompra.ordencompracompra
   */
  export type ordencompra$ordencompracompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompracompra
     */
    select?: ordencompracompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompracompra
     */
    omit?: ordencompracompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompracompraInclude<ExtArgs> | null
    where?: ordencompracompraWhereInput
    orderBy?: ordencompracompraOrderByWithRelationInput | ordencompracompraOrderByWithRelationInput[]
    cursor?: ordencompracompraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdencompracompraScalarFieldEnum | OrdencompracompraScalarFieldEnum[]
  }

  /**
   * ordencompra without action
   */
  export type ordencompraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraInclude<ExtArgs> | null
  }


  /**
   * Model ordencompracompra
   */

  export type AggregateOrdencompracompra = {
    _count: OrdencompracompraCountAggregateOutputType | null
    _avg: OrdencompracompraAvgAggregateOutputType | null
    _sum: OrdencompracompraSumAggregateOutputType | null
    _min: OrdencompracompraMinAggregateOutputType | null
    _max: OrdencompracompraMaxAggregateOutputType | null
  }

  export type OrdencompracompraAvgAggregateOutputType = {
    id: number | null
    orden_id: number | null
    compra_id: number | null
  }

  export type OrdencompracompraSumAggregateOutputType = {
    id: number | null
    orden_id: number | null
    compra_id: number | null
  }

  export type OrdencompracompraMinAggregateOutputType = {
    id: number | null
    orden_id: number | null
    compra_id: number | null
  }

  export type OrdencompracompraMaxAggregateOutputType = {
    id: number | null
    orden_id: number | null
    compra_id: number | null
  }

  export type OrdencompracompraCountAggregateOutputType = {
    id: number
    orden_id: number
    compra_id: number
    _all: number
  }


  export type OrdencompracompraAvgAggregateInputType = {
    id?: true
    orden_id?: true
    compra_id?: true
  }

  export type OrdencompracompraSumAggregateInputType = {
    id?: true
    orden_id?: true
    compra_id?: true
  }

  export type OrdencompracompraMinAggregateInputType = {
    id?: true
    orden_id?: true
    compra_id?: true
  }

  export type OrdencompracompraMaxAggregateInputType = {
    id?: true
    orden_id?: true
    compra_id?: true
  }

  export type OrdencompracompraCountAggregateInputType = {
    id?: true
    orden_id?: true
    compra_id?: true
    _all?: true
  }

  export type OrdencompracompraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ordencompracompra to aggregate.
     */
    where?: ordencompracompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ordencompracompras to fetch.
     */
    orderBy?: ordencompracompraOrderByWithRelationInput | ordencompracompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ordencompracompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ordencompracompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ordencompracompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ordencompracompras
    **/
    _count?: true | OrdencompracompraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrdencompracompraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrdencompracompraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrdencompracompraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrdencompracompraMaxAggregateInputType
  }

  export type GetOrdencompracompraAggregateType<T extends OrdencompracompraAggregateArgs> = {
        [P in keyof T & keyof AggregateOrdencompracompra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrdencompracompra[P]>
      : GetScalarType<T[P], AggregateOrdencompracompra[P]>
  }




  export type ordencompracompraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordencompracompraWhereInput
    orderBy?: ordencompracompraOrderByWithAggregationInput | ordencompracompraOrderByWithAggregationInput[]
    by: OrdencompracompraScalarFieldEnum[] | OrdencompracompraScalarFieldEnum
    having?: ordencompracompraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrdencompracompraCountAggregateInputType | true
    _avg?: OrdencompracompraAvgAggregateInputType
    _sum?: OrdencompracompraSumAggregateInputType
    _min?: OrdencompracompraMinAggregateInputType
    _max?: OrdencompracompraMaxAggregateInputType
  }

  export type OrdencompracompraGroupByOutputType = {
    id: number
    orden_id: number | null
    compra_id: number | null
    _count: OrdencompracompraCountAggregateOutputType | null
    _avg: OrdencompracompraAvgAggregateOutputType | null
    _sum: OrdencompracompraSumAggregateOutputType | null
    _min: OrdencompracompraMinAggregateOutputType | null
    _max: OrdencompracompraMaxAggregateOutputType | null
  }

  type GetOrdencompracompraGroupByPayload<T extends ordencompracompraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrdencompracompraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrdencompracompraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrdencompracompraGroupByOutputType[P]>
            : GetScalarType<T[P], OrdencompracompraGroupByOutputType[P]>
        }
      >
    >


  export type ordencompracompraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orden_id?: boolean
    compra_id?: boolean
    compra?: boolean | ordencompracompra$compraArgs<ExtArgs>
    ordencompra?: boolean | ordencompracompra$ordencompraArgs<ExtArgs>
  }, ExtArgs["result"]["ordencompracompra"]>

  export type ordencompracompraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orden_id?: boolean
    compra_id?: boolean
    compra?: boolean | ordencompracompra$compraArgs<ExtArgs>
    ordencompra?: boolean | ordencompracompra$ordencompraArgs<ExtArgs>
  }, ExtArgs["result"]["ordencompracompra"]>

  export type ordencompracompraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orden_id?: boolean
    compra_id?: boolean
    compra?: boolean | ordencompracompra$compraArgs<ExtArgs>
    ordencompra?: boolean | ordencompracompra$ordencompraArgs<ExtArgs>
  }, ExtArgs["result"]["ordencompracompra"]>

  export type ordencompracompraSelectScalar = {
    id?: boolean
    orden_id?: boolean
    compra_id?: boolean
  }

  export type ordencompracompraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orden_id" | "compra_id", ExtArgs["result"]["ordencompracompra"]>
  export type ordencompracompraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | ordencompracompra$compraArgs<ExtArgs>
    ordencompra?: boolean | ordencompracompra$ordencompraArgs<ExtArgs>
  }
  export type ordencompracompraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | ordencompracompra$compraArgs<ExtArgs>
    ordencompra?: boolean | ordencompracompra$ordencompraArgs<ExtArgs>
  }
  export type ordencompracompraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | ordencompracompra$compraArgs<ExtArgs>
    ordencompra?: boolean | ordencompracompra$ordencompraArgs<ExtArgs>
  }

  export type $ordencompracompraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ordencompracompra"
    objects: {
      compra: Prisma.$compraPayload<ExtArgs> | null
      ordencompra: Prisma.$ordencompraPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      orden_id: number | null
      compra_id: number | null
    }, ExtArgs["result"]["ordencompracompra"]>
    composites: {}
  }

  type ordencompracompraGetPayload<S extends boolean | null | undefined | ordencompracompraDefaultArgs> = $Result.GetResult<Prisma.$ordencompracompraPayload, S>

  type ordencompracompraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ordencompracompraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrdencompracompraCountAggregateInputType | true
    }

  export interface ordencompracompraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ordencompracompra'], meta: { name: 'ordencompracompra' } }
    /**
     * Find zero or one Ordencompracompra that matches the filter.
     * @param {ordencompracompraFindUniqueArgs} args - Arguments to find a Ordencompracompra
     * @example
     * // Get one Ordencompracompra
     * const ordencompracompra = await prisma.ordencompracompra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ordencompracompraFindUniqueArgs>(args: SelectSubset<T, ordencompracompraFindUniqueArgs<ExtArgs>>): Prisma__ordencompracompraClient<$Result.GetResult<Prisma.$ordencompracompraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ordencompracompra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ordencompracompraFindUniqueOrThrowArgs} args - Arguments to find a Ordencompracompra
     * @example
     * // Get one Ordencompracompra
     * const ordencompracompra = await prisma.ordencompracompra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ordencompracompraFindUniqueOrThrowArgs>(args: SelectSubset<T, ordencompracompraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ordencompracompraClient<$Result.GetResult<Prisma.$ordencompracompraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ordencompracompra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordencompracompraFindFirstArgs} args - Arguments to find a Ordencompracompra
     * @example
     * // Get one Ordencompracompra
     * const ordencompracompra = await prisma.ordencompracompra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ordencompracompraFindFirstArgs>(args?: SelectSubset<T, ordencompracompraFindFirstArgs<ExtArgs>>): Prisma__ordencompracompraClient<$Result.GetResult<Prisma.$ordencompracompraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ordencompracompra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordencompracompraFindFirstOrThrowArgs} args - Arguments to find a Ordencompracompra
     * @example
     * // Get one Ordencompracompra
     * const ordencompracompra = await prisma.ordencompracompra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ordencompracompraFindFirstOrThrowArgs>(args?: SelectSubset<T, ordencompracompraFindFirstOrThrowArgs<ExtArgs>>): Prisma__ordencompracompraClient<$Result.GetResult<Prisma.$ordencompracompraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ordencompracompras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordencompracompraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ordencompracompras
     * const ordencompracompras = await prisma.ordencompracompra.findMany()
     * 
     * // Get first 10 Ordencompracompras
     * const ordencompracompras = await prisma.ordencompracompra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ordencompracompraWithIdOnly = await prisma.ordencompracompra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ordencompracompraFindManyArgs>(args?: SelectSubset<T, ordencompracompraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordencompracompraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ordencompracompra.
     * @param {ordencompracompraCreateArgs} args - Arguments to create a Ordencompracompra.
     * @example
     * // Create one Ordencompracompra
     * const Ordencompracompra = await prisma.ordencompracompra.create({
     *   data: {
     *     // ... data to create a Ordencompracompra
     *   }
     * })
     * 
     */
    create<T extends ordencompracompraCreateArgs>(args: SelectSubset<T, ordencompracompraCreateArgs<ExtArgs>>): Prisma__ordencompracompraClient<$Result.GetResult<Prisma.$ordencompracompraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ordencompracompras.
     * @param {ordencompracompraCreateManyArgs} args - Arguments to create many Ordencompracompras.
     * @example
     * // Create many Ordencompracompras
     * const ordencompracompra = await prisma.ordencompracompra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ordencompracompraCreateManyArgs>(args?: SelectSubset<T, ordencompracompraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ordencompracompras and returns the data saved in the database.
     * @param {ordencompracompraCreateManyAndReturnArgs} args - Arguments to create many Ordencompracompras.
     * @example
     * // Create many Ordencompracompras
     * const ordencompracompra = await prisma.ordencompracompra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ordencompracompras and only return the `id`
     * const ordencompracompraWithIdOnly = await prisma.ordencompracompra.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ordencompracompraCreateManyAndReturnArgs>(args?: SelectSubset<T, ordencompracompraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordencompracompraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ordencompracompra.
     * @param {ordencompracompraDeleteArgs} args - Arguments to delete one Ordencompracompra.
     * @example
     * // Delete one Ordencompracompra
     * const Ordencompracompra = await prisma.ordencompracompra.delete({
     *   where: {
     *     // ... filter to delete one Ordencompracompra
     *   }
     * })
     * 
     */
    delete<T extends ordencompracompraDeleteArgs>(args: SelectSubset<T, ordencompracompraDeleteArgs<ExtArgs>>): Prisma__ordencompracompraClient<$Result.GetResult<Prisma.$ordencompracompraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ordencompracompra.
     * @param {ordencompracompraUpdateArgs} args - Arguments to update one Ordencompracompra.
     * @example
     * // Update one Ordencompracompra
     * const ordencompracompra = await prisma.ordencompracompra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ordencompracompraUpdateArgs>(args: SelectSubset<T, ordencompracompraUpdateArgs<ExtArgs>>): Prisma__ordencompracompraClient<$Result.GetResult<Prisma.$ordencompracompraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ordencompracompras.
     * @param {ordencompracompraDeleteManyArgs} args - Arguments to filter Ordencompracompras to delete.
     * @example
     * // Delete a few Ordencompracompras
     * const { count } = await prisma.ordencompracompra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ordencompracompraDeleteManyArgs>(args?: SelectSubset<T, ordencompracompraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ordencompracompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordencompracompraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ordencompracompras
     * const ordencompracompra = await prisma.ordencompracompra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ordencompracompraUpdateManyArgs>(args: SelectSubset<T, ordencompracompraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ordencompracompras and returns the data updated in the database.
     * @param {ordencompracompraUpdateManyAndReturnArgs} args - Arguments to update many Ordencompracompras.
     * @example
     * // Update many Ordencompracompras
     * const ordencompracompra = await prisma.ordencompracompra.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ordencompracompras and only return the `id`
     * const ordencompracompraWithIdOnly = await prisma.ordencompracompra.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ordencompracompraUpdateManyAndReturnArgs>(args: SelectSubset<T, ordencompracompraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordencompracompraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ordencompracompra.
     * @param {ordencompracompraUpsertArgs} args - Arguments to update or create a Ordencompracompra.
     * @example
     * // Update or create a Ordencompracompra
     * const ordencompracompra = await prisma.ordencompracompra.upsert({
     *   create: {
     *     // ... data to create a Ordencompracompra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ordencompracompra we want to update
     *   }
     * })
     */
    upsert<T extends ordencompracompraUpsertArgs>(args: SelectSubset<T, ordencompracompraUpsertArgs<ExtArgs>>): Prisma__ordencompracompraClient<$Result.GetResult<Prisma.$ordencompracompraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ordencompracompras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordencompracompraCountArgs} args - Arguments to filter Ordencompracompras to count.
     * @example
     * // Count the number of Ordencompracompras
     * const count = await prisma.ordencompracompra.count({
     *   where: {
     *     // ... the filter for the Ordencompracompras we want to count
     *   }
     * })
    **/
    count<T extends ordencompracompraCountArgs>(
      args?: Subset<T, ordencompracompraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrdencompracompraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ordencompracompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdencompracompraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrdencompracompraAggregateArgs>(args: Subset<T, OrdencompracompraAggregateArgs>): Prisma.PrismaPromise<GetOrdencompracompraAggregateType<T>>

    /**
     * Group by Ordencompracompra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordencompracompraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ordencompracompraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ordencompracompraGroupByArgs['orderBy'] }
        : { orderBy?: ordencompracompraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ordencompracompraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdencompracompraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ordencompracompra model
   */
  readonly fields: ordencompracompraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ordencompracompra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ordencompracompraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    compra<T extends ordencompracompra$compraArgs<ExtArgs> = {}>(args?: Subset<T, ordencompracompra$compraArgs<ExtArgs>>): Prisma__compraClient<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ordencompra<T extends ordencompracompra$ordencompraArgs<ExtArgs> = {}>(args?: Subset<T, ordencompracompra$ordencompraArgs<ExtArgs>>): Prisma__ordencompraClient<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ordencompracompra model
   */
  interface ordencompracompraFieldRefs {
    readonly id: FieldRef<"ordencompracompra", 'Int'>
    readonly orden_id: FieldRef<"ordencompracompra", 'Int'>
    readonly compra_id: FieldRef<"ordencompracompra", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ordencompracompra findUnique
   */
  export type ordencompracompraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompracompra
     */
    select?: ordencompracompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompracompra
     */
    omit?: ordencompracompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompracompraInclude<ExtArgs> | null
    /**
     * Filter, which ordencompracompra to fetch.
     */
    where: ordencompracompraWhereUniqueInput
  }

  /**
   * ordencompracompra findUniqueOrThrow
   */
  export type ordencompracompraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompracompra
     */
    select?: ordencompracompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompracompra
     */
    omit?: ordencompracompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompracompraInclude<ExtArgs> | null
    /**
     * Filter, which ordencompracompra to fetch.
     */
    where: ordencompracompraWhereUniqueInput
  }

  /**
   * ordencompracompra findFirst
   */
  export type ordencompracompraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompracompra
     */
    select?: ordencompracompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompracompra
     */
    omit?: ordencompracompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompracompraInclude<ExtArgs> | null
    /**
     * Filter, which ordencompracompra to fetch.
     */
    where?: ordencompracompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ordencompracompras to fetch.
     */
    orderBy?: ordencompracompraOrderByWithRelationInput | ordencompracompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ordencompracompras.
     */
    cursor?: ordencompracompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ordencompracompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ordencompracompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ordencompracompras.
     */
    distinct?: OrdencompracompraScalarFieldEnum | OrdencompracompraScalarFieldEnum[]
  }

  /**
   * ordencompracompra findFirstOrThrow
   */
  export type ordencompracompraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompracompra
     */
    select?: ordencompracompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompracompra
     */
    omit?: ordencompracompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompracompraInclude<ExtArgs> | null
    /**
     * Filter, which ordencompracompra to fetch.
     */
    where?: ordencompracompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ordencompracompras to fetch.
     */
    orderBy?: ordencompracompraOrderByWithRelationInput | ordencompracompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ordencompracompras.
     */
    cursor?: ordencompracompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ordencompracompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ordencompracompras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ordencompracompras.
     */
    distinct?: OrdencompracompraScalarFieldEnum | OrdencompracompraScalarFieldEnum[]
  }

  /**
   * ordencompracompra findMany
   */
  export type ordencompracompraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompracompra
     */
    select?: ordencompracompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompracompra
     */
    omit?: ordencompracompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompracompraInclude<ExtArgs> | null
    /**
     * Filter, which ordencompracompras to fetch.
     */
    where?: ordencompracompraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ordencompracompras to fetch.
     */
    orderBy?: ordencompracompraOrderByWithRelationInput | ordencompracompraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ordencompracompras.
     */
    cursor?: ordencompracompraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ordencompracompras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ordencompracompras.
     */
    skip?: number
    distinct?: OrdencompracompraScalarFieldEnum | OrdencompracompraScalarFieldEnum[]
  }

  /**
   * ordencompracompra create
   */
  export type ordencompracompraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompracompra
     */
    select?: ordencompracompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompracompra
     */
    omit?: ordencompracompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompracompraInclude<ExtArgs> | null
    /**
     * The data needed to create a ordencompracompra.
     */
    data?: XOR<ordencompracompraCreateInput, ordencompracompraUncheckedCreateInput>
  }

  /**
   * ordencompracompra createMany
   */
  export type ordencompracompraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ordencompracompras.
     */
    data: ordencompracompraCreateManyInput | ordencompracompraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ordencompracompra createManyAndReturn
   */
  export type ordencompracompraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompracompra
     */
    select?: ordencompracompraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompracompra
     */
    omit?: ordencompracompraOmit<ExtArgs> | null
    /**
     * The data used to create many ordencompracompras.
     */
    data: ordencompracompraCreateManyInput | ordencompracompraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompracompraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ordencompracompra update
   */
  export type ordencompracompraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompracompra
     */
    select?: ordencompracompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompracompra
     */
    omit?: ordencompracompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompracompraInclude<ExtArgs> | null
    /**
     * The data needed to update a ordencompracompra.
     */
    data: XOR<ordencompracompraUpdateInput, ordencompracompraUncheckedUpdateInput>
    /**
     * Choose, which ordencompracompra to update.
     */
    where: ordencompracompraWhereUniqueInput
  }

  /**
   * ordencompracompra updateMany
   */
  export type ordencompracompraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ordencompracompras.
     */
    data: XOR<ordencompracompraUpdateManyMutationInput, ordencompracompraUncheckedUpdateManyInput>
    /**
     * Filter which ordencompracompras to update
     */
    where?: ordencompracompraWhereInput
    /**
     * Limit how many ordencompracompras to update.
     */
    limit?: number
  }

  /**
   * ordencompracompra updateManyAndReturn
   */
  export type ordencompracompraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompracompra
     */
    select?: ordencompracompraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompracompra
     */
    omit?: ordencompracompraOmit<ExtArgs> | null
    /**
     * The data used to update ordencompracompras.
     */
    data: XOR<ordencompracompraUpdateManyMutationInput, ordencompracompraUncheckedUpdateManyInput>
    /**
     * Filter which ordencompracompras to update
     */
    where?: ordencompracompraWhereInput
    /**
     * Limit how many ordencompracompras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompracompraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ordencompracompra upsert
   */
  export type ordencompracompraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompracompra
     */
    select?: ordencompracompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompracompra
     */
    omit?: ordencompracompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompracompraInclude<ExtArgs> | null
    /**
     * The filter to search for the ordencompracompra to update in case it exists.
     */
    where: ordencompracompraWhereUniqueInput
    /**
     * In case the ordencompracompra found by the `where` argument doesn't exist, create a new ordencompracompra with this data.
     */
    create: XOR<ordencompracompraCreateInput, ordencompracompraUncheckedCreateInput>
    /**
     * In case the ordencompracompra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ordencompracompraUpdateInput, ordencompracompraUncheckedUpdateInput>
  }

  /**
   * ordencompracompra delete
   */
  export type ordencompracompraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompracompra
     */
    select?: ordencompracompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompracompra
     */
    omit?: ordencompracompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompracompraInclude<ExtArgs> | null
    /**
     * Filter which ordencompracompra to delete.
     */
    where: ordencompracompraWhereUniqueInput
  }

  /**
   * ordencompracompra deleteMany
   */
  export type ordencompracompraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ordencompracompras to delete
     */
    where?: ordencompracompraWhereInput
    /**
     * Limit how many ordencompracompras to delete.
     */
    limit?: number
  }

  /**
   * ordencompracompra.compra
   */
  export type ordencompracompra$compraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    where?: compraWhereInput
  }

  /**
   * ordencompracompra.ordencompra
   */
  export type ordencompracompra$ordencompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraInclude<ExtArgs> | null
    where?: ordencompraWhereInput
  }

  /**
   * ordencompracompra without action
   */
  export type ordencompracompraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompracompra
     */
    select?: ordencompracompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompracompra
     */
    omit?: ordencompracompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompracompraInclude<ExtArgs> | null
  }


  /**
   * Model ordenproduccion
   */

  export type AggregateOrdenproduccion = {
    _count: OrdenproduccionCountAggregateOutputType | null
    _avg: OrdenproduccionAvgAggregateOutputType | null
    _sum: OrdenproduccionSumAggregateOutputType | null
    _min: OrdenproduccionMinAggregateOutputType | null
    _max: OrdenproduccionMaxAggregateOutputType | null
  }

  export type OrdenproduccionAvgAggregateOutputType = {
    id: number | null
    producto_id: number | null
    estado_id: number | null
  }

  export type OrdenproduccionSumAggregateOutputType = {
    id: number | null
    producto_id: number | null
    estado_id: number | null
  }

  export type OrdenproduccionMinAggregateOutputType = {
    id: number | null
    producto_id: number | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    estado_id: number | null
  }

  export type OrdenproduccionMaxAggregateOutputType = {
    id: number | null
    producto_id: number | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
    estado_id: number | null
  }

  export type OrdenproduccionCountAggregateOutputType = {
    id: number
    producto_id: number
    fecha_inicio: number
    fecha_fin: number
    estado_id: number
    _all: number
  }


  export type OrdenproduccionAvgAggregateInputType = {
    id?: true
    producto_id?: true
    estado_id?: true
  }

  export type OrdenproduccionSumAggregateInputType = {
    id?: true
    producto_id?: true
    estado_id?: true
  }

  export type OrdenproduccionMinAggregateInputType = {
    id?: true
    producto_id?: true
    fecha_inicio?: true
    fecha_fin?: true
    estado_id?: true
  }

  export type OrdenproduccionMaxAggregateInputType = {
    id?: true
    producto_id?: true
    fecha_inicio?: true
    fecha_fin?: true
    estado_id?: true
  }

  export type OrdenproduccionCountAggregateInputType = {
    id?: true
    producto_id?: true
    fecha_inicio?: true
    fecha_fin?: true
    estado_id?: true
    _all?: true
  }

  export type OrdenproduccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ordenproduccion to aggregate.
     */
    where?: ordenproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ordenproduccions to fetch.
     */
    orderBy?: ordenproduccionOrderByWithRelationInput | ordenproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ordenproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ordenproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ordenproduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ordenproduccions
    **/
    _count?: true | OrdenproduccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrdenproduccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrdenproduccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrdenproduccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrdenproduccionMaxAggregateInputType
  }

  export type GetOrdenproduccionAggregateType<T extends OrdenproduccionAggregateArgs> = {
        [P in keyof T & keyof AggregateOrdenproduccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrdenproduccion[P]>
      : GetScalarType<T[P], AggregateOrdenproduccion[P]>
  }




  export type ordenproduccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordenproduccionWhereInput
    orderBy?: ordenproduccionOrderByWithAggregationInput | ordenproduccionOrderByWithAggregationInput[]
    by: OrdenproduccionScalarFieldEnum[] | OrdenproduccionScalarFieldEnum
    having?: ordenproduccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrdenproduccionCountAggregateInputType | true
    _avg?: OrdenproduccionAvgAggregateInputType
    _sum?: OrdenproduccionSumAggregateInputType
    _min?: OrdenproduccionMinAggregateInputType
    _max?: OrdenproduccionMaxAggregateInputType
  }

  export type OrdenproduccionGroupByOutputType = {
    id: number
    producto_id: number | null
    fecha_inicio: Date
    fecha_fin: Date | null
    estado_id: number | null
    _count: OrdenproduccionCountAggregateOutputType | null
    _avg: OrdenproduccionAvgAggregateOutputType | null
    _sum: OrdenproduccionSumAggregateOutputType | null
    _min: OrdenproduccionMinAggregateOutputType | null
    _max: OrdenproduccionMaxAggregateOutputType | null
  }

  type GetOrdenproduccionGroupByPayload<T extends ordenproduccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrdenproduccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrdenproduccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrdenproduccionGroupByOutputType[P]>
            : GetScalarType<T[P], OrdenproduccionGroupByOutputType[P]>
        }
      >
    >


  export type ordenproduccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producto_id?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    estado_id?: boolean
    insumoproduccion?: boolean | ordenproduccion$insumoproduccionArgs<ExtArgs>
    estadoproduccion?: boolean | ordenproduccion$estadoproduccionArgs<ExtArgs>
    producto?: boolean | ordenproduccion$productoArgs<ExtArgs>
    productoterminado?: boolean | ordenproduccion$productoterminadoArgs<ExtArgs>
    _count?: boolean | OrdenproduccionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ordenproduccion"]>

  export type ordenproduccionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producto_id?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    estado_id?: boolean
    estadoproduccion?: boolean | ordenproduccion$estadoproduccionArgs<ExtArgs>
    producto?: boolean | ordenproduccion$productoArgs<ExtArgs>
  }, ExtArgs["result"]["ordenproduccion"]>

  export type ordenproduccionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producto_id?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    estado_id?: boolean
    estadoproduccion?: boolean | ordenproduccion$estadoproduccionArgs<ExtArgs>
    producto?: boolean | ordenproduccion$productoArgs<ExtArgs>
  }, ExtArgs["result"]["ordenproduccion"]>

  export type ordenproduccionSelectScalar = {
    id?: boolean
    producto_id?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    estado_id?: boolean
  }

  export type ordenproduccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "producto_id" | "fecha_inicio" | "fecha_fin" | "estado_id", ExtArgs["result"]["ordenproduccion"]>
  export type ordenproduccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    insumoproduccion?: boolean | ordenproduccion$insumoproduccionArgs<ExtArgs>
    estadoproduccion?: boolean | ordenproduccion$estadoproduccionArgs<ExtArgs>
    producto?: boolean | ordenproduccion$productoArgs<ExtArgs>
    productoterminado?: boolean | ordenproduccion$productoterminadoArgs<ExtArgs>
    _count?: boolean | OrdenproduccionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ordenproduccionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estadoproduccion?: boolean | ordenproduccion$estadoproduccionArgs<ExtArgs>
    producto?: boolean | ordenproduccion$productoArgs<ExtArgs>
  }
  export type ordenproduccionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estadoproduccion?: boolean | ordenproduccion$estadoproduccionArgs<ExtArgs>
    producto?: boolean | ordenproduccion$productoArgs<ExtArgs>
  }

  export type $ordenproduccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ordenproduccion"
    objects: {
      insumoproduccion: Prisma.$insumoproduccionPayload<ExtArgs>[]
      estadoproduccion: Prisma.$estadoproduccionPayload<ExtArgs> | null
      producto: Prisma.$productoPayload<ExtArgs> | null
      productoterminado: Prisma.$productoterminadoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      producto_id: number | null
      fecha_inicio: Date
      fecha_fin: Date | null
      estado_id: number | null
    }, ExtArgs["result"]["ordenproduccion"]>
    composites: {}
  }

  type ordenproduccionGetPayload<S extends boolean | null | undefined | ordenproduccionDefaultArgs> = $Result.GetResult<Prisma.$ordenproduccionPayload, S>

  type ordenproduccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ordenproduccionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrdenproduccionCountAggregateInputType | true
    }

  export interface ordenproduccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ordenproduccion'], meta: { name: 'ordenproduccion' } }
    /**
     * Find zero or one Ordenproduccion that matches the filter.
     * @param {ordenproduccionFindUniqueArgs} args - Arguments to find a Ordenproduccion
     * @example
     * // Get one Ordenproduccion
     * const ordenproduccion = await prisma.ordenproduccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ordenproduccionFindUniqueArgs>(args: SelectSubset<T, ordenproduccionFindUniqueArgs<ExtArgs>>): Prisma__ordenproduccionClient<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ordenproduccion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ordenproduccionFindUniqueOrThrowArgs} args - Arguments to find a Ordenproduccion
     * @example
     * // Get one Ordenproduccion
     * const ordenproduccion = await prisma.ordenproduccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ordenproduccionFindUniqueOrThrowArgs>(args: SelectSubset<T, ordenproduccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ordenproduccionClient<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ordenproduccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordenproduccionFindFirstArgs} args - Arguments to find a Ordenproduccion
     * @example
     * // Get one Ordenproduccion
     * const ordenproduccion = await prisma.ordenproduccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ordenproduccionFindFirstArgs>(args?: SelectSubset<T, ordenproduccionFindFirstArgs<ExtArgs>>): Prisma__ordenproduccionClient<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ordenproduccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordenproduccionFindFirstOrThrowArgs} args - Arguments to find a Ordenproduccion
     * @example
     * // Get one Ordenproduccion
     * const ordenproduccion = await prisma.ordenproduccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ordenproduccionFindFirstOrThrowArgs>(args?: SelectSubset<T, ordenproduccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ordenproduccionClient<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ordenproduccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordenproduccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ordenproduccions
     * const ordenproduccions = await prisma.ordenproduccion.findMany()
     * 
     * // Get first 10 Ordenproduccions
     * const ordenproduccions = await prisma.ordenproduccion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ordenproduccionWithIdOnly = await prisma.ordenproduccion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ordenproduccionFindManyArgs>(args?: SelectSubset<T, ordenproduccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ordenproduccion.
     * @param {ordenproduccionCreateArgs} args - Arguments to create a Ordenproduccion.
     * @example
     * // Create one Ordenproduccion
     * const Ordenproduccion = await prisma.ordenproduccion.create({
     *   data: {
     *     // ... data to create a Ordenproduccion
     *   }
     * })
     * 
     */
    create<T extends ordenproduccionCreateArgs>(args: SelectSubset<T, ordenproduccionCreateArgs<ExtArgs>>): Prisma__ordenproduccionClient<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ordenproduccions.
     * @param {ordenproduccionCreateManyArgs} args - Arguments to create many Ordenproduccions.
     * @example
     * // Create many Ordenproduccions
     * const ordenproduccion = await prisma.ordenproduccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ordenproduccionCreateManyArgs>(args?: SelectSubset<T, ordenproduccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ordenproduccions and returns the data saved in the database.
     * @param {ordenproduccionCreateManyAndReturnArgs} args - Arguments to create many Ordenproduccions.
     * @example
     * // Create many Ordenproduccions
     * const ordenproduccion = await prisma.ordenproduccion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ordenproduccions and only return the `id`
     * const ordenproduccionWithIdOnly = await prisma.ordenproduccion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ordenproduccionCreateManyAndReturnArgs>(args?: SelectSubset<T, ordenproduccionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ordenproduccion.
     * @param {ordenproduccionDeleteArgs} args - Arguments to delete one Ordenproduccion.
     * @example
     * // Delete one Ordenproduccion
     * const Ordenproduccion = await prisma.ordenproduccion.delete({
     *   where: {
     *     // ... filter to delete one Ordenproduccion
     *   }
     * })
     * 
     */
    delete<T extends ordenproduccionDeleteArgs>(args: SelectSubset<T, ordenproduccionDeleteArgs<ExtArgs>>): Prisma__ordenproduccionClient<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ordenproduccion.
     * @param {ordenproduccionUpdateArgs} args - Arguments to update one Ordenproduccion.
     * @example
     * // Update one Ordenproduccion
     * const ordenproduccion = await prisma.ordenproduccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ordenproduccionUpdateArgs>(args: SelectSubset<T, ordenproduccionUpdateArgs<ExtArgs>>): Prisma__ordenproduccionClient<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ordenproduccions.
     * @param {ordenproduccionDeleteManyArgs} args - Arguments to filter Ordenproduccions to delete.
     * @example
     * // Delete a few Ordenproduccions
     * const { count } = await prisma.ordenproduccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ordenproduccionDeleteManyArgs>(args?: SelectSubset<T, ordenproduccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ordenproduccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordenproduccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ordenproduccions
     * const ordenproduccion = await prisma.ordenproduccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ordenproduccionUpdateManyArgs>(args: SelectSubset<T, ordenproduccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ordenproduccions and returns the data updated in the database.
     * @param {ordenproduccionUpdateManyAndReturnArgs} args - Arguments to update many Ordenproduccions.
     * @example
     * // Update many Ordenproduccions
     * const ordenproduccion = await prisma.ordenproduccion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ordenproduccions and only return the `id`
     * const ordenproduccionWithIdOnly = await prisma.ordenproduccion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ordenproduccionUpdateManyAndReturnArgs>(args: SelectSubset<T, ordenproduccionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ordenproduccion.
     * @param {ordenproduccionUpsertArgs} args - Arguments to update or create a Ordenproduccion.
     * @example
     * // Update or create a Ordenproduccion
     * const ordenproduccion = await prisma.ordenproduccion.upsert({
     *   create: {
     *     // ... data to create a Ordenproduccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ordenproduccion we want to update
     *   }
     * })
     */
    upsert<T extends ordenproduccionUpsertArgs>(args: SelectSubset<T, ordenproduccionUpsertArgs<ExtArgs>>): Prisma__ordenproduccionClient<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ordenproduccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordenproduccionCountArgs} args - Arguments to filter Ordenproduccions to count.
     * @example
     * // Count the number of Ordenproduccions
     * const count = await prisma.ordenproduccion.count({
     *   where: {
     *     // ... the filter for the Ordenproduccions we want to count
     *   }
     * })
    **/
    count<T extends ordenproduccionCountArgs>(
      args?: Subset<T, ordenproduccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrdenproduccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ordenproduccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdenproduccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrdenproduccionAggregateArgs>(args: Subset<T, OrdenproduccionAggregateArgs>): Prisma.PrismaPromise<GetOrdenproduccionAggregateType<T>>

    /**
     * Group by Ordenproduccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordenproduccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ordenproduccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ordenproduccionGroupByArgs['orderBy'] }
        : { orderBy?: ordenproduccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ordenproduccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdenproduccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ordenproduccion model
   */
  readonly fields: ordenproduccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ordenproduccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ordenproduccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    insumoproduccion<T extends ordenproduccion$insumoproduccionArgs<ExtArgs> = {}>(args?: Subset<T, ordenproduccion$insumoproduccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$insumoproduccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    estadoproduccion<T extends ordenproduccion$estadoproduccionArgs<ExtArgs> = {}>(args?: Subset<T, ordenproduccion$estadoproduccionArgs<ExtArgs>>): Prisma__estadoproduccionClient<$Result.GetResult<Prisma.$estadoproduccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    producto<T extends ordenproduccion$productoArgs<ExtArgs> = {}>(args?: Subset<T, ordenproduccion$productoArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    productoterminado<T extends ordenproduccion$productoterminadoArgs<ExtArgs> = {}>(args?: Subset<T, ordenproduccion$productoterminadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productoterminadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ordenproduccion model
   */
  interface ordenproduccionFieldRefs {
    readonly id: FieldRef<"ordenproduccion", 'Int'>
    readonly producto_id: FieldRef<"ordenproduccion", 'Int'>
    readonly fecha_inicio: FieldRef<"ordenproduccion", 'DateTime'>
    readonly fecha_fin: FieldRef<"ordenproduccion", 'DateTime'>
    readonly estado_id: FieldRef<"ordenproduccion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ordenproduccion findUnique
   */
  export type ordenproduccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionInclude<ExtArgs> | null
    /**
     * Filter, which ordenproduccion to fetch.
     */
    where: ordenproduccionWhereUniqueInput
  }

  /**
   * ordenproduccion findUniqueOrThrow
   */
  export type ordenproduccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionInclude<ExtArgs> | null
    /**
     * Filter, which ordenproduccion to fetch.
     */
    where: ordenproduccionWhereUniqueInput
  }

  /**
   * ordenproduccion findFirst
   */
  export type ordenproduccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionInclude<ExtArgs> | null
    /**
     * Filter, which ordenproduccion to fetch.
     */
    where?: ordenproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ordenproduccions to fetch.
     */
    orderBy?: ordenproduccionOrderByWithRelationInput | ordenproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ordenproduccions.
     */
    cursor?: ordenproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ordenproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ordenproduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ordenproduccions.
     */
    distinct?: OrdenproduccionScalarFieldEnum | OrdenproduccionScalarFieldEnum[]
  }

  /**
   * ordenproduccion findFirstOrThrow
   */
  export type ordenproduccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionInclude<ExtArgs> | null
    /**
     * Filter, which ordenproduccion to fetch.
     */
    where?: ordenproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ordenproduccions to fetch.
     */
    orderBy?: ordenproduccionOrderByWithRelationInput | ordenproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ordenproduccions.
     */
    cursor?: ordenproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ordenproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ordenproduccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ordenproduccions.
     */
    distinct?: OrdenproduccionScalarFieldEnum | OrdenproduccionScalarFieldEnum[]
  }

  /**
   * ordenproduccion findMany
   */
  export type ordenproduccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionInclude<ExtArgs> | null
    /**
     * Filter, which ordenproduccions to fetch.
     */
    where?: ordenproduccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ordenproduccions to fetch.
     */
    orderBy?: ordenproduccionOrderByWithRelationInput | ordenproduccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ordenproduccions.
     */
    cursor?: ordenproduccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ordenproduccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ordenproduccions.
     */
    skip?: number
    distinct?: OrdenproduccionScalarFieldEnum | OrdenproduccionScalarFieldEnum[]
  }

  /**
   * ordenproduccion create
   */
  export type ordenproduccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionInclude<ExtArgs> | null
    /**
     * The data needed to create a ordenproduccion.
     */
    data: XOR<ordenproduccionCreateInput, ordenproduccionUncheckedCreateInput>
  }

  /**
   * ordenproduccion createMany
   */
  export type ordenproduccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ordenproduccions.
     */
    data: ordenproduccionCreateManyInput | ordenproduccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ordenproduccion createManyAndReturn
   */
  export type ordenproduccionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * The data used to create many ordenproduccions.
     */
    data: ordenproduccionCreateManyInput | ordenproduccionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ordenproduccion update
   */
  export type ordenproduccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionInclude<ExtArgs> | null
    /**
     * The data needed to update a ordenproduccion.
     */
    data: XOR<ordenproduccionUpdateInput, ordenproduccionUncheckedUpdateInput>
    /**
     * Choose, which ordenproduccion to update.
     */
    where: ordenproduccionWhereUniqueInput
  }

  /**
   * ordenproduccion updateMany
   */
  export type ordenproduccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ordenproduccions.
     */
    data: XOR<ordenproduccionUpdateManyMutationInput, ordenproduccionUncheckedUpdateManyInput>
    /**
     * Filter which ordenproduccions to update
     */
    where?: ordenproduccionWhereInput
    /**
     * Limit how many ordenproduccions to update.
     */
    limit?: number
  }

  /**
   * ordenproduccion updateManyAndReturn
   */
  export type ordenproduccionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * The data used to update ordenproduccions.
     */
    data: XOR<ordenproduccionUpdateManyMutationInput, ordenproduccionUncheckedUpdateManyInput>
    /**
     * Filter which ordenproduccions to update
     */
    where?: ordenproduccionWhereInput
    /**
     * Limit how many ordenproduccions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ordenproduccion upsert
   */
  export type ordenproduccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionInclude<ExtArgs> | null
    /**
     * The filter to search for the ordenproduccion to update in case it exists.
     */
    where: ordenproduccionWhereUniqueInput
    /**
     * In case the ordenproduccion found by the `where` argument doesn't exist, create a new ordenproduccion with this data.
     */
    create: XOR<ordenproduccionCreateInput, ordenproduccionUncheckedCreateInput>
    /**
     * In case the ordenproduccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ordenproduccionUpdateInput, ordenproduccionUncheckedUpdateInput>
  }

  /**
   * ordenproduccion delete
   */
  export type ordenproduccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionInclude<ExtArgs> | null
    /**
     * Filter which ordenproduccion to delete.
     */
    where: ordenproduccionWhereUniqueInput
  }

  /**
   * ordenproduccion deleteMany
   */
  export type ordenproduccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ordenproduccions to delete
     */
    where?: ordenproduccionWhereInput
    /**
     * Limit how many ordenproduccions to delete.
     */
    limit?: number
  }

  /**
   * ordenproduccion.insumoproduccion
   */
  export type ordenproduccion$insumoproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumoproduccion
     */
    select?: insumoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumoproduccion
     */
    omit?: insumoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumoproduccionInclude<ExtArgs> | null
    where?: insumoproduccionWhereInput
    orderBy?: insumoproduccionOrderByWithRelationInput | insumoproduccionOrderByWithRelationInput[]
    cursor?: insumoproduccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InsumoproduccionScalarFieldEnum | InsumoproduccionScalarFieldEnum[]
  }

  /**
   * ordenproduccion.estadoproduccion
   */
  export type ordenproduccion$estadoproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoproduccion
     */
    select?: estadoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoproduccion
     */
    omit?: estadoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoproduccionInclude<ExtArgs> | null
    where?: estadoproduccionWhereInput
  }

  /**
   * ordenproduccion.producto
   */
  export type ordenproduccion$productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    where?: productoWhereInput
  }

  /**
   * ordenproduccion.productoterminado
   */
  export type ordenproduccion$productoterminadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoterminado
     */
    select?: productoterminadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoterminado
     */
    omit?: productoterminadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoterminadoInclude<ExtArgs> | null
    where?: productoterminadoWhereInput
    orderBy?: productoterminadoOrderByWithRelationInput | productoterminadoOrderByWithRelationInput[]
    cursor?: productoterminadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoterminadoScalarFieldEnum | ProductoterminadoScalarFieldEnum[]
  }

  /**
   * ordenproduccion without action
   */
  export type ordenproduccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionInclude<ExtArgs> | null
  }


  /**
   * Model permiso
   */

  export type AggregatePermiso = {
    _count: PermisoCountAggregateOutputType | null
    _avg: PermisoAvgAggregateOutputType | null
    _sum: PermisoSumAggregateOutputType | null
    _min: PermisoMinAggregateOutputType | null
    _max: PermisoMaxAggregateOutputType | null
  }

  export type PermisoAvgAggregateOutputType = {
    id: number | null
    rol_id: number | null
    screen_id: number | null
  }

  export type PermisoSumAggregateOutputType = {
    id: number | null
    rol_id: number | null
    screen_id: number | null
  }

  export type PermisoMinAggregateOutputType = {
    id: number | null
    rol_id: number | null
    screen_id: number | null
    puede_ver: boolean | null
    puede_crear: boolean | null
    puede_editar: boolean | null
    puede_eliminar: boolean | null
  }

  export type PermisoMaxAggregateOutputType = {
    id: number | null
    rol_id: number | null
    screen_id: number | null
    puede_ver: boolean | null
    puede_crear: boolean | null
    puede_editar: boolean | null
    puede_eliminar: boolean | null
  }

  export type PermisoCountAggregateOutputType = {
    id: number
    rol_id: number
    screen_id: number
    puede_ver: number
    puede_crear: number
    puede_editar: number
    puede_eliminar: number
    _all: number
  }


  export type PermisoAvgAggregateInputType = {
    id?: true
    rol_id?: true
    screen_id?: true
  }

  export type PermisoSumAggregateInputType = {
    id?: true
    rol_id?: true
    screen_id?: true
  }

  export type PermisoMinAggregateInputType = {
    id?: true
    rol_id?: true
    screen_id?: true
    puede_ver?: true
    puede_crear?: true
    puede_editar?: true
    puede_eliminar?: true
  }

  export type PermisoMaxAggregateInputType = {
    id?: true
    rol_id?: true
    screen_id?: true
    puede_ver?: true
    puede_crear?: true
    puede_editar?: true
    puede_eliminar?: true
  }

  export type PermisoCountAggregateInputType = {
    id?: true
    rol_id?: true
    screen_id?: true
    puede_ver?: true
    puede_crear?: true
    puede_editar?: true
    puede_eliminar?: true
    _all?: true
  }

  export type PermisoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permiso to aggregate.
     */
    where?: permisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permisos to fetch.
     */
    orderBy?: permisoOrderByWithRelationInput | permisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: permisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned permisos
    **/
    _count?: true | PermisoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermisoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermisoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermisoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermisoMaxAggregateInputType
  }

  export type GetPermisoAggregateType<T extends PermisoAggregateArgs> = {
        [P in keyof T & keyof AggregatePermiso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermiso[P]>
      : GetScalarType<T[P], AggregatePermiso[P]>
  }




  export type permisoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permisoWhereInput
    orderBy?: permisoOrderByWithAggregationInput | permisoOrderByWithAggregationInput[]
    by: PermisoScalarFieldEnum[] | PermisoScalarFieldEnum
    having?: permisoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermisoCountAggregateInputType | true
    _avg?: PermisoAvgAggregateInputType
    _sum?: PermisoSumAggregateInputType
    _min?: PermisoMinAggregateInputType
    _max?: PermisoMaxAggregateInputType
  }

  export type PermisoGroupByOutputType = {
    id: number
    rol_id: number | null
    screen_id: number | null
    puede_ver: boolean | null
    puede_crear: boolean | null
    puede_editar: boolean | null
    puede_eliminar: boolean | null
    _count: PermisoCountAggregateOutputType | null
    _avg: PermisoAvgAggregateOutputType | null
    _sum: PermisoSumAggregateOutputType | null
    _min: PermisoMinAggregateOutputType | null
    _max: PermisoMaxAggregateOutputType | null
  }

  type GetPermisoGroupByPayload<T extends permisoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermisoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermisoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermisoGroupByOutputType[P]>
            : GetScalarType<T[P], PermisoGroupByOutputType[P]>
        }
      >
    >


  export type permisoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rol_id?: boolean
    screen_id?: boolean
    puede_ver?: boolean
    puede_crear?: boolean
    puede_editar?: boolean
    puede_eliminar?: boolean
    rol?: boolean | permiso$rolArgs<ExtArgs>
    screen?: boolean | permiso$screenArgs<ExtArgs>
  }, ExtArgs["result"]["permiso"]>

  export type permisoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rol_id?: boolean
    screen_id?: boolean
    puede_ver?: boolean
    puede_crear?: boolean
    puede_editar?: boolean
    puede_eliminar?: boolean
    rol?: boolean | permiso$rolArgs<ExtArgs>
    screen?: boolean | permiso$screenArgs<ExtArgs>
  }, ExtArgs["result"]["permiso"]>

  export type permisoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rol_id?: boolean
    screen_id?: boolean
    puede_ver?: boolean
    puede_crear?: boolean
    puede_editar?: boolean
    puede_eliminar?: boolean
    rol?: boolean | permiso$rolArgs<ExtArgs>
    screen?: boolean | permiso$screenArgs<ExtArgs>
  }, ExtArgs["result"]["permiso"]>

  export type permisoSelectScalar = {
    id?: boolean
    rol_id?: boolean
    screen_id?: boolean
    puede_ver?: boolean
    puede_crear?: boolean
    puede_editar?: boolean
    puede_eliminar?: boolean
  }

  export type permisoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "rol_id" | "screen_id" | "puede_ver" | "puede_crear" | "puede_editar" | "puede_eliminar", ExtArgs["result"]["permiso"]>
  export type permisoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | permiso$rolArgs<ExtArgs>
    screen?: boolean | permiso$screenArgs<ExtArgs>
  }
  export type permisoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | permiso$rolArgs<ExtArgs>
    screen?: boolean | permiso$screenArgs<ExtArgs>
  }
  export type permisoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | permiso$rolArgs<ExtArgs>
    screen?: boolean | permiso$screenArgs<ExtArgs>
  }

  export type $permisoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "permiso"
    objects: {
      rol: Prisma.$rolPayload<ExtArgs> | null
      screen: Prisma.$screenPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      rol_id: number | null
      screen_id: number | null
      puede_ver: boolean | null
      puede_crear: boolean | null
      puede_editar: boolean | null
      puede_eliminar: boolean | null
    }, ExtArgs["result"]["permiso"]>
    composites: {}
  }

  type permisoGetPayload<S extends boolean | null | undefined | permisoDefaultArgs> = $Result.GetResult<Prisma.$permisoPayload, S>

  type permisoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<permisoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermisoCountAggregateInputType | true
    }

  export interface permisoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['permiso'], meta: { name: 'permiso' } }
    /**
     * Find zero or one Permiso that matches the filter.
     * @param {permisoFindUniqueArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends permisoFindUniqueArgs>(args: SelectSubset<T, permisoFindUniqueArgs<ExtArgs>>): Prisma__permisoClient<$Result.GetResult<Prisma.$permisoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permiso that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {permisoFindUniqueOrThrowArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends permisoFindUniqueOrThrowArgs>(args: SelectSubset<T, permisoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__permisoClient<$Result.GetResult<Prisma.$permisoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permiso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permisoFindFirstArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends permisoFindFirstArgs>(args?: SelectSubset<T, permisoFindFirstArgs<ExtArgs>>): Prisma__permisoClient<$Result.GetResult<Prisma.$permisoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permiso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permisoFindFirstOrThrowArgs} args - Arguments to find a Permiso
     * @example
     * // Get one Permiso
     * const permiso = await prisma.permiso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends permisoFindFirstOrThrowArgs>(args?: SelectSubset<T, permisoFindFirstOrThrowArgs<ExtArgs>>): Prisma__permisoClient<$Result.GetResult<Prisma.$permisoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permisos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permisoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permisos
     * const permisos = await prisma.permiso.findMany()
     * 
     * // Get first 10 Permisos
     * const permisos = await prisma.permiso.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permisoWithIdOnly = await prisma.permiso.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends permisoFindManyArgs>(args?: SelectSubset<T, permisoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permiso.
     * @param {permisoCreateArgs} args - Arguments to create a Permiso.
     * @example
     * // Create one Permiso
     * const Permiso = await prisma.permiso.create({
     *   data: {
     *     // ... data to create a Permiso
     *   }
     * })
     * 
     */
    create<T extends permisoCreateArgs>(args: SelectSubset<T, permisoCreateArgs<ExtArgs>>): Prisma__permisoClient<$Result.GetResult<Prisma.$permisoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permisos.
     * @param {permisoCreateManyArgs} args - Arguments to create many Permisos.
     * @example
     * // Create many Permisos
     * const permiso = await prisma.permiso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends permisoCreateManyArgs>(args?: SelectSubset<T, permisoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permisos and returns the data saved in the database.
     * @param {permisoCreateManyAndReturnArgs} args - Arguments to create many Permisos.
     * @example
     * // Create many Permisos
     * const permiso = await prisma.permiso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permisos and only return the `id`
     * const permisoWithIdOnly = await prisma.permiso.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends permisoCreateManyAndReturnArgs>(args?: SelectSubset<T, permisoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permisoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permiso.
     * @param {permisoDeleteArgs} args - Arguments to delete one Permiso.
     * @example
     * // Delete one Permiso
     * const Permiso = await prisma.permiso.delete({
     *   where: {
     *     // ... filter to delete one Permiso
     *   }
     * })
     * 
     */
    delete<T extends permisoDeleteArgs>(args: SelectSubset<T, permisoDeleteArgs<ExtArgs>>): Prisma__permisoClient<$Result.GetResult<Prisma.$permisoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permiso.
     * @param {permisoUpdateArgs} args - Arguments to update one Permiso.
     * @example
     * // Update one Permiso
     * const permiso = await prisma.permiso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends permisoUpdateArgs>(args: SelectSubset<T, permisoUpdateArgs<ExtArgs>>): Prisma__permisoClient<$Result.GetResult<Prisma.$permisoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permisos.
     * @param {permisoDeleteManyArgs} args - Arguments to filter Permisos to delete.
     * @example
     * // Delete a few Permisos
     * const { count } = await prisma.permiso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends permisoDeleteManyArgs>(args?: SelectSubset<T, permisoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permisoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permisos
     * const permiso = await prisma.permiso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends permisoUpdateManyArgs>(args: SelectSubset<T, permisoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permisos and returns the data updated in the database.
     * @param {permisoUpdateManyAndReturnArgs} args - Arguments to update many Permisos.
     * @example
     * // Update many Permisos
     * const permiso = await prisma.permiso.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permisos and only return the `id`
     * const permisoWithIdOnly = await prisma.permiso.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends permisoUpdateManyAndReturnArgs>(args: SelectSubset<T, permisoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permisoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permiso.
     * @param {permisoUpsertArgs} args - Arguments to update or create a Permiso.
     * @example
     * // Update or create a Permiso
     * const permiso = await prisma.permiso.upsert({
     *   create: {
     *     // ... data to create a Permiso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permiso we want to update
     *   }
     * })
     */
    upsert<T extends permisoUpsertArgs>(args: SelectSubset<T, permisoUpsertArgs<ExtArgs>>): Prisma__permisoClient<$Result.GetResult<Prisma.$permisoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permisoCountArgs} args - Arguments to filter Permisos to count.
     * @example
     * // Count the number of Permisos
     * const count = await prisma.permiso.count({
     *   where: {
     *     // ... the filter for the Permisos we want to count
     *   }
     * })
    **/
    count<T extends permisoCountArgs>(
      args?: Subset<T, permisoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermisoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permiso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermisoAggregateArgs>(args: Subset<T, PermisoAggregateArgs>): Prisma.PrismaPromise<GetPermisoAggregateType<T>>

    /**
     * Group by Permiso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permisoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends permisoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: permisoGroupByArgs['orderBy'] }
        : { orderBy?: permisoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, permisoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermisoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the permiso model
   */
  readonly fields: permisoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for permiso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__permisoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rol<T extends permiso$rolArgs<ExtArgs> = {}>(args?: Subset<T, permiso$rolArgs<ExtArgs>>): Prisma__rolClient<$Result.GetResult<Prisma.$rolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    screen<T extends permiso$screenArgs<ExtArgs> = {}>(args?: Subset<T, permiso$screenArgs<ExtArgs>>): Prisma__screenClient<$Result.GetResult<Prisma.$screenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the permiso model
   */
  interface permisoFieldRefs {
    readonly id: FieldRef<"permiso", 'Int'>
    readonly rol_id: FieldRef<"permiso", 'Int'>
    readonly screen_id: FieldRef<"permiso", 'Int'>
    readonly puede_ver: FieldRef<"permiso", 'Boolean'>
    readonly puede_crear: FieldRef<"permiso", 'Boolean'>
    readonly puede_editar: FieldRef<"permiso", 'Boolean'>
    readonly puede_eliminar: FieldRef<"permiso", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * permiso findUnique
   */
  export type permisoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permiso
     */
    select?: permisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permiso
     */
    omit?: permisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permisoInclude<ExtArgs> | null
    /**
     * Filter, which permiso to fetch.
     */
    where: permisoWhereUniqueInput
  }

  /**
   * permiso findUniqueOrThrow
   */
  export type permisoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permiso
     */
    select?: permisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permiso
     */
    omit?: permisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permisoInclude<ExtArgs> | null
    /**
     * Filter, which permiso to fetch.
     */
    where: permisoWhereUniqueInput
  }

  /**
   * permiso findFirst
   */
  export type permisoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permiso
     */
    select?: permisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permiso
     */
    omit?: permisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permisoInclude<ExtArgs> | null
    /**
     * Filter, which permiso to fetch.
     */
    where?: permisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permisos to fetch.
     */
    orderBy?: permisoOrderByWithRelationInput | permisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permisos.
     */
    cursor?: permisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permisos.
     */
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * permiso findFirstOrThrow
   */
  export type permisoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permiso
     */
    select?: permisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permiso
     */
    omit?: permisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permisoInclude<ExtArgs> | null
    /**
     * Filter, which permiso to fetch.
     */
    where?: permisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permisos to fetch.
     */
    orderBy?: permisoOrderByWithRelationInput | permisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permisos.
     */
    cursor?: permisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permisos.
     */
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * permiso findMany
   */
  export type permisoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permiso
     */
    select?: permisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permiso
     */
    omit?: permisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permisoInclude<ExtArgs> | null
    /**
     * Filter, which permisos to fetch.
     */
    where?: permisoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permisos to fetch.
     */
    orderBy?: permisoOrderByWithRelationInput | permisoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing permisos.
     */
    cursor?: permisoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permisos.
     */
    skip?: number
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * permiso create
   */
  export type permisoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permiso
     */
    select?: permisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permiso
     */
    omit?: permisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permisoInclude<ExtArgs> | null
    /**
     * The data needed to create a permiso.
     */
    data?: XOR<permisoCreateInput, permisoUncheckedCreateInput>
  }

  /**
   * permiso createMany
   */
  export type permisoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many permisos.
     */
    data: permisoCreateManyInput | permisoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * permiso createManyAndReturn
   */
  export type permisoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permiso
     */
    select?: permisoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the permiso
     */
    omit?: permisoOmit<ExtArgs> | null
    /**
     * The data used to create many permisos.
     */
    data: permisoCreateManyInput | permisoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permisoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * permiso update
   */
  export type permisoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permiso
     */
    select?: permisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permiso
     */
    omit?: permisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permisoInclude<ExtArgs> | null
    /**
     * The data needed to update a permiso.
     */
    data: XOR<permisoUpdateInput, permisoUncheckedUpdateInput>
    /**
     * Choose, which permiso to update.
     */
    where: permisoWhereUniqueInput
  }

  /**
   * permiso updateMany
   */
  export type permisoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update permisos.
     */
    data: XOR<permisoUpdateManyMutationInput, permisoUncheckedUpdateManyInput>
    /**
     * Filter which permisos to update
     */
    where?: permisoWhereInput
    /**
     * Limit how many permisos to update.
     */
    limit?: number
  }

  /**
   * permiso updateManyAndReturn
   */
  export type permisoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permiso
     */
    select?: permisoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the permiso
     */
    omit?: permisoOmit<ExtArgs> | null
    /**
     * The data used to update permisos.
     */
    data: XOR<permisoUpdateManyMutationInput, permisoUncheckedUpdateManyInput>
    /**
     * Filter which permisos to update
     */
    where?: permisoWhereInput
    /**
     * Limit how many permisos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permisoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * permiso upsert
   */
  export type permisoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permiso
     */
    select?: permisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permiso
     */
    omit?: permisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permisoInclude<ExtArgs> | null
    /**
     * The filter to search for the permiso to update in case it exists.
     */
    where: permisoWhereUniqueInput
    /**
     * In case the permiso found by the `where` argument doesn't exist, create a new permiso with this data.
     */
    create: XOR<permisoCreateInput, permisoUncheckedCreateInput>
    /**
     * In case the permiso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<permisoUpdateInput, permisoUncheckedUpdateInput>
  }

  /**
   * permiso delete
   */
  export type permisoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permiso
     */
    select?: permisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permiso
     */
    omit?: permisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permisoInclude<ExtArgs> | null
    /**
     * Filter which permiso to delete.
     */
    where: permisoWhereUniqueInput
  }

  /**
   * permiso deleteMany
   */
  export type permisoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permisos to delete
     */
    where?: permisoWhereInput
    /**
     * Limit how many permisos to delete.
     */
    limit?: number
  }

  /**
   * permiso.rol
   */
  export type permiso$rolArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol
     */
    select?: rolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol
     */
    omit?: rolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolInclude<ExtArgs> | null
    where?: rolWhereInput
  }

  /**
   * permiso.screen
   */
  export type permiso$screenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the screen
     */
    select?: screenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the screen
     */
    omit?: screenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: screenInclude<ExtArgs> | null
    where?: screenWhereInput
  }

  /**
   * permiso without action
   */
  export type permisoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permiso
     */
    select?: permisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permiso
     */
    omit?: permisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permisoInclude<ExtArgs> | null
  }


  /**
   * Model producto
   */

  export type AggregateProducto = {
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  export type ProductoAvgAggregateOutputType = {
    id: number | null
    stock_minimo: number | null
  }

  export type ProductoSumAggregateOutputType = {
    id: number | null
    stock_minimo: number | null
  }

  export type ProductoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    es_combo: boolean | null
    stock_minimo: number | null
  }

  export type ProductoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    es_combo: boolean | null
    stock_minimo: number | null
  }

  export type ProductoCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    es_combo: number
    stock_minimo: number
    _all: number
  }


  export type ProductoAvgAggregateInputType = {
    id?: true
    stock_minimo?: true
  }

  export type ProductoSumAggregateInputType = {
    id?: true
    stock_minimo?: true
  }

  export type ProductoMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    es_combo?: true
    stock_minimo?: true
  }

  export type ProductoMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    es_combo?: true
    stock_minimo?: true
  }

  export type ProductoCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    es_combo?: true
    stock_minimo?: true
    _all?: true
  }

  export type ProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which producto to aggregate.
     */
    where?: productoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productos to fetch.
     */
    orderBy?: productoOrderByWithRelationInput | productoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: productoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned productos
    **/
    _count?: true | ProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductoMaxAggregateInputType
  }

  export type GetProductoAggregateType<T extends ProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducto[P]>
      : GetScalarType<T[P], AggregateProducto[P]>
  }




  export type productoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productoWhereInput
    orderBy?: productoOrderByWithAggregationInput | productoOrderByWithAggregationInput[]
    by: ProductoScalarFieldEnum[] | ProductoScalarFieldEnum
    having?: productoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductoCountAggregateInputType | true
    _avg?: ProductoAvgAggregateInputType
    _sum?: ProductoSumAggregateInputType
    _min?: ProductoMinAggregateInputType
    _max?: ProductoMaxAggregateInputType
  }

  export type ProductoGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string | null
    es_combo: boolean | null
    stock_minimo: number | null
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  type GetProductoGroupByPayload<T extends productoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductoGroupByOutputType[P]>
            : GetScalarType<T[P], ProductoGroupByOutputType[P]>
        }
      >
    >


  export type productoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    es_combo?: boolean
    stock_minimo?: boolean
    codigobarra?: boolean | producto$codigobarraArgs<ExtArgs>
    detalleordencompra?: boolean | producto$detalleordencompraArgs<ExtArgs>
    detalleventa?: boolean | producto$detalleventaArgs<ExtArgs>
    insumoproduccion?: boolean | producto$insumoproduccionArgs<ExtArgs>
    listaprecio?: boolean | producto$listaprecioArgs<ExtArgs>
    ordenproduccion?: boolean | producto$ordenproduccionArgs<ExtArgs>
    productocombo_productocombo_combo_idToproducto?: boolean | producto$productocombo_productocombo_combo_idToproductoArgs<ExtArgs>
    productocombo_productocombo_producto_idToproducto?: boolean | producto$productocombo_productocombo_producto_idToproductoArgs<ExtArgs>
    _count?: boolean | ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type productoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    es_combo?: boolean
    stock_minimo?: boolean
  }, ExtArgs["result"]["producto"]>

  export type productoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    es_combo?: boolean
    stock_minimo?: boolean
  }, ExtArgs["result"]["producto"]>

  export type productoSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    es_combo?: boolean
    stock_minimo?: boolean
  }

  export type productoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "descripcion" | "es_combo" | "stock_minimo", ExtArgs["result"]["producto"]>
  export type productoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    codigobarra?: boolean | producto$codigobarraArgs<ExtArgs>
    detalleordencompra?: boolean | producto$detalleordencompraArgs<ExtArgs>
    detalleventa?: boolean | producto$detalleventaArgs<ExtArgs>
    insumoproduccion?: boolean | producto$insumoproduccionArgs<ExtArgs>
    listaprecio?: boolean | producto$listaprecioArgs<ExtArgs>
    ordenproduccion?: boolean | producto$ordenproduccionArgs<ExtArgs>
    productocombo_productocombo_combo_idToproducto?: boolean | producto$productocombo_productocombo_combo_idToproductoArgs<ExtArgs>
    productocombo_productocombo_producto_idToproducto?: boolean | producto$productocombo_productocombo_producto_idToproductoArgs<ExtArgs>
    _count?: boolean | ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type productoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type productoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $productoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "producto"
    objects: {
      codigobarra: Prisma.$codigobarraPayload<ExtArgs>[]
      detalleordencompra: Prisma.$detalleordencompraPayload<ExtArgs>[]
      detalleventa: Prisma.$detalleventaPayload<ExtArgs>[]
      insumoproduccion: Prisma.$insumoproduccionPayload<ExtArgs>[]
      listaprecio: Prisma.$listaprecioPayload<ExtArgs>[]
      ordenproduccion: Prisma.$ordenproduccionPayload<ExtArgs>[]
      productocombo_productocombo_combo_idToproducto: Prisma.$productocomboPayload<ExtArgs>[]
      productocombo_productocombo_producto_idToproducto: Prisma.$productocomboPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string | null
      es_combo: boolean | null
      stock_minimo: number | null
    }, ExtArgs["result"]["producto"]>
    composites: {}
  }

  type productoGetPayload<S extends boolean | null | undefined | productoDefaultArgs> = $Result.GetResult<Prisma.$productoPayload, S>

  type productoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<productoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductoCountAggregateInputType | true
    }

  export interface productoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['producto'], meta: { name: 'producto' } }
    /**
     * Find zero or one Producto that matches the filter.
     * @param {productoFindUniqueArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends productoFindUniqueArgs>(args: SelectSubset<T, productoFindUniqueArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Producto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {productoFindUniqueOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends productoFindUniqueOrThrowArgs>(args: SelectSubset<T, productoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productoFindFirstArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends productoFindFirstArgs>(args?: SelectSubset<T, productoFindFirstArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productoFindFirstOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends productoFindFirstOrThrowArgs>(args?: SelectSubset<T, productoFindFirstOrThrowArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productos
     * const productos = await prisma.producto.findMany()
     * 
     * // Get first 10 Productos
     * const productos = await prisma.producto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productoWithIdOnly = await prisma.producto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends productoFindManyArgs>(args?: SelectSubset<T, productoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Producto.
     * @param {productoCreateArgs} args - Arguments to create a Producto.
     * @example
     * // Create one Producto
     * const Producto = await prisma.producto.create({
     *   data: {
     *     // ... data to create a Producto
     *   }
     * })
     * 
     */
    create<T extends productoCreateArgs>(args: SelectSubset<T, productoCreateArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productos.
     * @param {productoCreateManyArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends productoCreateManyArgs>(args?: SelectSubset<T, productoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Productos and returns the data saved in the database.
     * @param {productoCreateManyAndReturnArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Productos and only return the `id`
     * const productoWithIdOnly = await prisma.producto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends productoCreateManyAndReturnArgs>(args?: SelectSubset<T, productoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Producto.
     * @param {productoDeleteArgs} args - Arguments to delete one Producto.
     * @example
     * // Delete one Producto
     * const Producto = await prisma.producto.delete({
     *   where: {
     *     // ... filter to delete one Producto
     *   }
     * })
     * 
     */
    delete<T extends productoDeleteArgs>(args: SelectSubset<T, productoDeleteArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Producto.
     * @param {productoUpdateArgs} args - Arguments to update one Producto.
     * @example
     * // Update one Producto
     * const producto = await prisma.producto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends productoUpdateArgs>(args: SelectSubset<T, productoUpdateArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productos.
     * @param {productoDeleteManyArgs} args - Arguments to filter Productos to delete.
     * @example
     * // Delete a few Productos
     * const { count } = await prisma.producto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends productoDeleteManyArgs>(args?: SelectSubset<T, productoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productos
     * const producto = await prisma.producto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends productoUpdateManyArgs>(args: SelectSubset<T, productoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos and returns the data updated in the database.
     * @param {productoUpdateManyAndReturnArgs} args - Arguments to update many Productos.
     * @example
     * // Update many Productos
     * const producto = await prisma.producto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Productos and only return the `id`
     * const productoWithIdOnly = await prisma.producto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends productoUpdateManyAndReturnArgs>(args: SelectSubset<T, productoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Producto.
     * @param {productoUpsertArgs} args - Arguments to update or create a Producto.
     * @example
     * // Update or create a Producto
     * const producto = await prisma.producto.upsert({
     *   create: {
     *     // ... data to create a Producto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Producto we want to update
     *   }
     * })
     */
    upsert<T extends productoUpsertArgs>(args: SelectSubset<T, productoUpsertArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productoCountArgs} args - Arguments to filter Productos to count.
     * @example
     * // Count the number of Productos
     * const count = await prisma.producto.count({
     *   where: {
     *     // ... the filter for the Productos we want to count
     *   }
     * })
    **/
    count<T extends productoCountArgs>(
      args?: Subset<T, productoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductoAggregateArgs>(args: Subset<T, ProductoAggregateArgs>): Prisma.PrismaPromise<GetProductoAggregateType<T>>

    /**
     * Group by Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends productoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: productoGroupByArgs['orderBy'] }
        : { orderBy?: productoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, productoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the producto model
   */
  readonly fields: productoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for producto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__productoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    codigobarra<T extends producto$codigobarraArgs<ExtArgs> = {}>(args?: Subset<T, producto$codigobarraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$codigobarraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    detalleordencompra<T extends producto$detalleordencompraArgs<ExtArgs> = {}>(args?: Subset<T, producto$detalleordencompraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleordencompraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    detalleventa<T extends producto$detalleventaArgs<ExtArgs> = {}>(args?: Subset<T, producto$detalleventaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    insumoproduccion<T extends producto$insumoproduccionArgs<ExtArgs> = {}>(args?: Subset<T, producto$insumoproduccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$insumoproduccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    listaprecio<T extends producto$listaprecioArgs<ExtArgs> = {}>(args?: Subset<T, producto$listaprecioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$listaprecioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ordenproduccion<T extends producto$ordenproduccionArgs<ExtArgs> = {}>(args?: Subset<T, producto$ordenproduccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productocombo_productocombo_combo_idToproducto<T extends producto$productocombo_productocombo_combo_idToproductoArgs<ExtArgs> = {}>(args?: Subset<T, producto$productocombo_productocombo_combo_idToproductoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productocomboPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productocombo_productocombo_producto_idToproducto<T extends producto$productocombo_productocombo_producto_idToproductoArgs<ExtArgs> = {}>(args?: Subset<T, producto$productocombo_productocombo_producto_idToproductoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productocomboPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the producto model
   */
  interface productoFieldRefs {
    readonly id: FieldRef<"producto", 'Int'>
    readonly nombre: FieldRef<"producto", 'String'>
    readonly descripcion: FieldRef<"producto", 'String'>
    readonly es_combo: FieldRef<"producto", 'Boolean'>
    readonly stock_minimo: FieldRef<"producto", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * producto findUnique
   */
  export type productoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    /**
     * Filter, which producto to fetch.
     */
    where: productoWhereUniqueInput
  }

  /**
   * producto findUniqueOrThrow
   */
  export type productoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    /**
     * Filter, which producto to fetch.
     */
    where: productoWhereUniqueInput
  }

  /**
   * producto findFirst
   */
  export type productoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    /**
     * Filter, which producto to fetch.
     */
    where?: productoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productos to fetch.
     */
    orderBy?: productoOrderByWithRelationInput | productoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productos.
     */
    cursor?: productoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * producto findFirstOrThrow
   */
  export type productoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    /**
     * Filter, which producto to fetch.
     */
    where?: productoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productos to fetch.
     */
    orderBy?: productoOrderByWithRelationInput | productoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productos.
     */
    cursor?: productoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * producto findMany
   */
  export type productoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    /**
     * Filter, which productos to fetch.
     */
    where?: productoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productos to fetch.
     */
    orderBy?: productoOrderByWithRelationInput | productoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing productos.
     */
    cursor?: productoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productos.
     */
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * producto create
   */
  export type productoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    /**
     * The data needed to create a producto.
     */
    data: XOR<productoCreateInput, productoUncheckedCreateInput>
  }

  /**
   * producto createMany
   */
  export type productoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many productos.
     */
    data: productoCreateManyInput | productoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * producto createManyAndReturn
   */
  export type productoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * The data used to create many productos.
     */
    data: productoCreateManyInput | productoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * producto update
   */
  export type productoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    /**
     * The data needed to update a producto.
     */
    data: XOR<productoUpdateInput, productoUncheckedUpdateInput>
    /**
     * Choose, which producto to update.
     */
    where: productoWhereUniqueInput
  }

  /**
   * producto updateMany
   */
  export type productoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update productos.
     */
    data: XOR<productoUpdateManyMutationInput, productoUncheckedUpdateManyInput>
    /**
     * Filter which productos to update
     */
    where?: productoWhereInput
    /**
     * Limit how many productos to update.
     */
    limit?: number
  }

  /**
   * producto updateManyAndReturn
   */
  export type productoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * The data used to update productos.
     */
    data: XOR<productoUpdateManyMutationInput, productoUncheckedUpdateManyInput>
    /**
     * Filter which productos to update
     */
    where?: productoWhereInput
    /**
     * Limit how many productos to update.
     */
    limit?: number
  }

  /**
   * producto upsert
   */
  export type productoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    /**
     * The filter to search for the producto to update in case it exists.
     */
    where: productoWhereUniqueInput
    /**
     * In case the producto found by the `where` argument doesn't exist, create a new producto with this data.
     */
    create: XOR<productoCreateInput, productoUncheckedCreateInput>
    /**
     * In case the producto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<productoUpdateInput, productoUncheckedUpdateInput>
  }

  /**
   * producto delete
   */
  export type productoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    /**
     * Filter which producto to delete.
     */
    where: productoWhereUniqueInput
  }

  /**
   * producto deleteMany
   */
  export type productoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productos to delete
     */
    where?: productoWhereInput
    /**
     * Limit how many productos to delete.
     */
    limit?: number
  }

  /**
   * producto.codigobarra
   */
  export type producto$codigobarraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the codigobarra
     */
    select?: codigobarraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the codigobarra
     */
    omit?: codigobarraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: codigobarraInclude<ExtArgs> | null
    where?: codigobarraWhereInput
    orderBy?: codigobarraOrderByWithRelationInput | codigobarraOrderByWithRelationInput[]
    cursor?: codigobarraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CodigobarraScalarFieldEnum | CodigobarraScalarFieldEnum[]
  }

  /**
   * producto.detalleordencompra
   */
  export type producto$detalleordencompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleordencompra
     */
    select?: detalleordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleordencompra
     */
    omit?: detalleordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleordencompraInclude<ExtArgs> | null
    where?: detalleordencompraWhereInput
    orderBy?: detalleordencompraOrderByWithRelationInput | detalleordencompraOrderByWithRelationInput[]
    cursor?: detalleordencompraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleordencompraScalarFieldEnum | DetalleordencompraScalarFieldEnum[]
  }

  /**
   * producto.detalleventa
   */
  export type producto$detalleventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
    where?: detalleventaWhereInput
    orderBy?: detalleventaOrderByWithRelationInput | detalleventaOrderByWithRelationInput[]
    cursor?: detalleventaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleventaScalarFieldEnum | DetalleventaScalarFieldEnum[]
  }

  /**
   * producto.insumoproduccion
   */
  export type producto$insumoproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumoproduccion
     */
    select?: insumoproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumoproduccion
     */
    omit?: insumoproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumoproduccionInclude<ExtArgs> | null
    where?: insumoproduccionWhereInput
    orderBy?: insumoproduccionOrderByWithRelationInput | insumoproduccionOrderByWithRelationInput[]
    cursor?: insumoproduccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InsumoproduccionScalarFieldEnum | InsumoproduccionScalarFieldEnum[]
  }

  /**
   * producto.listaprecio
   */
  export type producto$listaprecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioInclude<ExtArgs> | null
    where?: listaprecioWhereInput
    orderBy?: listaprecioOrderByWithRelationInput | listaprecioOrderByWithRelationInput[]
    cursor?: listaprecioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListaprecioScalarFieldEnum | ListaprecioScalarFieldEnum[]
  }

  /**
   * producto.ordenproduccion
   */
  export type producto$ordenproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionInclude<ExtArgs> | null
    where?: ordenproduccionWhereInput
    orderBy?: ordenproduccionOrderByWithRelationInput | ordenproduccionOrderByWithRelationInput[]
    cursor?: ordenproduccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdenproduccionScalarFieldEnum | OrdenproduccionScalarFieldEnum[]
  }

  /**
   * producto.productocombo_productocombo_combo_idToproducto
   */
  export type producto$productocombo_productocombo_combo_idToproductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productocombo
     */
    select?: productocomboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productocombo
     */
    omit?: productocomboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productocomboInclude<ExtArgs> | null
    where?: productocomboWhereInput
    orderBy?: productocomboOrderByWithRelationInput | productocomboOrderByWithRelationInput[]
    cursor?: productocomboWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductocomboScalarFieldEnum | ProductocomboScalarFieldEnum[]
  }

  /**
   * producto.productocombo_productocombo_producto_idToproducto
   */
  export type producto$productocombo_productocombo_producto_idToproductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productocombo
     */
    select?: productocomboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productocombo
     */
    omit?: productocomboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productocomboInclude<ExtArgs> | null
    where?: productocomboWhereInput
    orderBy?: productocomboOrderByWithRelationInput | productocomboOrderByWithRelationInput[]
    cursor?: productocomboWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductocomboScalarFieldEnum | ProductocomboScalarFieldEnum[]
  }

  /**
   * producto without action
   */
  export type productoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
  }


  /**
   * Model productocombo
   */

  export type AggregateProductocombo = {
    _count: ProductocomboCountAggregateOutputType | null
    _avg: ProductocomboAvgAggregateOutputType | null
    _sum: ProductocomboSumAggregateOutputType | null
    _min: ProductocomboMinAggregateOutputType | null
    _max: ProductocomboMaxAggregateOutputType | null
  }

  export type ProductocomboAvgAggregateOutputType = {
    id: number | null
    combo_id: number | null
    producto_id: number | null
    cantidad: number | null
  }

  export type ProductocomboSumAggregateOutputType = {
    id: number | null
    combo_id: number | null
    producto_id: number | null
    cantidad: number | null
  }

  export type ProductocomboMinAggregateOutputType = {
    id: number | null
    combo_id: number | null
    producto_id: number | null
    cantidad: number | null
  }

  export type ProductocomboMaxAggregateOutputType = {
    id: number | null
    combo_id: number | null
    producto_id: number | null
    cantidad: number | null
  }

  export type ProductocomboCountAggregateOutputType = {
    id: number
    combo_id: number
    producto_id: number
    cantidad: number
    _all: number
  }


  export type ProductocomboAvgAggregateInputType = {
    id?: true
    combo_id?: true
    producto_id?: true
    cantidad?: true
  }

  export type ProductocomboSumAggregateInputType = {
    id?: true
    combo_id?: true
    producto_id?: true
    cantidad?: true
  }

  export type ProductocomboMinAggregateInputType = {
    id?: true
    combo_id?: true
    producto_id?: true
    cantidad?: true
  }

  export type ProductocomboMaxAggregateInputType = {
    id?: true
    combo_id?: true
    producto_id?: true
    cantidad?: true
  }

  export type ProductocomboCountAggregateInputType = {
    id?: true
    combo_id?: true
    producto_id?: true
    cantidad?: true
    _all?: true
  }

  export type ProductocomboAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productocombo to aggregate.
     */
    where?: productocomboWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productocombos to fetch.
     */
    orderBy?: productocomboOrderByWithRelationInput | productocomboOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: productocomboWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productocombos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productocombos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned productocombos
    **/
    _count?: true | ProductocomboCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductocomboAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductocomboSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductocomboMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductocomboMaxAggregateInputType
  }

  export type GetProductocomboAggregateType<T extends ProductocomboAggregateArgs> = {
        [P in keyof T & keyof AggregateProductocombo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductocombo[P]>
      : GetScalarType<T[P], AggregateProductocombo[P]>
  }




  export type productocomboGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productocomboWhereInput
    orderBy?: productocomboOrderByWithAggregationInput | productocomboOrderByWithAggregationInput[]
    by: ProductocomboScalarFieldEnum[] | ProductocomboScalarFieldEnum
    having?: productocomboScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductocomboCountAggregateInputType | true
    _avg?: ProductocomboAvgAggregateInputType
    _sum?: ProductocomboSumAggregateInputType
    _min?: ProductocomboMinAggregateInputType
    _max?: ProductocomboMaxAggregateInputType
  }

  export type ProductocomboGroupByOutputType = {
    id: number
    combo_id: number | null
    producto_id: number | null
    cantidad: number
    _count: ProductocomboCountAggregateOutputType | null
    _avg: ProductocomboAvgAggregateOutputType | null
    _sum: ProductocomboSumAggregateOutputType | null
    _min: ProductocomboMinAggregateOutputType | null
    _max: ProductocomboMaxAggregateOutputType | null
  }

  type GetProductocomboGroupByPayload<T extends productocomboGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductocomboGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductocomboGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductocomboGroupByOutputType[P]>
            : GetScalarType<T[P], ProductocomboGroupByOutputType[P]>
        }
      >
    >


  export type productocomboSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    combo_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
    producto_productocombo_combo_idToproducto?: boolean | productocombo$producto_productocombo_combo_idToproductoArgs<ExtArgs>
    producto_productocombo_producto_idToproducto?: boolean | productocombo$producto_productocombo_producto_idToproductoArgs<ExtArgs>
  }, ExtArgs["result"]["productocombo"]>

  export type productocomboSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    combo_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
    producto_productocombo_combo_idToproducto?: boolean | productocombo$producto_productocombo_combo_idToproductoArgs<ExtArgs>
    producto_productocombo_producto_idToproducto?: boolean | productocombo$producto_productocombo_producto_idToproductoArgs<ExtArgs>
  }, ExtArgs["result"]["productocombo"]>

  export type productocomboSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    combo_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
    producto_productocombo_combo_idToproducto?: boolean | productocombo$producto_productocombo_combo_idToproductoArgs<ExtArgs>
    producto_productocombo_producto_idToproducto?: boolean | productocombo$producto_productocombo_producto_idToproductoArgs<ExtArgs>
  }, ExtArgs["result"]["productocombo"]>

  export type productocomboSelectScalar = {
    id?: boolean
    combo_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
  }

  export type productocomboOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "combo_id" | "producto_id" | "cantidad", ExtArgs["result"]["productocombo"]>
  export type productocomboInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto_productocombo_combo_idToproducto?: boolean | productocombo$producto_productocombo_combo_idToproductoArgs<ExtArgs>
    producto_productocombo_producto_idToproducto?: boolean | productocombo$producto_productocombo_producto_idToproductoArgs<ExtArgs>
  }
  export type productocomboIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto_productocombo_combo_idToproducto?: boolean | productocombo$producto_productocombo_combo_idToproductoArgs<ExtArgs>
    producto_productocombo_producto_idToproducto?: boolean | productocombo$producto_productocombo_producto_idToproductoArgs<ExtArgs>
  }
  export type productocomboIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto_productocombo_combo_idToproducto?: boolean | productocombo$producto_productocombo_combo_idToproductoArgs<ExtArgs>
    producto_productocombo_producto_idToproducto?: boolean | productocombo$producto_productocombo_producto_idToproductoArgs<ExtArgs>
  }

  export type $productocomboPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "productocombo"
    objects: {
      producto_productocombo_combo_idToproducto: Prisma.$productoPayload<ExtArgs> | null
      producto_productocombo_producto_idToproducto: Prisma.$productoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      combo_id: number | null
      producto_id: number | null
      cantidad: number
    }, ExtArgs["result"]["productocombo"]>
    composites: {}
  }

  type productocomboGetPayload<S extends boolean | null | undefined | productocomboDefaultArgs> = $Result.GetResult<Prisma.$productocomboPayload, S>

  type productocomboCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<productocomboFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductocomboCountAggregateInputType | true
    }

  export interface productocomboDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['productocombo'], meta: { name: 'productocombo' } }
    /**
     * Find zero or one Productocombo that matches the filter.
     * @param {productocomboFindUniqueArgs} args - Arguments to find a Productocombo
     * @example
     * // Get one Productocombo
     * const productocombo = await prisma.productocombo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends productocomboFindUniqueArgs>(args: SelectSubset<T, productocomboFindUniqueArgs<ExtArgs>>): Prisma__productocomboClient<$Result.GetResult<Prisma.$productocomboPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Productocombo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {productocomboFindUniqueOrThrowArgs} args - Arguments to find a Productocombo
     * @example
     * // Get one Productocombo
     * const productocombo = await prisma.productocombo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends productocomboFindUniqueOrThrowArgs>(args: SelectSubset<T, productocomboFindUniqueOrThrowArgs<ExtArgs>>): Prisma__productocomboClient<$Result.GetResult<Prisma.$productocomboPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productocombo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productocomboFindFirstArgs} args - Arguments to find a Productocombo
     * @example
     * // Get one Productocombo
     * const productocombo = await prisma.productocombo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends productocomboFindFirstArgs>(args?: SelectSubset<T, productocomboFindFirstArgs<ExtArgs>>): Prisma__productocomboClient<$Result.GetResult<Prisma.$productocomboPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productocombo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productocomboFindFirstOrThrowArgs} args - Arguments to find a Productocombo
     * @example
     * // Get one Productocombo
     * const productocombo = await prisma.productocombo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends productocomboFindFirstOrThrowArgs>(args?: SelectSubset<T, productocomboFindFirstOrThrowArgs<ExtArgs>>): Prisma__productocomboClient<$Result.GetResult<Prisma.$productocomboPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productocombos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productocomboFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productocombos
     * const productocombos = await prisma.productocombo.findMany()
     * 
     * // Get first 10 Productocombos
     * const productocombos = await prisma.productocombo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productocomboWithIdOnly = await prisma.productocombo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends productocomboFindManyArgs>(args?: SelectSubset<T, productocomboFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productocomboPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Productocombo.
     * @param {productocomboCreateArgs} args - Arguments to create a Productocombo.
     * @example
     * // Create one Productocombo
     * const Productocombo = await prisma.productocombo.create({
     *   data: {
     *     // ... data to create a Productocombo
     *   }
     * })
     * 
     */
    create<T extends productocomboCreateArgs>(args: SelectSubset<T, productocomboCreateArgs<ExtArgs>>): Prisma__productocomboClient<$Result.GetResult<Prisma.$productocomboPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productocombos.
     * @param {productocomboCreateManyArgs} args - Arguments to create many Productocombos.
     * @example
     * // Create many Productocombos
     * const productocombo = await prisma.productocombo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends productocomboCreateManyArgs>(args?: SelectSubset<T, productocomboCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Productocombos and returns the data saved in the database.
     * @param {productocomboCreateManyAndReturnArgs} args - Arguments to create many Productocombos.
     * @example
     * // Create many Productocombos
     * const productocombo = await prisma.productocombo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Productocombos and only return the `id`
     * const productocomboWithIdOnly = await prisma.productocombo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends productocomboCreateManyAndReturnArgs>(args?: SelectSubset<T, productocomboCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productocomboPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Productocombo.
     * @param {productocomboDeleteArgs} args - Arguments to delete one Productocombo.
     * @example
     * // Delete one Productocombo
     * const Productocombo = await prisma.productocombo.delete({
     *   where: {
     *     // ... filter to delete one Productocombo
     *   }
     * })
     * 
     */
    delete<T extends productocomboDeleteArgs>(args: SelectSubset<T, productocomboDeleteArgs<ExtArgs>>): Prisma__productocomboClient<$Result.GetResult<Prisma.$productocomboPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Productocombo.
     * @param {productocomboUpdateArgs} args - Arguments to update one Productocombo.
     * @example
     * // Update one Productocombo
     * const productocombo = await prisma.productocombo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends productocomboUpdateArgs>(args: SelectSubset<T, productocomboUpdateArgs<ExtArgs>>): Prisma__productocomboClient<$Result.GetResult<Prisma.$productocomboPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productocombos.
     * @param {productocomboDeleteManyArgs} args - Arguments to filter Productocombos to delete.
     * @example
     * // Delete a few Productocombos
     * const { count } = await prisma.productocombo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends productocomboDeleteManyArgs>(args?: SelectSubset<T, productocomboDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productocombos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productocomboUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productocombos
     * const productocombo = await prisma.productocombo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends productocomboUpdateManyArgs>(args: SelectSubset<T, productocomboUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productocombos and returns the data updated in the database.
     * @param {productocomboUpdateManyAndReturnArgs} args - Arguments to update many Productocombos.
     * @example
     * // Update many Productocombos
     * const productocombo = await prisma.productocombo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Productocombos and only return the `id`
     * const productocomboWithIdOnly = await prisma.productocombo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends productocomboUpdateManyAndReturnArgs>(args: SelectSubset<T, productocomboUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productocomboPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Productocombo.
     * @param {productocomboUpsertArgs} args - Arguments to update or create a Productocombo.
     * @example
     * // Update or create a Productocombo
     * const productocombo = await prisma.productocombo.upsert({
     *   create: {
     *     // ... data to create a Productocombo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Productocombo we want to update
     *   }
     * })
     */
    upsert<T extends productocomboUpsertArgs>(args: SelectSubset<T, productocomboUpsertArgs<ExtArgs>>): Prisma__productocomboClient<$Result.GetResult<Prisma.$productocomboPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Productocombos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productocomboCountArgs} args - Arguments to filter Productocombos to count.
     * @example
     * // Count the number of Productocombos
     * const count = await prisma.productocombo.count({
     *   where: {
     *     // ... the filter for the Productocombos we want to count
     *   }
     * })
    **/
    count<T extends productocomboCountArgs>(
      args?: Subset<T, productocomboCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductocomboCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Productocombo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductocomboAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductocomboAggregateArgs>(args: Subset<T, ProductocomboAggregateArgs>): Prisma.PrismaPromise<GetProductocomboAggregateType<T>>

    /**
     * Group by Productocombo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productocomboGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends productocomboGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: productocomboGroupByArgs['orderBy'] }
        : { orderBy?: productocomboGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, productocomboGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductocomboGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the productocombo model
   */
  readonly fields: productocomboFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for productocombo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__productocomboClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto_productocombo_combo_idToproducto<T extends productocombo$producto_productocombo_combo_idToproductoArgs<ExtArgs> = {}>(args?: Subset<T, productocombo$producto_productocombo_combo_idToproductoArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    producto_productocombo_producto_idToproducto<T extends productocombo$producto_productocombo_producto_idToproductoArgs<ExtArgs> = {}>(args?: Subset<T, productocombo$producto_productocombo_producto_idToproductoArgs<ExtArgs>>): Prisma__productoClient<$Result.GetResult<Prisma.$productoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the productocombo model
   */
  interface productocomboFieldRefs {
    readonly id: FieldRef<"productocombo", 'Int'>
    readonly combo_id: FieldRef<"productocombo", 'Int'>
    readonly producto_id: FieldRef<"productocombo", 'Int'>
    readonly cantidad: FieldRef<"productocombo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * productocombo findUnique
   */
  export type productocomboFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productocombo
     */
    select?: productocomboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productocombo
     */
    omit?: productocomboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productocomboInclude<ExtArgs> | null
    /**
     * Filter, which productocombo to fetch.
     */
    where: productocomboWhereUniqueInput
  }

  /**
   * productocombo findUniqueOrThrow
   */
  export type productocomboFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productocombo
     */
    select?: productocomboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productocombo
     */
    omit?: productocomboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productocomboInclude<ExtArgs> | null
    /**
     * Filter, which productocombo to fetch.
     */
    where: productocomboWhereUniqueInput
  }

  /**
   * productocombo findFirst
   */
  export type productocomboFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productocombo
     */
    select?: productocomboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productocombo
     */
    omit?: productocomboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productocomboInclude<ExtArgs> | null
    /**
     * Filter, which productocombo to fetch.
     */
    where?: productocomboWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productocombos to fetch.
     */
    orderBy?: productocomboOrderByWithRelationInput | productocomboOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productocombos.
     */
    cursor?: productocomboWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productocombos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productocombos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productocombos.
     */
    distinct?: ProductocomboScalarFieldEnum | ProductocomboScalarFieldEnum[]
  }

  /**
   * productocombo findFirstOrThrow
   */
  export type productocomboFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productocombo
     */
    select?: productocomboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productocombo
     */
    omit?: productocomboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productocomboInclude<ExtArgs> | null
    /**
     * Filter, which productocombo to fetch.
     */
    where?: productocomboWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productocombos to fetch.
     */
    orderBy?: productocomboOrderByWithRelationInput | productocomboOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productocombos.
     */
    cursor?: productocomboWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productocombos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productocombos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productocombos.
     */
    distinct?: ProductocomboScalarFieldEnum | ProductocomboScalarFieldEnum[]
  }

  /**
   * productocombo findMany
   */
  export type productocomboFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productocombo
     */
    select?: productocomboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productocombo
     */
    omit?: productocomboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productocomboInclude<ExtArgs> | null
    /**
     * Filter, which productocombos to fetch.
     */
    where?: productocomboWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productocombos to fetch.
     */
    orderBy?: productocomboOrderByWithRelationInput | productocomboOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing productocombos.
     */
    cursor?: productocomboWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productocombos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productocombos.
     */
    skip?: number
    distinct?: ProductocomboScalarFieldEnum | ProductocomboScalarFieldEnum[]
  }

  /**
   * productocombo create
   */
  export type productocomboCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productocombo
     */
    select?: productocomboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productocombo
     */
    omit?: productocomboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productocomboInclude<ExtArgs> | null
    /**
     * The data needed to create a productocombo.
     */
    data: XOR<productocomboCreateInput, productocomboUncheckedCreateInput>
  }

  /**
   * productocombo createMany
   */
  export type productocomboCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many productocombos.
     */
    data: productocomboCreateManyInput | productocomboCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * productocombo createManyAndReturn
   */
  export type productocomboCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productocombo
     */
    select?: productocomboSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the productocombo
     */
    omit?: productocomboOmit<ExtArgs> | null
    /**
     * The data used to create many productocombos.
     */
    data: productocomboCreateManyInput | productocomboCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productocomboIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * productocombo update
   */
  export type productocomboUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productocombo
     */
    select?: productocomboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productocombo
     */
    omit?: productocomboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productocomboInclude<ExtArgs> | null
    /**
     * The data needed to update a productocombo.
     */
    data: XOR<productocomboUpdateInput, productocomboUncheckedUpdateInput>
    /**
     * Choose, which productocombo to update.
     */
    where: productocomboWhereUniqueInput
  }

  /**
   * productocombo updateMany
   */
  export type productocomboUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update productocombos.
     */
    data: XOR<productocomboUpdateManyMutationInput, productocomboUncheckedUpdateManyInput>
    /**
     * Filter which productocombos to update
     */
    where?: productocomboWhereInput
    /**
     * Limit how many productocombos to update.
     */
    limit?: number
  }

  /**
   * productocombo updateManyAndReturn
   */
  export type productocomboUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productocombo
     */
    select?: productocomboSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the productocombo
     */
    omit?: productocomboOmit<ExtArgs> | null
    /**
     * The data used to update productocombos.
     */
    data: XOR<productocomboUpdateManyMutationInput, productocomboUncheckedUpdateManyInput>
    /**
     * Filter which productocombos to update
     */
    where?: productocomboWhereInput
    /**
     * Limit how many productocombos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productocomboIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * productocombo upsert
   */
  export type productocomboUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productocombo
     */
    select?: productocomboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productocombo
     */
    omit?: productocomboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productocomboInclude<ExtArgs> | null
    /**
     * The filter to search for the productocombo to update in case it exists.
     */
    where: productocomboWhereUniqueInput
    /**
     * In case the productocombo found by the `where` argument doesn't exist, create a new productocombo with this data.
     */
    create: XOR<productocomboCreateInput, productocomboUncheckedCreateInput>
    /**
     * In case the productocombo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<productocomboUpdateInput, productocomboUncheckedUpdateInput>
  }

  /**
   * productocombo delete
   */
  export type productocomboDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productocombo
     */
    select?: productocomboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productocombo
     */
    omit?: productocomboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productocomboInclude<ExtArgs> | null
    /**
     * Filter which productocombo to delete.
     */
    where: productocomboWhereUniqueInput
  }

  /**
   * productocombo deleteMany
   */
  export type productocomboDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productocombos to delete
     */
    where?: productocomboWhereInput
    /**
     * Limit how many productocombos to delete.
     */
    limit?: number
  }

  /**
   * productocombo.producto_productocombo_combo_idToproducto
   */
  export type productocombo$producto_productocombo_combo_idToproductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    where?: productoWhereInput
  }

  /**
   * productocombo.producto_productocombo_producto_idToproducto
   */
  export type productocombo$producto_productocombo_producto_idToproductoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the producto
     */
    select?: productoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the producto
     */
    omit?: productoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoInclude<ExtArgs> | null
    where?: productoWhereInput
  }

  /**
   * productocombo without action
   */
  export type productocomboDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productocombo
     */
    select?: productocomboSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productocombo
     */
    omit?: productocomboOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productocomboInclude<ExtArgs> | null
  }


  /**
   * Model productoterminado
   */

  export type AggregateProductoterminado = {
    _count: ProductoterminadoCountAggregateOutputType | null
    _avg: ProductoterminadoAvgAggregateOutputType | null
    _sum: ProductoterminadoSumAggregateOutputType | null
    _min: ProductoterminadoMinAggregateOutputType | null
    _max: ProductoterminadoMaxAggregateOutputType | null
  }

  export type ProductoterminadoAvgAggregateOutputType = {
    id: number | null
    orden_id: number | null
    lote_id: number | null
    cantidad: number | null
  }

  export type ProductoterminadoSumAggregateOutputType = {
    id: number | null
    orden_id: number | null
    lote_id: number | null
    cantidad: number | null
  }

  export type ProductoterminadoMinAggregateOutputType = {
    id: number | null
    orden_id: number | null
    lote_id: number | null
    cantidad: number | null
  }

  export type ProductoterminadoMaxAggregateOutputType = {
    id: number | null
    orden_id: number | null
    lote_id: number | null
    cantidad: number | null
  }

  export type ProductoterminadoCountAggregateOutputType = {
    id: number
    orden_id: number
    lote_id: number
    cantidad: number
    _all: number
  }


  export type ProductoterminadoAvgAggregateInputType = {
    id?: true
    orden_id?: true
    lote_id?: true
    cantidad?: true
  }

  export type ProductoterminadoSumAggregateInputType = {
    id?: true
    orden_id?: true
    lote_id?: true
    cantidad?: true
  }

  export type ProductoterminadoMinAggregateInputType = {
    id?: true
    orden_id?: true
    lote_id?: true
    cantidad?: true
  }

  export type ProductoterminadoMaxAggregateInputType = {
    id?: true
    orden_id?: true
    lote_id?: true
    cantidad?: true
  }

  export type ProductoterminadoCountAggregateInputType = {
    id?: true
    orden_id?: true
    lote_id?: true
    cantidad?: true
    _all?: true
  }

  export type ProductoterminadoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productoterminado to aggregate.
     */
    where?: productoterminadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productoterminados to fetch.
     */
    orderBy?: productoterminadoOrderByWithRelationInput | productoterminadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: productoterminadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productoterminados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productoterminados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned productoterminados
    **/
    _count?: true | ProductoterminadoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductoterminadoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductoterminadoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductoterminadoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductoterminadoMaxAggregateInputType
  }

  export type GetProductoterminadoAggregateType<T extends ProductoterminadoAggregateArgs> = {
        [P in keyof T & keyof AggregateProductoterminado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductoterminado[P]>
      : GetScalarType<T[P], AggregateProductoterminado[P]>
  }




  export type productoterminadoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productoterminadoWhereInput
    orderBy?: productoterminadoOrderByWithAggregationInput | productoterminadoOrderByWithAggregationInput[]
    by: ProductoterminadoScalarFieldEnum[] | ProductoterminadoScalarFieldEnum
    having?: productoterminadoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductoterminadoCountAggregateInputType | true
    _avg?: ProductoterminadoAvgAggregateInputType
    _sum?: ProductoterminadoSumAggregateInputType
    _min?: ProductoterminadoMinAggregateInputType
    _max?: ProductoterminadoMaxAggregateInputType
  }

  export type ProductoterminadoGroupByOutputType = {
    id: number
    orden_id: number | null
    lote_id: number | null
    cantidad: number
    _count: ProductoterminadoCountAggregateOutputType | null
    _avg: ProductoterminadoAvgAggregateOutputType | null
    _sum: ProductoterminadoSumAggregateOutputType | null
    _min: ProductoterminadoMinAggregateOutputType | null
    _max: ProductoterminadoMaxAggregateOutputType | null
  }

  type GetProductoterminadoGroupByPayload<T extends productoterminadoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductoterminadoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductoterminadoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductoterminadoGroupByOutputType[P]>
            : GetScalarType<T[P], ProductoterminadoGroupByOutputType[P]>
        }
      >
    >


  export type productoterminadoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orden_id?: boolean
    lote_id?: boolean
    cantidad?: boolean
    lote?: boolean | productoterminado$loteArgs<ExtArgs>
    ordenproduccion?: boolean | productoterminado$ordenproduccionArgs<ExtArgs>
  }, ExtArgs["result"]["productoterminado"]>

  export type productoterminadoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orden_id?: boolean
    lote_id?: boolean
    cantidad?: boolean
    lote?: boolean | productoterminado$loteArgs<ExtArgs>
    ordenproduccion?: boolean | productoterminado$ordenproduccionArgs<ExtArgs>
  }, ExtArgs["result"]["productoterminado"]>

  export type productoterminadoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orden_id?: boolean
    lote_id?: boolean
    cantidad?: boolean
    lote?: boolean | productoterminado$loteArgs<ExtArgs>
    ordenproduccion?: boolean | productoterminado$ordenproduccionArgs<ExtArgs>
  }, ExtArgs["result"]["productoterminado"]>

  export type productoterminadoSelectScalar = {
    id?: boolean
    orden_id?: boolean
    lote_id?: boolean
    cantidad?: boolean
  }

  export type productoterminadoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orden_id" | "lote_id" | "cantidad", ExtArgs["result"]["productoterminado"]>
  export type productoterminadoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lote?: boolean | productoterminado$loteArgs<ExtArgs>
    ordenproduccion?: boolean | productoterminado$ordenproduccionArgs<ExtArgs>
  }
  export type productoterminadoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lote?: boolean | productoterminado$loteArgs<ExtArgs>
    ordenproduccion?: boolean | productoterminado$ordenproduccionArgs<ExtArgs>
  }
  export type productoterminadoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lote?: boolean | productoterminado$loteArgs<ExtArgs>
    ordenproduccion?: boolean | productoterminado$ordenproduccionArgs<ExtArgs>
  }

  export type $productoterminadoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "productoterminado"
    objects: {
      lote: Prisma.$lotePayload<ExtArgs> | null
      ordenproduccion: Prisma.$ordenproduccionPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      orden_id: number | null
      lote_id: number | null
      cantidad: number
    }, ExtArgs["result"]["productoterminado"]>
    composites: {}
  }

  type productoterminadoGetPayload<S extends boolean | null | undefined | productoterminadoDefaultArgs> = $Result.GetResult<Prisma.$productoterminadoPayload, S>

  type productoterminadoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<productoterminadoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductoterminadoCountAggregateInputType | true
    }

  export interface productoterminadoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['productoterminado'], meta: { name: 'productoterminado' } }
    /**
     * Find zero or one Productoterminado that matches the filter.
     * @param {productoterminadoFindUniqueArgs} args - Arguments to find a Productoterminado
     * @example
     * // Get one Productoterminado
     * const productoterminado = await prisma.productoterminado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends productoterminadoFindUniqueArgs>(args: SelectSubset<T, productoterminadoFindUniqueArgs<ExtArgs>>): Prisma__productoterminadoClient<$Result.GetResult<Prisma.$productoterminadoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Productoterminado that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {productoterminadoFindUniqueOrThrowArgs} args - Arguments to find a Productoterminado
     * @example
     * // Get one Productoterminado
     * const productoterminado = await prisma.productoterminado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends productoterminadoFindUniqueOrThrowArgs>(args: SelectSubset<T, productoterminadoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__productoterminadoClient<$Result.GetResult<Prisma.$productoterminadoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productoterminado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productoterminadoFindFirstArgs} args - Arguments to find a Productoterminado
     * @example
     * // Get one Productoterminado
     * const productoterminado = await prisma.productoterminado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends productoterminadoFindFirstArgs>(args?: SelectSubset<T, productoterminadoFindFirstArgs<ExtArgs>>): Prisma__productoterminadoClient<$Result.GetResult<Prisma.$productoterminadoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productoterminado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productoterminadoFindFirstOrThrowArgs} args - Arguments to find a Productoterminado
     * @example
     * // Get one Productoterminado
     * const productoterminado = await prisma.productoterminado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends productoterminadoFindFirstOrThrowArgs>(args?: SelectSubset<T, productoterminadoFindFirstOrThrowArgs<ExtArgs>>): Prisma__productoterminadoClient<$Result.GetResult<Prisma.$productoterminadoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productoterminados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productoterminadoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productoterminados
     * const productoterminados = await prisma.productoterminado.findMany()
     * 
     * // Get first 10 Productoterminados
     * const productoterminados = await prisma.productoterminado.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productoterminadoWithIdOnly = await prisma.productoterminado.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends productoterminadoFindManyArgs>(args?: SelectSubset<T, productoterminadoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productoterminadoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Productoterminado.
     * @param {productoterminadoCreateArgs} args - Arguments to create a Productoterminado.
     * @example
     * // Create one Productoterminado
     * const Productoterminado = await prisma.productoterminado.create({
     *   data: {
     *     // ... data to create a Productoterminado
     *   }
     * })
     * 
     */
    create<T extends productoterminadoCreateArgs>(args: SelectSubset<T, productoterminadoCreateArgs<ExtArgs>>): Prisma__productoterminadoClient<$Result.GetResult<Prisma.$productoterminadoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productoterminados.
     * @param {productoterminadoCreateManyArgs} args - Arguments to create many Productoterminados.
     * @example
     * // Create many Productoterminados
     * const productoterminado = await prisma.productoterminado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends productoterminadoCreateManyArgs>(args?: SelectSubset<T, productoterminadoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Productoterminados and returns the data saved in the database.
     * @param {productoterminadoCreateManyAndReturnArgs} args - Arguments to create many Productoterminados.
     * @example
     * // Create many Productoterminados
     * const productoterminado = await prisma.productoterminado.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Productoterminados and only return the `id`
     * const productoterminadoWithIdOnly = await prisma.productoterminado.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends productoterminadoCreateManyAndReturnArgs>(args?: SelectSubset<T, productoterminadoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productoterminadoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Productoterminado.
     * @param {productoterminadoDeleteArgs} args - Arguments to delete one Productoterminado.
     * @example
     * // Delete one Productoterminado
     * const Productoterminado = await prisma.productoterminado.delete({
     *   where: {
     *     // ... filter to delete one Productoterminado
     *   }
     * })
     * 
     */
    delete<T extends productoterminadoDeleteArgs>(args: SelectSubset<T, productoterminadoDeleteArgs<ExtArgs>>): Prisma__productoterminadoClient<$Result.GetResult<Prisma.$productoterminadoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Productoterminado.
     * @param {productoterminadoUpdateArgs} args - Arguments to update one Productoterminado.
     * @example
     * // Update one Productoterminado
     * const productoterminado = await prisma.productoterminado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends productoterminadoUpdateArgs>(args: SelectSubset<T, productoterminadoUpdateArgs<ExtArgs>>): Prisma__productoterminadoClient<$Result.GetResult<Prisma.$productoterminadoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productoterminados.
     * @param {productoterminadoDeleteManyArgs} args - Arguments to filter Productoterminados to delete.
     * @example
     * // Delete a few Productoterminados
     * const { count } = await prisma.productoterminado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends productoterminadoDeleteManyArgs>(args?: SelectSubset<T, productoterminadoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productoterminados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productoterminadoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productoterminados
     * const productoterminado = await prisma.productoterminado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends productoterminadoUpdateManyArgs>(args: SelectSubset<T, productoterminadoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productoterminados and returns the data updated in the database.
     * @param {productoterminadoUpdateManyAndReturnArgs} args - Arguments to update many Productoterminados.
     * @example
     * // Update many Productoterminados
     * const productoterminado = await prisma.productoterminado.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Productoterminados and only return the `id`
     * const productoterminadoWithIdOnly = await prisma.productoterminado.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends productoterminadoUpdateManyAndReturnArgs>(args: SelectSubset<T, productoterminadoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productoterminadoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Productoterminado.
     * @param {productoterminadoUpsertArgs} args - Arguments to update or create a Productoterminado.
     * @example
     * // Update or create a Productoterminado
     * const productoterminado = await prisma.productoterminado.upsert({
     *   create: {
     *     // ... data to create a Productoterminado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Productoterminado we want to update
     *   }
     * })
     */
    upsert<T extends productoterminadoUpsertArgs>(args: SelectSubset<T, productoterminadoUpsertArgs<ExtArgs>>): Prisma__productoterminadoClient<$Result.GetResult<Prisma.$productoterminadoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Productoterminados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productoterminadoCountArgs} args - Arguments to filter Productoterminados to count.
     * @example
     * // Count the number of Productoterminados
     * const count = await prisma.productoterminado.count({
     *   where: {
     *     // ... the filter for the Productoterminados we want to count
     *   }
     * })
    **/
    count<T extends productoterminadoCountArgs>(
      args?: Subset<T, productoterminadoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductoterminadoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Productoterminado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoterminadoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductoterminadoAggregateArgs>(args: Subset<T, ProductoterminadoAggregateArgs>): Prisma.PrismaPromise<GetProductoterminadoAggregateType<T>>

    /**
     * Group by Productoterminado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productoterminadoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends productoterminadoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: productoterminadoGroupByArgs['orderBy'] }
        : { orderBy?: productoterminadoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, productoterminadoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductoterminadoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the productoterminado model
   */
  readonly fields: productoterminadoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for productoterminado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__productoterminadoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    lote<T extends productoterminado$loteArgs<ExtArgs> = {}>(args?: Subset<T, productoterminado$loteArgs<ExtArgs>>): Prisma__loteClient<$Result.GetResult<Prisma.$lotePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ordenproduccion<T extends productoterminado$ordenproduccionArgs<ExtArgs> = {}>(args?: Subset<T, productoterminado$ordenproduccionArgs<ExtArgs>>): Prisma__ordenproduccionClient<$Result.GetResult<Prisma.$ordenproduccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the productoterminado model
   */
  interface productoterminadoFieldRefs {
    readonly id: FieldRef<"productoterminado", 'Int'>
    readonly orden_id: FieldRef<"productoterminado", 'Int'>
    readonly lote_id: FieldRef<"productoterminado", 'Int'>
    readonly cantidad: FieldRef<"productoterminado", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * productoterminado findUnique
   */
  export type productoterminadoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoterminado
     */
    select?: productoterminadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoterminado
     */
    omit?: productoterminadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoterminadoInclude<ExtArgs> | null
    /**
     * Filter, which productoterminado to fetch.
     */
    where: productoterminadoWhereUniqueInput
  }

  /**
   * productoterminado findUniqueOrThrow
   */
  export type productoterminadoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoterminado
     */
    select?: productoterminadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoterminado
     */
    omit?: productoterminadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoterminadoInclude<ExtArgs> | null
    /**
     * Filter, which productoterminado to fetch.
     */
    where: productoterminadoWhereUniqueInput
  }

  /**
   * productoterminado findFirst
   */
  export type productoterminadoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoterminado
     */
    select?: productoterminadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoterminado
     */
    omit?: productoterminadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoterminadoInclude<ExtArgs> | null
    /**
     * Filter, which productoterminado to fetch.
     */
    where?: productoterminadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productoterminados to fetch.
     */
    orderBy?: productoterminadoOrderByWithRelationInput | productoterminadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productoterminados.
     */
    cursor?: productoterminadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productoterminados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productoterminados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productoterminados.
     */
    distinct?: ProductoterminadoScalarFieldEnum | ProductoterminadoScalarFieldEnum[]
  }

  /**
   * productoterminado findFirstOrThrow
   */
  export type productoterminadoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoterminado
     */
    select?: productoterminadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoterminado
     */
    omit?: productoterminadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoterminadoInclude<ExtArgs> | null
    /**
     * Filter, which productoterminado to fetch.
     */
    where?: productoterminadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productoterminados to fetch.
     */
    orderBy?: productoterminadoOrderByWithRelationInput | productoterminadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productoterminados.
     */
    cursor?: productoterminadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productoterminados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productoterminados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productoterminados.
     */
    distinct?: ProductoterminadoScalarFieldEnum | ProductoterminadoScalarFieldEnum[]
  }

  /**
   * productoterminado findMany
   */
  export type productoterminadoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoterminado
     */
    select?: productoterminadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoterminado
     */
    omit?: productoterminadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoterminadoInclude<ExtArgs> | null
    /**
     * Filter, which productoterminados to fetch.
     */
    where?: productoterminadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productoterminados to fetch.
     */
    orderBy?: productoterminadoOrderByWithRelationInput | productoterminadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing productoterminados.
     */
    cursor?: productoterminadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productoterminados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productoterminados.
     */
    skip?: number
    distinct?: ProductoterminadoScalarFieldEnum | ProductoterminadoScalarFieldEnum[]
  }

  /**
   * productoterminado create
   */
  export type productoterminadoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoterminado
     */
    select?: productoterminadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoterminado
     */
    omit?: productoterminadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoterminadoInclude<ExtArgs> | null
    /**
     * The data needed to create a productoterminado.
     */
    data: XOR<productoterminadoCreateInput, productoterminadoUncheckedCreateInput>
  }

  /**
   * productoterminado createMany
   */
  export type productoterminadoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many productoterminados.
     */
    data: productoterminadoCreateManyInput | productoterminadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * productoterminado createManyAndReturn
   */
  export type productoterminadoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoterminado
     */
    select?: productoterminadoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the productoterminado
     */
    omit?: productoterminadoOmit<ExtArgs> | null
    /**
     * The data used to create many productoterminados.
     */
    data: productoterminadoCreateManyInput | productoterminadoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoterminadoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * productoterminado update
   */
  export type productoterminadoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoterminado
     */
    select?: productoterminadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoterminado
     */
    omit?: productoterminadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoterminadoInclude<ExtArgs> | null
    /**
     * The data needed to update a productoterminado.
     */
    data: XOR<productoterminadoUpdateInput, productoterminadoUncheckedUpdateInput>
    /**
     * Choose, which productoterminado to update.
     */
    where: productoterminadoWhereUniqueInput
  }

  /**
   * productoterminado updateMany
   */
  export type productoterminadoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update productoterminados.
     */
    data: XOR<productoterminadoUpdateManyMutationInput, productoterminadoUncheckedUpdateManyInput>
    /**
     * Filter which productoterminados to update
     */
    where?: productoterminadoWhereInput
    /**
     * Limit how many productoterminados to update.
     */
    limit?: number
  }

  /**
   * productoterminado updateManyAndReturn
   */
  export type productoterminadoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoterminado
     */
    select?: productoterminadoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the productoterminado
     */
    omit?: productoterminadoOmit<ExtArgs> | null
    /**
     * The data used to update productoterminados.
     */
    data: XOR<productoterminadoUpdateManyMutationInput, productoterminadoUncheckedUpdateManyInput>
    /**
     * Filter which productoterminados to update
     */
    where?: productoterminadoWhereInput
    /**
     * Limit how many productoterminados to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoterminadoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * productoterminado upsert
   */
  export type productoterminadoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoterminado
     */
    select?: productoterminadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoterminado
     */
    omit?: productoterminadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoterminadoInclude<ExtArgs> | null
    /**
     * The filter to search for the productoterminado to update in case it exists.
     */
    where: productoterminadoWhereUniqueInput
    /**
     * In case the productoterminado found by the `where` argument doesn't exist, create a new productoterminado with this data.
     */
    create: XOR<productoterminadoCreateInput, productoterminadoUncheckedCreateInput>
    /**
     * In case the productoterminado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<productoterminadoUpdateInput, productoterminadoUncheckedUpdateInput>
  }

  /**
   * productoterminado delete
   */
  export type productoterminadoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoterminado
     */
    select?: productoterminadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoterminado
     */
    omit?: productoterminadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoterminadoInclude<ExtArgs> | null
    /**
     * Filter which productoterminado to delete.
     */
    where: productoterminadoWhereUniqueInput
  }

  /**
   * productoterminado deleteMany
   */
  export type productoterminadoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productoterminados to delete
     */
    where?: productoterminadoWhereInput
    /**
     * Limit how many productoterminados to delete.
     */
    limit?: number
  }

  /**
   * productoterminado.lote
   */
  export type productoterminado$loteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lote
     */
    select?: loteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lote
     */
    omit?: loteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: loteInclude<ExtArgs> | null
    where?: loteWhereInput
  }

  /**
   * productoterminado.ordenproduccion
   */
  export type productoterminado$ordenproduccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordenproduccion
     */
    select?: ordenproduccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordenproduccion
     */
    omit?: ordenproduccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordenproduccionInclude<ExtArgs> | null
    where?: ordenproduccionWhereInput
  }

  /**
   * productoterminado without action
   */
  export type productoterminadoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productoterminado
     */
    select?: productoterminadoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productoterminado
     */
    omit?: productoterminadoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productoterminadoInclude<ExtArgs> | null
  }


  /**
   * Model proveedor
   */

  export type AggregateProveedor = {
    _count: ProveedorCountAggregateOutputType | null
    _avg: ProveedorAvgAggregateOutputType | null
    _sum: ProveedorSumAggregateOutputType | null
    _min: ProveedorMinAggregateOutputType | null
    _max: ProveedorMaxAggregateOutputType | null
  }

  export type ProveedorAvgAggregateOutputType = {
    id: number | null
  }

  export type ProveedorSumAggregateOutputType = {
    id: number | null
  }

  export type ProveedorMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    nit: string | null
    contacto: string | null
    telefono: string | null
    correo: string | null
    direccion: string | null
    tipo: string | null
  }

  export type ProveedorMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    nit: string | null
    contacto: string | null
    telefono: string | null
    correo: string | null
    direccion: string | null
    tipo: string | null
  }

  export type ProveedorCountAggregateOutputType = {
    id: number
    nombre: number
    nit: number
    contacto: number
    telefono: number
    correo: number
    direccion: number
    tipo: number
    _all: number
  }


  export type ProveedorAvgAggregateInputType = {
    id?: true
  }

  export type ProveedorSumAggregateInputType = {
    id?: true
  }

  export type ProveedorMinAggregateInputType = {
    id?: true
    nombre?: true
    nit?: true
    contacto?: true
    telefono?: true
    correo?: true
    direccion?: true
    tipo?: true
  }

  export type ProveedorMaxAggregateInputType = {
    id?: true
    nombre?: true
    nit?: true
    contacto?: true
    telefono?: true
    correo?: true
    direccion?: true
    tipo?: true
  }

  export type ProveedorCountAggregateInputType = {
    id?: true
    nombre?: true
    nit?: true
    contacto?: true
    telefono?: true
    correo?: true
    direccion?: true
    tipo?: true
    _all?: true
  }

  export type ProveedorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proveedor to aggregate.
     */
    where?: proveedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedors to fetch.
     */
    orderBy?: proveedorOrderByWithRelationInput | proveedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: proveedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned proveedors
    **/
    _count?: true | ProveedorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProveedorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProveedorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProveedorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProveedorMaxAggregateInputType
  }

  export type GetProveedorAggregateType<T extends ProveedorAggregateArgs> = {
        [P in keyof T & keyof AggregateProveedor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProveedor[P]>
      : GetScalarType<T[P], AggregateProveedor[P]>
  }




  export type proveedorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proveedorWhereInput
    orderBy?: proveedorOrderByWithAggregationInput | proveedorOrderByWithAggregationInput[]
    by: ProveedorScalarFieldEnum[] | ProveedorScalarFieldEnum
    having?: proveedorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProveedorCountAggregateInputType | true
    _avg?: ProveedorAvgAggregateInputType
    _sum?: ProveedorSumAggregateInputType
    _min?: ProveedorMinAggregateInputType
    _max?: ProveedorMaxAggregateInputType
  }

  export type ProveedorGroupByOutputType = {
    id: number
    nombre: string
    nit: string
    contacto: string | null
    telefono: string | null
    correo: string | null
    direccion: string | null
    tipo: string | null
    _count: ProveedorCountAggregateOutputType | null
    _avg: ProveedorAvgAggregateOutputType | null
    _sum: ProveedorSumAggregateOutputType | null
    _min: ProveedorMinAggregateOutputType | null
    _max: ProveedorMaxAggregateOutputType | null
  }

  type GetProveedorGroupByPayload<T extends proveedorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProveedorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProveedorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProveedorGroupByOutputType[P]>
            : GetScalarType<T[P], ProveedorGroupByOutputType[P]>
        }
      >
    >


  export type proveedorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    nit?: boolean
    contacto?: boolean
    telefono?: boolean
    correo?: boolean
    direccion?: boolean
    tipo?: boolean
    compra?: boolean | proveedor$compraArgs<ExtArgs>
    ordencompra?: boolean | proveedor$ordencompraArgs<ExtArgs>
    _count?: boolean | ProveedorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proveedor"]>

  export type proveedorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    nit?: boolean
    contacto?: boolean
    telefono?: boolean
    correo?: boolean
    direccion?: boolean
    tipo?: boolean
  }, ExtArgs["result"]["proveedor"]>

  export type proveedorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    nit?: boolean
    contacto?: boolean
    telefono?: boolean
    correo?: boolean
    direccion?: boolean
    tipo?: boolean
  }, ExtArgs["result"]["proveedor"]>

  export type proveedorSelectScalar = {
    id?: boolean
    nombre?: boolean
    nit?: boolean
    contacto?: boolean
    telefono?: boolean
    correo?: boolean
    direccion?: boolean
    tipo?: boolean
  }

  export type proveedorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "nit" | "contacto" | "telefono" | "correo" | "direccion" | "tipo", ExtArgs["result"]["proveedor"]>
  export type proveedorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | proveedor$compraArgs<ExtArgs>
    ordencompra?: boolean | proveedor$ordencompraArgs<ExtArgs>
    _count?: boolean | ProveedorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type proveedorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type proveedorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $proveedorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "proveedor"
    objects: {
      compra: Prisma.$compraPayload<ExtArgs>[]
      ordencompra: Prisma.$ordencompraPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      nit: string
      contacto: string | null
      telefono: string | null
      correo: string | null
      direccion: string | null
      tipo: string | null
    }, ExtArgs["result"]["proveedor"]>
    composites: {}
  }

  type proveedorGetPayload<S extends boolean | null | undefined | proveedorDefaultArgs> = $Result.GetResult<Prisma.$proveedorPayload, S>

  type proveedorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<proveedorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProveedorCountAggregateInputType | true
    }

  export interface proveedorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['proveedor'], meta: { name: 'proveedor' } }
    /**
     * Find zero or one Proveedor that matches the filter.
     * @param {proveedorFindUniqueArgs} args - Arguments to find a Proveedor
     * @example
     * // Get one Proveedor
     * const proveedor = await prisma.proveedor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends proveedorFindUniqueArgs>(args: SelectSubset<T, proveedorFindUniqueArgs<ExtArgs>>): Prisma__proveedorClient<$Result.GetResult<Prisma.$proveedorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Proveedor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {proveedorFindUniqueOrThrowArgs} args - Arguments to find a Proveedor
     * @example
     * // Get one Proveedor
     * const proveedor = await prisma.proveedor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends proveedorFindUniqueOrThrowArgs>(args: SelectSubset<T, proveedorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__proveedorClient<$Result.GetResult<Prisma.$proveedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proveedor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedorFindFirstArgs} args - Arguments to find a Proveedor
     * @example
     * // Get one Proveedor
     * const proveedor = await prisma.proveedor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends proveedorFindFirstArgs>(args?: SelectSubset<T, proveedorFindFirstArgs<ExtArgs>>): Prisma__proveedorClient<$Result.GetResult<Prisma.$proveedorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proveedor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedorFindFirstOrThrowArgs} args - Arguments to find a Proveedor
     * @example
     * // Get one Proveedor
     * const proveedor = await prisma.proveedor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends proveedorFindFirstOrThrowArgs>(args?: SelectSubset<T, proveedorFindFirstOrThrowArgs<ExtArgs>>): Prisma__proveedorClient<$Result.GetResult<Prisma.$proveedorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Proveedors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proveedors
     * const proveedors = await prisma.proveedor.findMany()
     * 
     * // Get first 10 Proveedors
     * const proveedors = await prisma.proveedor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const proveedorWithIdOnly = await prisma.proveedor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends proveedorFindManyArgs>(args?: SelectSubset<T, proveedorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proveedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Proveedor.
     * @param {proveedorCreateArgs} args - Arguments to create a Proveedor.
     * @example
     * // Create one Proveedor
     * const Proveedor = await prisma.proveedor.create({
     *   data: {
     *     // ... data to create a Proveedor
     *   }
     * })
     * 
     */
    create<T extends proveedorCreateArgs>(args: SelectSubset<T, proveedorCreateArgs<ExtArgs>>): Prisma__proveedorClient<$Result.GetResult<Prisma.$proveedorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Proveedors.
     * @param {proveedorCreateManyArgs} args - Arguments to create many Proveedors.
     * @example
     * // Create many Proveedors
     * const proveedor = await prisma.proveedor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends proveedorCreateManyArgs>(args?: SelectSubset<T, proveedorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Proveedors and returns the data saved in the database.
     * @param {proveedorCreateManyAndReturnArgs} args - Arguments to create many Proveedors.
     * @example
     * // Create many Proveedors
     * const proveedor = await prisma.proveedor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Proveedors and only return the `id`
     * const proveedorWithIdOnly = await prisma.proveedor.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends proveedorCreateManyAndReturnArgs>(args?: SelectSubset<T, proveedorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proveedorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Proveedor.
     * @param {proveedorDeleteArgs} args - Arguments to delete one Proveedor.
     * @example
     * // Delete one Proveedor
     * const Proveedor = await prisma.proveedor.delete({
     *   where: {
     *     // ... filter to delete one Proveedor
     *   }
     * })
     * 
     */
    delete<T extends proveedorDeleteArgs>(args: SelectSubset<T, proveedorDeleteArgs<ExtArgs>>): Prisma__proveedorClient<$Result.GetResult<Prisma.$proveedorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Proveedor.
     * @param {proveedorUpdateArgs} args - Arguments to update one Proveedor.
     * @example
     * // Update one Proveedor
     * const proveedor = await prisma.proveedor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends proveedorUpdateArgs>(args: SelectSubset<T, proveedorUpdateArgs<ExtArgs>>): Prisma__proveedorClient<$Result.GetResult<Prisma.$proveedorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Proveedors.
     * @param {proveedorDeleteManyArgs} args - Arguments to filter Proveedors to delete.
     * @example
     * // Delete a few Proveedors
     * const { count } = await prisma.proveedor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends proveedorDeleteManyArgs>(args?: SelectSubset<T, proveedorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proveedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proveedors
     * const proveedor = await prisma.proveedor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends proveedorUpdateManyArgs>(args: SelectSubset<T, proveedorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proveedors and returns the data updated in the database.
     * @param {proveedorUpdateManyAndReturnArgs} args - Arguments to update many Proveedors.
     * @example
     * // Update many Proveedors
     * const proveedor = await prisma.proveedor.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Proveedors and only return the `id`
     * const proveedorWithIdOnly = await prisma.proveedor.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends proveedorUpdateManyAndReturnArgs>(args: SelectSubset<T, proveedorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proveedorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Proveedor.
     * @param {proveedorUpsertArgs} args - Arguments to update or create a Proveedor.
     * @example
     * // Update or create a Proveedor
     * const proveedor = await prisma.proveedor.upsert({
     *   create: {
     *     // ... data to create a Proveedor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proveedor we want to update
     *   }
     * })
     */
    upsert<T extends proveedorUpsertArgs>(args: SelectSubset<T, proveedorUpsertArgs<ExtArgs>>): Prisma__proveedorClient<$Result.GetResult<Prisma.$proveedorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Proveedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedorCountArgs} args - Arguments to filter Proveedors to count.
     * @example
     * // Count the number of Proveedors
     * const count = await prisma.proveedor.count({
     *   where: {
     *     // ... the filter for the Proveedors we want to count
     *   }
     * })
    **/
    count<T extends proveedorCountArgs>(
      args?: Subset<T, proveedorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProveedorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proveedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProveedorAggregateArgs>(args: Subset<T, ProveedorAggregateArgs>): Prisma.PrismaPromise<GetProveedorAggregateType<T>>

    /**
     * Group by Proveedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends proveedorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: proveedorGroupByArgs['orderBy'] }
        : { orderBy?: proveedorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, proveedorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProveedorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the proveedor model
   */
  readonly fields: proveedorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for proveedor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__proveedorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    compra<T extends proveedor$compraArgs<ExtArgs> = {}>(args?: Subset<T, proveedor$compraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$compraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ordencompra<T extends proveedor$ordencompraArgs<ExtArgs> = {}>(args?: Subset<T, proveedor$ordencompraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordencompraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the proveedor model
   */
  interface proveedorFieldRefs {
    readonly id: FieldRef<"proveedor", 'Int'>
    readonly nombre: FieldRef<"proveedor", 'String'>
    readonly nit: FieldRef<"proveedor", 'String'>
    readonly contacto: FieldRef<"proveedor", 'String'>
    readonly telefono: FieldRef<"proveedor", 'String'>
    readonly correo: FieldRef<"proveedor", 'String'>
    readonly direccion: FieldRef<"proveedor", 'String'>
    readonly tipo: FieldRef<"proveedor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * proveedor findUnique
   */
  export type proveedorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedor
     */
    select?: proveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedor
     */
    omit?: proveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedorInclude<ExtArgs> | null
    /**
     * Filter, which proveedor to fetch.
     */
    where: proveedorWhereUniqueInput
  }

  /**
   * proveedor findUniqueOrThrow
   */
  export type proveedorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedor
     */
    select?: proveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedor
     */
    omit?: proveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedorInclude<ExtArgs> | null
    /**
     * Filter, which proveedor to fetch.
     */
    where: proveedorWhereUniqueInput
  }

  /**
   * proveedor findFirst
   */
  export type proveedorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedor
     */
    select?: proveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedor
     */
    omit?: proveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedorInclude<ExtArgs> | null
    /**
     * Filter, which proveedor to fetch.
     */
    where?: proveedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedors to fetch.
     */
    orderBy?: proveedorOrderByWithRelationInput | proveedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proveedors.
     */
    cursor?: proveedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proveedors.
     */
    distinct?: ProveedorScalarFieldEnum | ProveedorScalarFieldEnum[]
  }

  /**
   * proveedor findFirstOrThrow
   */
  export type proveedorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedor
     */
    select?: proveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedor
     */
    omit?: proveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedorInclude<ExtArgs> | null
    /**
     * Filter, which proveedor to fetch.
     */
    where?: proveedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedors to fetch.
     */
    orderBy?: proveedorOrderByWithRelationInput | proveedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proveedors.
     */
    cursor?: proveedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proveedors.
     */
    distinct?: ProveedorScalarFieldEnum | ProveedorScalarFieldEnum[]
  }

  /**
   * proveedor findMany
   */
  export type proveedorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedor
     */
    select?: proveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedor
     */
    omit?: proveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedorInclude<ExtArgs> | null
    /**
     * Filter, which proveedors to fetch.
     */
    where?: proveedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedors to fetch.
     */
    orderBy?: proveedorOrderByWithRelationInput | proveedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing proveedors.
     */
    cursor?: proveedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedors.
     */
    skip?: number
    distinct?: ProveedorScalarFieldEnum | ProveedorScalarFieldEnum[]
  }

  /**
   * proveedor create
   */
  export type proveedorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedor
     */
    select?: proveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedor
     */
    omit?: proveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedorInclude<ExtArgs> | null
    /**
     * The data needed to create a proveedor.
     */
    data: XOR<proveedorCreateInput, proveedorUncheckedCreateInput>
  }

  /**
   * proveedor createMany
   */
  export type proveedorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many proveedors.
     */
    data: proveedorCreateManyInput | proveedorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * proveedor createManyAndReturn
   */
  export type proveedorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedor
     */
    select?: proveedorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the proveedor
     */
    omit?: proveedorOmit<ExtArgs> | null
    /**
     * The data used to create many proveedors.
     */
    data: proveedorCreateManyInput | proveedorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * proveedor update
   */
  export type proveedorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedor
     */
    select?: proveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedor
     */
    omit?: proveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedorInclude<ExtArgs> | null
    /**
     * The data needed to update a proveedor.
     */
    data: XOR<proveedorUpdateInput, proveedorUncheckedUpdateInput>
    /**
     * Choose, which proveedor to update.
     */
    where: proveedorWhereUniqueInput
  }

  /**
   * proveedor updateMany
   */
  export type proveedorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update proveedors.
     */
    data: XOR<proveedorUpdateManyMutationInput, proveedorUncheckedUpdateManyInput>
    /**
     * Filter which proveedors to update
     */
    where?: proveedorWhereInput
    /**
     * Limit how many proveedors to update.
     */
    limit?: number
  }

  /**
   * proveedor updateManyAndReturn
   */
  export type proveedorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedor
     */
    select?: proveedorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the proveedor
     */
    omit?: proveedorOmit<ExtArgs> | null
    /**
     * The data used to update proveedors.
     */
    data: XOR<proveedorUpdateManyMutationInput, proveedorUncheckedUpdateManyInput>
    /**
     * Filter which proveedors to update
     */
    where?: proveedorWhereInput
    /**
     * Limit how many proveedors to update.
     */
    limit?: number
  }

  /**
   * proveedor upsert
   */
  export type proveedorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedor
     */
    select?: proveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedor
     */
    omit?: proveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedorInclude<ExtArgs> | null
    /**
     * The filter to search for the proveedor to update in case it exists.
     */
    where: proveedorWhereUniqueInput
    /**
     * In case the proveedor found by the `where` argument doesn't exist, create a new proveedor with this data.
     */
    create: XOR<proveedorCreateInput, proveedorUncheckedCreateInput>
    /**
     * In case the proveedor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<proveedorUpdateInput, proveedorUncheckedUpdateInput>
  }

  /**
   * proveedor delete
   */
  export type proveedorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedor
     */
    select?: proveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedor
     */
    omit?: proveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedorInclude<ExtArgs> | null
    /**
     * Filter which proveedor to delete.
     */
    where: proveedorWhereUniqueInput
  }

  /**
   * proveedor deleteMany
   */
  export type proveedorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proveedors to delete
     */
    where?: proveedorWhereInput
    /**
     * Limit how many proveedors to delete.
     */
    limit?: number
  }

  /**
   * proveedor.compra
   */
  export type proveedor$compraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compra
     */
    select?: compraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compra
     */
    omit?: compraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: compraInclude<ExtArgs> | null
    where?: compraWhereInput
    orderBy?: compraOrderByWithRelationInput | compraOrderByWithRelationInput[]
    cursor?: compraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CompraScalarFieldEnum | CompraScalarFieldEnum[]
  }

  /**
   * proveedor.ordencompra
   */
  export type proveedor$ordencompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ordencompra
     */
    select?: ordencompraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ordencompra
     */
    omit?: ordencompraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordencompraInclude<ExtArgs> | null
    where?: ordencompraWhereInput
    orderBy?: ordencompraOrderByWithRelationInput | ordencompraOrderByWithRelationInput[]
    cursor?: ordencompraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdencompraScalarFieldEnum | OrdencompraScalarFieldEnum[]
  }

  /**
   * proveedor without action
   */
  export type proveedorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedor
     */
    select?: proveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedor
     */
    omit?: proveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedorInclude<ExtArgs> | null
  }


  /**
   * Model rol
   */

  export type AggregateRol = {
    _count: RolCountAggregateOutputType | null
    _avg: RolAvgAggregateOutputType | null
    _sum: RolSumAggregateOutputType | null
    _min: RolMinAggregateOutputType | null
    _max: RolMaxAggregateOutputType | null
  }

  export type RolAvgAggregateOutputType = {
    id: number | null
  }

  export type RolSumAggregateOutputType = {
    id: number | null
  }

  export type RolMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type RolMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type RolCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type RolAvgAggregateInputType = {
    id?: true
  }

  export type RolSumAggregateInputType = {
    id?: true
  }

  export type RolMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type RolMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type RolCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type RolAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which rol to aggregate.
     */
    where?: rolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rols to fetch.
     */
    orderBy?: rolOrderByWithRelationInput | rolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: rolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned rols
    **/
    _count?: true | RolCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolMaxAggregateInputType
  }

  export type GetRolAggregateType<T extends RolAggregateArgs> = {
        [P in keyof T & keyof AggregateRol]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRol[P]>
      : GetScalarType<T[P], AggregateRol[P]>
  }




  export type rolGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolWhereInput
    orderBy?: rolOrderByWithAggregationInput | rolOrderByWithAggregationInput[]
    by: RolScalarFieldEnum[] | RolScalarFieldEnum
    having?: rolScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolCountAggregateInputType | true
    _avg?: RolAvgAggregateInputType
    _sum?: RolSumAggregateInputType
    _min?: RolMinAggregateInputType
    _max?: RolMaxAggregateInputType
  }

  export type RolGroupByOutputType = {
    id: number
    nombre: string
    _count: RolCountAggregateOutputType | null
    _avg: RolAvgAggregateOutputType | null
    _sum: RolSumAggregateOutputType | null
    _min: RolMinAggregateOutputType | null
    _max: RolMaxAggregateOutputType | null
  }

  type GetRolGroupByPayload<T extends rolGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolGroupByOutputType[P]>
            : GetScalarType<T[P], RolGroupByOutputType[P]>
        }
      >
    >


  export type rolSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    permiso?: boolean | rol$permisoArgs<ExtArgs>
    usuario?: boolean | rol$usuarioArgs<ExtArgs>
    _count?: boolean | RolCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rol"]>

  export type rolSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["rol"]>

  export type rolSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["rol"]>

  export type rolSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type rolOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["rol"]>
  export type rolInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permiso?: boolean | rol$permisoArgs<ExtArgs>
    usuario?: boolean | rol$usuarioArgs<ExtArgs>
    _count?: boolean | RolCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type rolIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type rolIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $rolPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "rol"
    objects: {
      permiso: Prisma.$permisoPayload<ExtArgs>[]
      usuario: Prisma.$usuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["rol"]>
    composites: {}
  }

  type rolGetPayload<S extends boolean | null | undefined | rolDefaultArgs> = $Result.GetResult<Prisma.$rolPayload, S>

  type rolCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<rolFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolCountAggregateInputType | true
    }

  export interface rolDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['rol'], meta: { name: 'rol' } }
    /**
     * Find zero or one Rol that matches the filter.
     * @param {rolFindUniqueArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends rolFindUniqueArgs>(args: SelectSubset<T, rolFindUniqueArgs<ExtArgs>>): Prisma__rolClient<$Result.GetResult<Prisma.$rolPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Rol that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {rolFindUniqueOrThrowArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends rolFindUniqueOrThrowArgs>(args: SelectSubset<T, rolFindUniqueOrThrowArgs<ExtArgs>>): Prisma__rolClient<$Result.GetResult<Prisma.$rolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rol that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolFindFirstArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends rolFindFirstArgs>(args?: SelectSubset<T, rolFindFirstArgs<ExtArgs>>): Prisma__rolClient<$Result.GetResult<Prisma.$rolPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rol that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolFindFirstOrThrowArgs} args - Arguments to find a Rol
     * @example
     * // Get one Rol
     * const rol = await prisma.rol.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends rolFindFirstOrThrowArgs>(args?: SelectSubset<T, rolFindFirstOrThrowArgs<ExtArgs>>): Prisma__rolClient<$Result.GetResult<Prisma.$rolPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Rols that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Rols
     * const rols = await prisma.rol.findMany()
     * 
     * // Get first 10 Rols
     * const rols = await prisma.rol.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolWithIdOnly = await prisma.rol.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends rolFindManyArgs>(args?: SelectSubset<T, rolFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Rol.
     * @param {rolCreateArgs} args - Arguments to create a Rol.
     * @example
     * // Create one Rol
     * const Rol = await prisma.rol.create({
     *   data: {
     *     // ... data to create a Rol
     *   }
     * })
     * 
     */
    create<T extends rolCreateArgs>(args: SelectSubset<T, rolCreateArgs<ExtArgs>>): Prisma__rolClient<$Result.GetResult<Prisma.$rolPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Rols.
     * @param {rolCreateManyArgs} args - Arguments to create many Rols.
     * @example
     * // Create many Rols
     * const rol = await prisma.rol.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends rolCreateManyArgs>(args?: SelectSubset<T, rolCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Rols and returns the data saved in the database.
     * @param {rolCreateManyAndReturnArgs} args - Arguments to create many Rols.
     * @example
     * // Create many Rols
     * const rol = await prisma.rol.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Rols and only return the `id`
     * const rolWithIdOnly = await prisma.rol.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends rolCreateManyAndReturnArgs>(args?: SelectSubset<T, rolCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Rol.
     * @param {rolDeleteArgs} args - Arguments to delete one Rol.
     * @example
     * // Delete one Rol
     * const Rol = await prisma.rol.delete({
     *   where: {
     *     // ... filter to delete one Rol
     *   }
     * })
     * 
     */
    delete<T extends rolDeleteArgs>(args: SelectSubset<T, rolDeleteArgs<ExtArgs>>): Prisma__rolClient<$Result.GetResult<Prisma.$rolPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Rol.
     * @param {rolUpdateArgs} args - Arguments to update one Rol.
     * @example
     * // Update one Rol
     * const rol = await prisma.rol.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends rolUpdateArgs>(args: SelectSubset<T, rolUpdateArgs<ExtArgs>>): Prisma__rolClient<$Result.GetResult<Prisma.$rolPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Rols.
     * @param {rolDeleteManyArgs} args - Arguments to filter Rols to delete.
     * @example
     * // Delete a few Rols
     * const { count } = await prisma.rol.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends rolDeleteManyArgs>(args?: SelectSubset<T, rolDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Rols
     * const rol = await prisma.rol.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends rolUpdateManyArgs>(args: SelectSubset<T, rolUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rols and returns the data updated in the database.
     * @param {rolUpdateManyAndReturnArgs} args - Arguments to update many Rols.
     * @example
     * // Update many Rols
     * const rol = await prisma.rol.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Rols and only return the `id`
     * const rolWithIdOnly = await prisma.rol.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends rolUpdateManyAndReturnArgs>(args: SelectSubset<T, rolUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Rol.
     * @param {rolUpsertArgs} args - Arguments to update or create a Rol.
     * @example
     * // Update or create a Rol
     * const rol = await prisma.rol.upsert({
     *   create: {
     *     // ... data to create a Rol
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Rol we want to update
     *   }
     * })
     */
    upsert<T extends rolUpsertArgs>(args: SelectSubset<T, rolUpsertArgs<ExtArgs>>): Prisma__rolClient<$Result.GetResult<Prisma.$rolPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Rols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolCountArgs} args - Arguments to filter Rols to count.
     * @example
     * // Count the number of Rols
     * const count = await prisma.rol.count({
     *   where: {
     *     // ... the filter for the Rols we want to count
     *   }
     * })
    **/
    count<T extends rolCountArgs>(
      args?: Subset<T, rolCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Rol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolAggregateArgs>(args: Subset<T, RolAggregateArgs>): Prisma.PrismaPromise<GetRolAggregateType<T>>

    /**
     * Group by Rol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends rolGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: rolGroupByArgs['orderBy'] }
        : { orderBy?: rolGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, rolGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the rol model
   */
  readonly fields: rolFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for rol.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__rolClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    permiso<T extends rol$permisoArgs<ExtArgs> = {}>(args?: Subset<T, rol$permisoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuario<T extends rol$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, rol$usuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the rol model
   */
  interface rolFieldRefs {
    readonly id: FieldRef<"rol", 'Int'>
    readonly nombre: FieldRef<"rol", 'String'>
  }
    

  // Custom InputTypes
  /**
   * rol findUnique
   */
  export type rolFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol
     */
    select?: rolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol
     */
    omit?: rolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolInclude<ExtArgs> | null
    /**
     * Filter, which rol to fetch.
     */
    where: rolWhereUniqueInput
  }

  /**
   * rol findUniqueOrThrow
   */
  export type rolFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol
     */
    select?: rolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol
     */
    omit?: rolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolInclude<ExtArgs> | null
    /**
     * Filter, which rol to fetch.
     */
    where: rolWhereUniqueInput
  }

  /**
   * rol findFirst
   */
  export type rolFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol
     */
    select?: rolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol
     */
    omit?: rolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolInclude<ExtArgs> | null
    /**
     * Filter, which rol to fetch.
     */
    where?: rolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rols to fetch.
     */
    orderBy?: rolOrderByWithRelationInput | rolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for rols.
     */
    cursor?: rolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of rols.
     */
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * rol findFirstOrThrow
   */
  export type rolFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol
     */
    select?: rolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol
     */
    omit?: rolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolInclude<ExtArgs> | null
    /**
     * Filter, which rol to fetch.
     */
    where?: rolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rols to fetch.
     */
    orderBy?: rolOrderByWithRelationInput | rolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for rols.
     */
    cursor?: rolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of rols.
     */
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * rol findMany
   */
  export type rolFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol
     */
    select?: rolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol
     */
    omit?: rolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolInclude<ExtArgs> | null
    /**
     * Filter, which rols to fetch.
     */
    where?: rolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rols to fetch.
     */
    orderBy?: rolOrderByWithRelationInput | rolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing rols.
     */
    cursor?: rolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rols.
     */
    skip?: number
    distinct?: RolScalarFieldEnum | RolScalarFieldEnum[]
  }

  /**
   * rol create
   */
  export type rolCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol
     */
    select?: rolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol
     */
    omit?: rolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolInclude<ExtArgs> | null
    /**
     * The data needed to create a rol.
     */
    data: XOR<rolCreateInput, rolUncheckedCreateInput>
  }

  /**
   * rol createMany
   */
  export type rolCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many rols.
     */
    data: rolCreateManyInput | rolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * rol createManyAndReturn
   */
  export type rolCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol
     */
    select?: rolSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the rol
     */
    omit?: rolOmit<ExtArgs> | null
    /**
     * The data used to create many rols.
     */
    data: rolCreateManyInput | rolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * rol update
   */
  export type rolUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol
     */
    select?: rolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol
     */
    omit?: rolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolInclude<ExtArgs> | null
    /**
     * The data needed to update a rol.
     */
    data: XOR<rolUpdateInput, rolUncheckedUpdateInput>
    /**
     * Choose, which rol to update.
     */
    where: rolWhereUniqueInput
  }

  /**
   * rol updateMany
   */
  export type rolUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update rols.
     */
    data: XOR<rolUpdateManyMutationInput, rolUncheckedUpdateManyInput>
    /**
     * Filter which rols to update
     */
    where?: rolWhereInput
    /**
     * Limit how many rols to update.
     */
    limit?: number
  }

  /**
   * rol updateManyAndReturn
   */
  export type rolUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol
     */
    select?: rolSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the rol
     */
    omit?: rolOmit<ExtArgs> | null
    /**
     * The data used to update rols.
     */
    data: XOR<rolUpdateManyMutationInput, rolUncheckedUpdateManyInput>
    /**
     * Filter which rols to update
     */
    where?: rolWhereInput
    /**
     * Limit how many rols to update.
     */
    limit?: number
  }

  /**
   * rol upsert
   */
  export type rolUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol
     */
    select?: rolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol
     */
    omit?: rolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolInclude<ExtArgs> | null
    /**
     * The filter to search for the rol to update in case it exists.
     */
    where: rolWhereUniqueInput
    /**
     * In case the rol found by the `where` argument doesn't exist, create a new rol with this data.
     */
    create: XOR<rolCreateInput, rolUncheckedCreateInput>
    /**
     * In case the rol was found with the provided `where` argument, update it with this data.
     */
    update: XOR<rolUpdateInput, rolUncheckedUpdateInput>
  }

  /**
   * rol delete
   */
  export type rolDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol
     */
    select?: rolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol
     */
    omit?: rolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolInclude<ExtArgs> | null
    /**
     * Filter which rol to delete.
     */
    where: rolWhereUniqueInput
  }

  /**
   * rol deleteMany
   */
  export type rolDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which rols to delete
     */
    where?: rolWhereInput
    /**
     * Limit how many rols to delete.
     */
    limit?: number
  }

  /**
   * rol.permiso
   */
  export type rol$permisoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permiso
     */
    select?: permisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permiso
     */
    omit?: permisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permisoInclude<ExtArgs> | null
    where?: permisoWhereInput
    orderBy?: permisoOrderByWithRelationInput | permisoOrderByWithRelationInput[]
    cursor?: permisoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * rol.usuario
   */
  export type rol$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    where?: usuarioWhereInput
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    cursor?: usuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * rol without action
   */
  export type rolDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol
     */
    select?: rolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol
     */
    omit?: rolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolInclude<ExtArgs> | null
  }


  /**
   * Model screen
   */

  export type AggregateScreen = {
    _count: ScreenCountAggregateOutputType | null
    _avg: ScreenAvgAggregateOutputType | null
    _sum: ScreenSumAggregateOutputType | null
    _min: ScreenMinAggregateOutputType | null
    _max: ScreenMaxAggregateOutputType | null
  }

  export type ScreenAvgAggregateOutputType = {
    id: number | null
  }

  export type ScreenSumAggregateOutputType = {
    id: number | null
  }

  export type ScreenMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type ScreenMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type ScreenCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    _all: number
  }


  export type ScreenAvgAggregateInputType = {
    id?: true
  }

  export type ScreenSumAggregateInputType = {
    id?: true
  }

  export type ScreenMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
  }

  export type ScreenMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
  }

  export type ScreenCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    _all?: true
  }

  export type ScreenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which screen to aggregate.
     */
    where?: screenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of screens to fetch.
     */
    orderBy?: screenOrderByWithRelationInput | screenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: screenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` screens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` screens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned screens
    **/
    _count?: true | ScreenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ScreenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ScreenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ScreenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ScreenMaxAggregateInputType
  }

  export type GetScreenAggregateType<T extends ScreenAggregateArgs> = {
        [P in keyof T & keyof AggregateScreen]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateScreen[P]>
      : GetScalarType<T[P], AggregateScreen[P]>
  }




  export type screenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: screenWhereInput
    orderBy?: screenOrderByWithAggregationInput | screenOrderByWithAggregationInput[]
    by: ScreenScalarFieldEnum[] | ScreenScalarFieldEnum
    having?: screenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ScreenCountAggregateInputType | true
    _avg?: ScreenAvgAggregateInputType
    _sum?: ScreenSumAggregateInputType
    _min?: ScreenMinAggregateInputType
    _max?: ScreenMaxAggregateInputType
  }

  export type ScreenGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string | null
    _count: ScreenCountAggregateOutputType | null
    _avg: ScreenAvgAggregateOutputType | null
    _sum: ScreenSumAggregateOutputType | null
    _min: ScreenMinAggregateOutputType | null
    _max: ScreenMaxAggregateOutputType | null
  }

  type GetScreenGroupByPayload<T extends screenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ScreenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ScreenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ScreenGroupByOutputType[P]>
            : GetScalarType<T[P], ScreenGroupByOutputType[P]>
        }
      >
    >


  export type screenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    permiso?: boolean | screen$permisoArgs<ExtArgs>
    _count?: boolean | ScreenCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["screen"]>

  export type screenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["screen"]>

  export type screenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["screen"]>

  export type screenSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
  }

  export type screenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "descripcion", ExtArgs["result"]["screen"]>
  export type screenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permiso?: boolean | screen$permisoArgs<ExtArgs>
    _count?: boolean | ScreenCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type screenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type screenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $screenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "screen"
    objects: {
      permiso: Prisma.$permisoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string | null
    }, ExtArgs["result"]["screen"]>
    composites: {}
  }

  type screenGetPayload<S extends boolean | null | undefined | screenDefaultArgs> = $Result.GetResult<Prisma.$screenPayload, S>

  type screenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<screenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ScreenCountAggregateInputType | true
    }

  export interface screenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['screen'], meta: { name: 'screen' } }
    /**
     * Find zero or one Screen that matches the filter.
     * @param {screenFindUniqueArgs} args - Arguments to find a Screen
     * @example
     * // Get one Screen
     * const screen = await prisma.screen.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends screenFindUniqueArgs>(args: SelectSubset<T, screenFindUniqueArgs<ExtArgs>>): Prisma__screenClient<$Result.GetResult<Prisma.$screenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Screen that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {screenFindUniqueOrThrowArgs} args - Arguments to find a Screen
     * @example
     * // Get one Screen
     * const screen = await prisma.screen.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends screenFindUniqueOrThrowArgs>(args: SelectSubset<T, screenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__screenClient<$Result.GetResult<Prisma.$screenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Screen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {screenFindFirstArgs} args - Arguments to find a Screen
     * @example
     * // Get one Screen
     * const screen = await prisma.screen.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends screenFindFirstArgs>(args?: SelectSubset<T, screenFindFirstArgs<ExtArgs>>): Prisma__screenClient<$Result.GetResult<Prisma.$screenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Screen that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {screenFindFirstOrThrowArgs} args - Arguments to find a Screen
     * @example
     * // Get one Screen
     * const screen = await prisma.screen.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends screenFindFirstOrThrowArgs>(args?: SelectSubset<T, screenFindFirstOrThrowArgs<ExtArgs>>): Prisma__screenClient<$Result.GetResult<Prisma.$screenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Screens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {screenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Screens
     * const screens = await prisma.screen.findMany()
     * 
     * // Get first 10 Screens
     * const screens = await prisma.screen.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const screenWithIdOnly = await prisma.screen.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends screenFindManyArgs>(args?: SelectSubset<T, screenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$screenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Screen.
     * @param {screenCreateArgs} args - Arguments to create a Screen.
     * @example
     * // Create one Screen
     * const Screen = await prisma.screen.create({
     *   data: {
     *     // ... data to create a Screen
     *   }
     * })
     * 
     */
    create<T extends screenCreateArgs>(args: SelectSubset<T, screenCreateArgs<ExtArgs>>): Prisma__screenClient<$Result.GetResult<Prisma.$screenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Screens.
     * @param {screenCreateManyArgs} args - Arguments to create many Screens.
     * @example
     * // Create many Screens
     * const screen = await prisma.screen.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends screenCreateManyArgs>(args?: SelectSubset<T, screenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Screens and returns the data saved in the database.
     * @param {screenCreateManyAndReturnArgs} args - Arguments to create many Screens.
     * @example
     * // Create many Screens
     * const screen = await prisma.screen.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Screens and only return the `id`
     * const screenWithIdOnly = await prisma.screen.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends screenCreateManyAndReturnArgs>(args?: SelectSubset<T, screenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$screenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Screen.
     * @param {screenDeleteArgs} args - Arguments to delete one Screen.
     * @example
     * // Delete one Screen
     * const Screen = await prisma.screen.delete({
     *   where: {
     *     // ... filter to delete one Screen
     *   }
     * })
     * 
     */
    delete<T extends screenDeleteArgs>(args: SelectSubset<T, screenDeleteArgs<ExtArgs>>): Prisma__screenClient<$Result.GetResult<Prisma.$screenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Screen.
     * @param {screenUpdateArgs} args - Arguments to update one Screen.
     * @example
     * // Update one Screen
     * const screen = await prisma.screen.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends screenUpdateArgs>(args: SelectSubset<T, screenUpdateArgs<ExtArgs>>): Prisma__screenClient<$Result.GetResult<Prisma.$screenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Screens.
     * @param {screenDeleteManyArgs} args - Arguments to filter Screens to delete.
     * @example
     * // Delete a few Screens
     * const { count } = await prisma.screen.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends screenDeleteManyArgs>(args?: SelectSubset<T, screenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Screens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {screenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Screens
     * const screen = await prisma.screen.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends screenUpdateManyArgs>(args: SelectSubset<T, screenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Screens and returns the data updated in the database.
     * @param {screenUpdateManyAndReturnArgs} args - Arguments to update many Screens.
     * @example
     * // Update many Screens
     * const screen = await prisma.screen.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Screens and only return the `id`
     * const screenWithIdOnly = await prisma.screen.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends screenUpdateManyAndReturnArgs>(args: SelectSubset<T, screenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$screenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Screen.
     * @param {screenUpsertArgs} args - Arguments to update or create a Screen.
     * @example
     * // Update or create a Screen
     * const screen = await prisma.screen.upsert({
     *   create: {
     *     // ... data to create a Screen
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Screen we want to update
     *   }
     * })
     */
    upsert<T extends screenUpsertArgs>(args: SelectSubset<T, screenUpsertArgs<ExtArgs>>): Prisma__screenClient<$Result.GetResult<Prisma.$screenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Screens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {screenCountArgs} args - Arguments to filter Screens to count.
     * @example
     * // Count the number of Screens
     * const count = await prisma.screen.count({
     *   where: {
     *     // ... the filter for the Screens we want to count
     *   }
     * })
    **/
    count<T extends screenCountArgs>(
      args?: Subset<T, screenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ScreenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Screen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScreenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ScreenAggregateArgs>(args: Subset<T, ScreenAggregateArgs>): Prisma.PrismaPromise<GetScreenAggregateType<T>>

    /**
     * Group by Screen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {screenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends screenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: screenGroupByArgs['orderBy'] }
        : { orderBy?: screenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, screenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetScreenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the screen model
   */
  readonly fields: screenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for screen.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__screenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    permiso<T extends screen$permisoArgs<ExtArgs> = {}>(args?: Subset<T, screen$permisoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permisoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the screen model
   */
  interface screenFieldRefs {
    readonly id: FieldRef<"screen", 'Int'>
    readonly nombre: FieldRef<"screen", 'String'>
    readonly descripcion: FieldRef<"screen", 'String'>
  }
    

  // Custom InputTypes
  /**
   * screen findUnique
   */
  export type screenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the screen
     */
    select?: screenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the screen
     */
    omit?: screenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: screenInclude<ExtArgs> | null
    /**
     * Filter, which screen to fetch.
     */
    where: screenWhereUniqueInput
  }

  /**
   * screen findUniqueOrThrow
   */
  export type screenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the screen
     */
    select?: screenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the screen
     */
    omit?: screenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: screenInclude<ExtArgs> | null
    /**
     * Filter, which screen to fetch.
     */
    where: screenWhereUniqueInput
  }

  /**
   * screen findFirst
   */
  export type screenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the screen
     */
    select?: screenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the screen
     */
    omit?: screenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: screenInclude<ExtArgs> | null
    /**
     * Filter, which screen to fetch.
     */
    where?: screenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of screens to fetch.
     */
    orderBy?: screenOrderByWithRelationInput | screenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for screens.
     */
    cursor?: screenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` screens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` screens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of screens.
     */
    distinct?: ScreenScalarFieldEnum | ScreenScalarFieldEnum[]
  }

  /**
   * screen findFirstOrThrow
   */
  export type screenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the screen
     */
    select?: screenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the screen
     */
    omit?: screenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: screenInclude<ExtArgs> | null
    /**
     * Filter, which screen to fetch.
     */
    where?: screenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of screens to fetch.
     */
    orderBy?: screenOrderByWithRelationInput | screenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for screens.
     */
    cursor?: screenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` screens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` screens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of screens.
     */
    distinct?: ScreenScalarFieldEnum | ScreenScalarFieldEnum[]
  }

  /**
   * screen findMany
   */
  export type screenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the screen
     */
    select?: screenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the screen
     */
    omit?: screenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: screenInclude<ExtArgs> | null
    /**
     * Filter, which screens to fetch.
     */
    where?: screenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of screens to fetch.
     */
    orderBy?: screenOrderByWithRelationInput | screenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing screens.
     */
    cursor?: screenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` screens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` screens.
     */
    skip?: number
    distinct?: ScreenScalarFieldEnum | ScreenScalarFieldEnum[]
  }

  /**
   * screen create
   */
  export type screenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the screen
     */
    select?: screenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the screen
     */
    omit?: screenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: screenInclude<ExtArgs> | null
    /**
     * The data needed to create a screen.
     */
    data: XOR<screenCreateInput, screenUncheckedCreateInput>
  }

  /**
   * screen createMany
   */
  export type screenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many screens.
     */
    data: screenCreateManyInput | screenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * screen createManyAndReturn
   */
  export type screenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the screen
     */
    select?: screenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the screen
     */
    omit?: screenOmit<ExtArgs> | null
    /**
     * The data used to create many screens.
     */
    data: screenCreateManyInput | screenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * screen update
   */
  export type screenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the screen
     */
    select?: screenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the screen
     */
    omit?: screenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: screenInclude<ExtArgs> | null
    /**
     * The data needed to update a screen.
     */
    data: XOR<screenUpdateInput, screenUncheckedUpdateInput>
    /**
     * Choose, which screen to update.
     */
    where: screenWhereUniqueInput
  }

  /**
   * screen updateMany
   */
  export type screenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update screens.
     */
    data: XOR<screenUpdateManyMutationInput, screenUncheckedUpdateManyInput>
    /**
     * Filter which screens to update
     */
    where?: screenWhereInput
    /**
     * Limit how many screens to update.
     */
    limit?: number
  }

  /**
   * screen updateManyAndReturn
   */
  export type screenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the screen
     */
    select?: screenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the screen
     */
    omit?: screenOmit<ExtArgs> | null
    /**
     * The data used to update screens.
     */
    data: XOR<screenUpdateManyMutationInput, screenUncheckedUpdateManyInput>
    /**
     * Filter which screens to update
     */
    where?: screenWhereInput
    /**
     * Limit how many screens to update.
     */
    limit?: number
  }

  /**
   * screen upsert
   */
  export type screenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the screen
     */
    select?: screenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the screen
     */
    omit?: screenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: screenInclude<ExtArgs> | null
    /**
     * The filter to search for the screen to update in case it exists.
     */
    where: screenWhereUniqueInput
    /**
     * In case the screen found by the `where` argument doesn't exist, create a new screen with this data.
     */
    create: XOR<screenCreateInput, screenUncheckedCreateInput>
    /**
     * In case the screen was found with the provided `where` argument, update it with this data.
     */
    update: XOR<screenUpdateInput, screenUncheckedUpdateInput>
  }

  /**
   * screen delete
   */
  export type screenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the screen
     */
    select?: screenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the screen
     */
    omit?: screenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: screenInclude<ExtArgs> | null
    /**
     * Filter which screen to delete.
     */
    where: screenWhereUniqueInput
  }

  /**
   * screen deleteMany
   */
  export type screenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which screens to delete
     */
    where?: screenWhereInput
    /**
     * Limit how many screens to delete.
     */
    limit?: number
  }

  /**
   * screen.permiso
   */
  export type screen$permisoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permiso
     */
    select?: permisoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permiso
     */
    omit?: permisoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permisoInclude<ExtArgs> | null
    where?: permisoWhereInput
    orderBy?: permisoOrderByWithRelationInput | permisoOrderByWithRelationInput[]
    cursor?: permisoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermisoScalarFieldEnum | PermisoScalarFieldEnum[]
  }

  /**
   * screen without action
   */
  export type screenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the screen
     */
    select?: screenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the screen
     */
    omit?: screenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: screenInclude<ExtArgs> | null
  }


  /**
   * Model sucursal
   */

  export type AggregateSucursal = {
    _count: SucursalCountAggregateOutputType | null
    _avg: SucursalAvgAggregateOutputType | null
    _sum: SucursalSumAggregateOutputType | null
    _min: SucursalMinAggregateOutputType | null
    _max: SucursalMaxAggregateOutputType | null
  }

  export type SucursalAvgAggregateOutputType = {
    id: number | null
  }

  export type SucursalSumAggregateOutputType = {
    id: number | null
  }

  export type SucursalMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    direccion: string | null
  }

  export type SucursalMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    direccion: string | null
  }

  export type SucursalCountAggregateOutputType = {
    id: number
    nombre: number
    direccion: number
    _all: number
  }


  export type SucursalAvgAggregateInputType = {
    id?: true
  }

  export type SucursalSumAggregateInputType = {
    id?: true
  }

  export type SucursalMinAggregateInputType = {
    id?: true
    nombre?: true
    direccion?: true
  }

  export type SucursalMaxAggregateInputType = {
    id?: true
    nombre?: true
    direccion?: true
  }

  export type SucursalCountAggregateInputType = {
    id?: true
    nombre?: true
    direccion?: true
    _all?: true
  }

  export type SucursalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sucursal to aggregate.
     */
    where?: sucursalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sucursals to fetch.
     */
    orderBy?: sucursalOrderByWithRelationInput | sucursalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sucursalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sucursals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sucursals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sucursals
    **/
    _count?: true | SucursalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SucursalAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SucursalSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SucursalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SucursalMaxAggregateInputType
  }

  export type GetSucursalAggregateType<T extends SucursalAggregateArgs> = {
        [P in keyof T & keyof AggregateSucursal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSucursal[P]>
      : GetScalarType<T[P], AggregateSucursal[P]>
  }




  export type sucursalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sucursalWhereInput
    orderBy?: sucursalOrderByWithAggregationInput | sucursalOrderByWithAggregationInput[]
    by: SucursalScalarFieldEnum[] | SucursalScalarFieldEnum
    having?: sucursalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SucursalCountAggregateInputType | true
    _avg?: SucursalAvgAggregateInputType
    _sum?: SucursalSumAggregateInputType
    _min?: SucursalMinAggregateInputType
    _max?: SucursalMaxAggregateInputType
  }

  export type SucursalGroupByOutputType = {
    id: number
    nombre: string
    direccion: string | null
    _count: SucursalCountAggregateOutputType | null
    _avg: SucursalAvgAggregateOutputType | null
    _sum: SucursalSumAggregateOutputType | null
    _min: SucursalMinAggregateOutputType | null
    _max: SucursalMaxAggregateOutputType | null
  }

  type GetSucursalGroupByPayload<T extends sucursalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SucursalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SucursalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SucursalGroupByOutputType[P]>
            : GetScalarType<T[P], SucursalGroupByOutputType[P]>
        }
      >
    >


  export type sucursalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    direccion?: boolean
    listaprecio?: boolean | sucursal$listaprecioArgs<ExtArgs>
    _count?: boolean | SucursalCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sucursal"]>

  export type sucursalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    direccion?: boolean
  }, ExtArgs["result"]["sucursal"]>

  export type sucursalSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    direccion?: boolean
  }, ExtArgs["result"]["sucursal"]>

  export type sucursalSelectScalar = {
    id?: boolean
    nombre?: boolean
    direccion?: boolean
  }

  export type sucursalOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "direccion", ExtArgs["result"]["sucursal"]>
  export type sucursalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    listaprecio?: boolean | sucursal$listaprecioArgs<ExtArgs>
    _count?: boolean | SucursalCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type sucursalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type sucursalIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $sucursalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sucursal"
    objects: {
      listaprecio: Prisma.$listaprecioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      direccion: string | null
    }, ExtArgs["result"]["sucursal"]>
    composites: {}
  }

  type sucursalGetPayload<S extends boolean | null | undefined | sucursalDefaultArgs> = $Result.GetResult<Prisma.$sucursalPayload, S>

  type sucursalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sucursalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SucursalCountAggregateInputType | true
    }

  export interface sucursalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sucursal'], meta: { name: 'sucursal' } }
    /**
     * Find zero or one Sucursal that matches the filter.
     * @param {sucursalFindUniqueArgs} args - Arguments to find a Sucursal
     * @example
     * // Get one Sucursal
     * const sucursal = await prisma.sucursal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sucursalFindUniqueArgs>(args: SelectSubset<T, sucursalFindUniqueArgs<ExtArgs>>): Prisma__sucursalClient<$Result.GetResult<Prisma.$sucursalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sucursal that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sucursalFindUniqueOrThrowArgs} args - Arguments to find a Sucursal
     * @example
     * // Get one Sucursal
     * const sucursal = await prisma.sucursal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sucursalFindUniqueOrThrowArgs>(args: SelectSubset<T, sucursalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sucursalClient<$Result.GetResult<Prisma.$sucursalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sucursal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sucursalFindFirstArgs} args - Arguments to find a Sucursal
     * @example
     * // Get one Sucursal
     * const sucursal = await prisma.sucursal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sucursalFindFirstArgs>(args?: SelectSubset<T, sucursalFindFirstArgs<ExtArgs>>): Prisma__sucursalClient<$Result.GetResult<Prisma.$sucursalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sucursal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sucursalFindFirstOrThrowArgs} args - Arguments to find a Sucursal
     * @example
     * // Get one Sucursal
     * const sucursal = await prisma.sucursal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sucursalFindFirstOrThrowArgs>(args?: SelectSubset<T, sucursalFindFirstOrThrowArgs<ExtArgs>>): Prisma__sucursalClient<$Result.GetResult<Prisma.$sucursalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sucursals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sucursalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sucursals
     * const sucursals = await prisma.sucursal.findMany()
     * 
     * // Get first 10 Sucursals
     * const sucursals = await prisma.sucursal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sucursalWithIdOnly = await prisma.sucursal.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sucursalFindManyArgs>(args?: SelectSubset<T, sucursalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sucursalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sucursal.
     * @param {sucursalCreateArgs} args - Arguments to create a Sucursal.
     * @example
     * // Create one Sucursal
     * const Sucursal = await prisma.sucursal.create({
     *   data: {
     *     // ... data to create a Sucursal
     *   }
     * })
     * 
     */
    create<T extends sucursalCreateArgs>(args: SelectSubset<T, sucursalCreateArgs<ExtArgs>>): Prisma__sucursalClient<$Result.GetResult<Prisma.$sucursalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sucursals.
     * @param {sucursalCreateManyArgs} args - Arguments to create many Sucursals.
     * @example
     * // Create many Sucursals
     * const sucursal = await prisma.sucursal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sucursalCreateManyArgs>(args?: SelectSubset<T, sucursalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sucursals and returns the data saved in the database.
     * @param {sucursalCreateManyAndReturnArgs} args - Arguments to create many Sucursals.
     * @example
     * // Create many Sucursals
     * const sucursal = await prisma.sucursal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sucursals and only return the `id`
     * const sucursalWithIdOnly = await prisma.sucursal.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sucursalCreateManyAndReturnArgs>(args?: SelectSubset<T, sucursalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sucursalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sucursal.
     * @param {sucursalDeleteArgs} args - Arguments to delete one Sucursal.
     * @example
     * // Delete one Sucursal
     * const Sucursal = await prisma.sucursal.delete({
     *   where: {
     *     // ... filter to delete one Sucursal
     *   }
     * })
     * 
     */
    delete<T extends sucursalDeleteArgs>(args: SelectSubset<T, sucursalDeleteArgs<ExtArgs>>): Prisma__sucursalClient<$Result.GetResult<Prisma.$sucursalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sucursal.
     * @param {sucursalUpdateArgs} args - Arguments to update one Sucursal.
     * @example
     * // Update one Sucursal
     * const sucursal = await prisma.sucursal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sucursalUpdateArgs>(args: SelectSubset<T, sucursalUpdateArgs<ExtArgs>>): Prisma__sucursalClient<$Result.GetResult<Prisma.$sucursalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sucursals.
     * @param {sucursalDeleteManyArgs} args - Arguments to filter Sucursals to delete.
     * @example
     * // Delete a few Sucursals
     * const { count } = await prisma.sucursal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sucursalDeleteManyArgs>(args?: SelectSubset<T, sucursalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sucursals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sucursalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sucursals
     * const sucursal = await prisma.sucursal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sucursalUpdateManyArgs>(args: SelectSubset<T, sucursalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sucursals and returns the data updated in the database.
     * @param {sucursalUpdateManyAndReturnArgs} args - Arguments to update many Sucursals.
     * @example
     * // Update many Sucursals
     * const sucursal = await prisma.sucursal.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sucursals and only return the `id`
     * const sucursalWithIdOnly = await prisma.sucursal.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends sucursalUpdateManyAndReturnArgs>(args: SelectSubset<T, sucursalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sucursalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sucursal.
     * @param {sucursalUpsertArgs} args - Arguments to update or create a Sucursal.
     * @example
     * // Update or create a Sucursal
     * const sucursal = await prisma.sucursal.upsert({
     *   create: {
     *     // ... data to create a Sucursal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sucursal we want to update
     *   }
     * })
     */
    upsert<T extends sucursalUpsertArgs>(args: SelectSubset<T, sucursalUpsertArgs<ExtArgs>>): Prisma__sucursalClient<$Result.GetResult<Prisma.$sucursalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sucursals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sucursalCountArgs} args - Arguments to filter Sucursals to count.
     * @example
     * // Count the number of Sucursals
     * const count = await prisma.sucursal.count({
     *   where: {
     *     // ... the filter for the Sucursals we want to count
     *   }
     * })
    **/
    count<T extends sucursalCountArgs>(
      args?: Subset<T, sucursalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SucursalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sucursal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SucursalAggregateArgs>(args: Subset<T, SucursalAggregateArgs>): Prisma.PrismaPromise<GetSucursalAggregateType<T>>

    /**
     * Group by Sucursal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sucursalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sucursalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sucursalGroupByArgs['orderBy'] }
        : { orderBy?: sucursalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sucursalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSucursalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sucursal model
   */
  readonly fields: sucursalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sucursal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sucursalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    listaprecio<T extends sucursal$listaprecioArgs<ExtArgs> = {}>(args?: Subset<T, sucursal$listaprecioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$listaprecioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sucursal model
   */
  interface sucursalFieldRefs {
    readonly id: FieldRef<"sucursal", 'Int'>
    readonly nombre: FieldRef<"sucursal", 'String'>
    readonly direccion: FieldRef<"sucursal", 'String'>
  }
    

  // Custom InputTypes
  /**
   * sucursal findUnique
   */
  export type sucursalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sucursal
     */
    select?: sucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sucursal
     */
    omit?: sucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sucursalInclude<ExtArgs> | null
    /**
     * Filter, which sucursal to fetch.
     */
    where: sucursalWhereUniqueInput
  }

  /**
   * sucursal findUniqueOrThrow
   */
  export type sucursalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sucursal
     */
    select?: sucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sucursal
     */
    omit?: sucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sucursalInclude<ExtArgs> | null
    /**
     * Filter, which sucursal to fetch.
     */
    where: sucursalWhereUniqueInput
  }

  /**
   * sucursal findFirst
   */
  export type sucursalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sucursal
     */
    select?: sucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sucursal
     */
    omit?: sucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sucursalInclude<ExtArgs> | null
    /**
     * Filter, which sucursal to fetch.
     */
    where?: sucursalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sucursals to fetch.
     */
    orderBy?: sucursalOrderByWithRelationInput | sucursalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sucursals.
     */
    cursor?: sucursalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sucursals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sucursals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sucursals.
     */
    distinct?: SucursalScalarFieldEnum | SucursalScalarFieldEnum[]
  }

  /**
   * sucursal findFirstOrThrow
   */
  export type sucursalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sucursal
     */
    select?: sucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sucursal
     */
    omit?: sucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sucursalInclude<ExtArgs> | null
    /**
     * Filter, which sucursal to fetch.
     */
    where?: sucursalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sucursals to fetch.
     */
    orderBy?: sucursalOrderByWithRelationInput | sucursalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sucursals.
     */
    cursor?: sucursalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sucursals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sucursals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sucursals.
     */
    distinct?: SucursalScalarFieldEnum | SucursalScalarFieldEnum[]
  }

  /**
   * sucursal findMany
   */
  export type sucursalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sucursal
     */
    select?: sucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sucursal
     */
    omit?: sucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sucursalInclude<ExtArgs> | null
    /**
     * Filter, which sucursals to fetch.
     */
    where?: sucursalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sucursals to fetch.
     */
    orderBy?: sucursalOrderByWithRelationInput | sucursalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sucursals.
     */
    cursor?: sucursalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sucursals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sucursals.
     */
    skip?: number
    distinct?: SucursalScalarFieldEnum | SucursalScalarFieldEnum[]
  }

  /**
   * sucursal create
   */
  export type sucursalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sucursal
     */
    select?: sucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sucursal
     */
    omit?: sucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sucursalInclude<ExtArgs> | null
    /**
     * The data needed to create a sucursal.
     */
    data: XOR<sucursalCreateInput, sucursalUncheckedCreateInput>
  }

  /**
   * sucursal createMany
   */
  export type sucursalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sucursals.
     */
    data: sucursalCreateManyInput | sucursalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sucursal createManyAndReturn
   */
  export type sucursalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sucursal
     */
    select?: sucursalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sucursal
     */
    omit?: sucursalOmit<ExtArgs> | null
    /**
     * The data used to create many sucursals.
     */
    data: sucursalCreateManyInput | sucursalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sucursal update
   */
  export type sucursalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sucursal
     */
    select?: sucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sucursal
     */
    omit?: sucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sucursalInclude<ExtArgs> | null
    /**
     * The data needed to update a sucursal.
     */
    data: XOR<sucursalUpdateInput, sucursalUncheckedUpdateInput>
    /**
     * Choose, which sucursal to update.
     */
    where: sucursalWhereUniqueInput
  }

  /**
   * sucursal updateMany
   */
  export type sucursalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sucursals.
     */
    data: XOR<sucursalUpdateManyMutationInput, sucursalUncheckedUpdateManyInput>
    /**
     * Filter which sucursals to update
     */
    where?: sucursalWhereInput
    /**
     * Limit how many sucursals to update.
     */
    limit?: number
  }

  /**
   * sucursal updateManyAndReturn
   */
  export type sucursalUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sucursal
     */
    select?: sucursalSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sucursal
     */
    omit?: sucursalOmit<ExtArgs> | null
    /**
     * The data used to update sucursals.
     */
    data: XOR<sucursalUpdateManyMutationInput, sucursalUncheckedUpdateManyInput>
    /**
     * Filter which sucursals to update
     */
    where?: sucursalWhereInput
    /**
     * Limit how many sucursals to update.
     */
    limit?: number
  }

  /**
   * sucursal upsert
   */
  export type sucursalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sucursal
     */
    select?: sucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sucursal
     */
    omit?: sucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sucursalInclude<ExtArgs> | null
    /**
     * The filter to search for the sucursal to update in case it exists.
     */
    where: sucursalWhereUniqueInput
    /**
     * In case the sucursal found by the `where` argument doesn't exist, create a new sucursal with this data.
     */
    create: XOR<sucursalCreateInput, sucursalUncheckedCreateInput>
    /**
     * In case the sucursal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sucursalUpdateInput, sucursalUncheckedUpdateInput>
  }

  /**
   * sucursal delete
   */
  export type sucursalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sucursal
     */
    select?: sucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sucursal
     */
    omit?: sucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sucursalInclude<ExtArgs> | null
    /**
     * Filter which sucursal to delete.
     */
    where: sucursalWhereUniqueInput
  }

  /**
   * sucursal deleteMany
   */
  export type sucursalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sucursals to delete
     */
    where?: sucursalWhereInput
    /**
     * Limit how many sucursals to delete.
     */
    limit?: number
  }

  /**
   * sucursal.listaprecio
   */
  export type sucursal$listaprecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioInclude<ExtArgs> | null
    where?: listaprecioWhereInput
    orderBy?: listaprecioOrderByWithRelationInput | listaprecioOrderByWithRelationInput[]
    cursor?: listaprecioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListaprecioScalarFieldEnum | ListaprecioScalarFieldEnum[]
  }

  /**
   * sucursal without action
   */
  export type sucursalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sucursal
     */
    select?: sucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sucursal
     */
    omit?: sucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sucursalInclude<ExtArgs> | null
  }


  /**
   * Model tipocuenta
   */

  export type AggregateTipocuenta = {
    _count: TipocuentaCountAggregateOutputType | null
    _avg: TipocuentaAvgAggregateOutputType | null
    _sum: TipocuentaSumAggregateOutputType | null
    _min: TipocuentaMinAggregateOutputType | null
    _max: TipocuentaMaxAggregateOutputType | null
  }

  export type TipocuentaAvgAggregateOutputType = {
    id: number | null
  }

  export type TipocuentaSumAggregateOutputType = {
    id: number | null
  }

  export type TipocuentaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type TipocuentaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type TipocuentaCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type TipocuentaAvgAggregateInputType = {
    id?: true
  }

  export type TipocuentaSumAggregateInputType = {
    id?: true
  }

  export type TipocuentaMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type TipocuentaMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type TipocuentaCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type TipocuentaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipocuenta to aggregate.
     */
    where?: tipocuentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipocuentas to fetch.
     */
    orderBy?: tipocuentaOrderByWithRelationInput | tipocuentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipocuentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipocuentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipocuentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipocuentas
    **/
    _count?: true | TipocuentaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipocuentaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipocuentaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipocuentaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipocuentaMaxAggregateInputType
  }

  export type GetTipocuentaAggregateType<T extends TipocuentaAggregateArgs> = {
        [P in keyof T & keyof AggregateTipocuenta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipocuenta[P]>
      : GetScalarType<T[P], AggregateTipocuenta[P]>
  }




  export type tipocuentaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipocuentaWhereInput
    orderBy?: tipocuentaOrderByWithAggregationInput | tipocuentaOrderByWithAggregationInput[]
    by: TipocuentaScalarFieldEnum[] | TipocuentaScalarFieldEnum
    having?: tipocuentaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipocuentaCountAggregateInputType | true
    _avg?: TipocuentaAvgAggregateInputType
    _sum?: TipocuentaSumAggregateInputType
    _min?: TipocuentaMinAggregateInputType
    _max?: TipocuentaMaxAggregateInputType
  }

  export type TipocuentaGroupByOutputType = {
    id: number
    nombre: string
    _count: TipocuentaCountAggregateOutputType | null
    _avg: TipocuentaAvgAggregateOutputType | null
    _sum: TipocuentaSumAggregateOutputType | null
    _min: TipocuentaMinAggregateOutputType | null
    _max: TipocuentaMaxAggregateOutputType | null
  }

  type GetTipocuentaGroupByPayload<T extends tipocuentaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipocuentaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipocuentaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipocuentaGroupByOutputType[P]>
            : GetScalarType<T[P], TipocuentaGroupByOutputType[P]>
        }
      >
    >


  export type tipocuentaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    cuentafinanciera?: boolean | tipocuenta$cuentafinancieraArgs<ExtArgs>
    _count?: boolean | TipocuentaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipocuenta"]>

  export type tipocuentaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["tipocuenta"]>

  export type tipocuentaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["tipocuenta"]>

  export type tipocuentaSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type tipocuentaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["tipocuenta"]>
  export type tipocuentaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cuentafinanciera?: boolean | tipocuenta$cuentafinancieraArgs<ExtArgs>
    _count?: boolean | TipocuentaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tipocuentaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type tipocuentaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tipocuentaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipocuenta"
    objects: {
      cuentafinanciera: Prisma.$cuentafinancieraPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["tipocuenta"]>
    composites: {}
  }

  type tipocuentaGetPayload<S extends boolean | null | undefined | tipocuentaDefaultArgs> = $Result.GetResult<Prisma.$tipocuentaPayload, S>

  type tipocuentaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tipocuentaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TipocuentaCountAggregateInputType | true
    }

  export interface tipocuentaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipocuenta'], meta: { name: 'tipocuenta' } }
    /**
     * Find zero or one Tipocuenta that matches the filter.
     * @param {tipocuentaFindUniqueArgs} args - Arguments to find a Tipocuenta
     * @example
     * // Get one Tipocuenta
     * const tipocuenta = await prisma.tipocuenta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tipocuentaFindUniqueArgs>(args: SelectSubset<T, tipocuentaFindUniqueArgs<ExtArgs>>): Prisma__tipocuentaClient<$Result.GetResult<Prisma.$tipocuentaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tipocuenta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tipocuentaFindUniqueOrThrowArgs} args - Arguments to find a Tipocuenta
     * @example
     * // Get one Tipocuenta
     * const tipocuenta = await prisma.tipocuenta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tipocuentaFindUniqueOrThrowArgs>(args: SelectSubset<T, tipocuentaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tipocuentaClient<$Result.GetResult<Prisma.$tipocuentaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipocuenta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipocuentaFindFirstArgs} args - Arguments to find a Tipocuenta
     * @example
     * // Get one Tipocuenta
     * const tipocuenta = await prisma.tipocuenta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tipocuentaFindFirstArgs>(args?: SelectSubset<T, tipocuentaFindFirstArgs<ExtArgs>>): Prisma__tipocuentaClient<$Result.GetResult<Prisma.$tipocuentaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipocuenta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipocuentaFindFirstOrThrowArgs} args - Arguments to find a Tipocuenta
     * @example
     * // Get one Tipocuenta
     * const tipocuenta = await prisma.tipocuenta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tipocuentaFindFirstOrThrowArgs>(args?: SelectSubset<T, tipocuentaFindFirstOrThrowArgs<ExtArgs>>): Prisma__tipocuentaClient<$Result.GetResult<Prisma.$tipocuentaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tipocuentas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipocuentaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipocuentas
     * const tipocuentas = await prisma.tipocuenta.findMany()
     * 
     * // Get first 10 Tipocuentas
     * const tipocuentas = await prisma.tipocuenta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipocuentaWithIdOnly = await prisma.tipocuenta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tipocuentaFindManyArgs>(args?: SelectSubset<T, tipocuentaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipocuentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tipocuenta.
     * @param {tipocuentaCreateArgs} args - Arguments to create a Tipocuenta.
     * @example
     * // Create one Tipocuenta
     * const Tipocuenta = await prisma.tipocuenta.create({
     *   data: {
     *     // ... data to create a Tipocuenta
     *   }
     * })
     * 
     */
    create<T extends tipocuentaCreateArgs>(args: SelectSubset<T, tipocuentaCreateArgs<ExtArgs>>): Prisma__tipocuentaClient<$Result.GetResult<Prisma.$tipocuentaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tipocuentas.
     * @param {tipocuentaCreateManyArgs} args - Arguments to create many Tipocuentas.
     * @example
     * // Create many Tipocuentas
     * const tipocuenta = await prisma.tipocuenta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tipocuentaCreateManyArgs>(args?: SelectSubset<T, tipocuentaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tipocuentas and returns the data saved in the database.
     * @param {tipocuentaCreateManyAndReturnArgs} args - Arguments to create many Tipocuentas.
     * @example
     * // Create many Tipocuentas
     * const tipocuenta = await prisma.tipocuenta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tipocuentas and only return the `id`
     * const tipocuentaWithIdOnly = await prisma.tipocuenta.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tipocuentaCreateManyAndReturnArgs>(args?: SelectSubset<T, tipocuentaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipocuentaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tipocuenta.
     * @param {tipocuentaDeleteArgs} args - Arguments to delete one Tipocuenta.
     * @example
     * // Delete one Tipocuenta
     * const Tipocuenta = await prisma.tipocuenta.delete({
     *   where: {
     *     // ... filter to delete one Tipocuenta
     *   }
     * })
     * 
     */
    delete<T extends tipocuentaDeleteArgs>(args: SelectSubset<T, tipocuentaDeleteArgs<ExtArgs>>): Prisma__tipocuentaClient<$Result.GetResult<Prisma.$tipocuentaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tipocuenta.
     * @param {tipocuentaUpdateArgs} args - Arguments to update one Tipocuenta.
     * @example
     * // Update one Tipocuenta
     * const tipocuenta = await prisma.tipocuenta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tipocuentaUpdateArgs>(args: SelectSubset<T, tipocuentaUpdateArgs<ExtArgs>>): Prisma__tipocuentaClient<$Result.GetResult<Prisma.$tipocuentaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tipocuentas.
     * @param {tipocuentaDeleteManyArgs} args - Arguments to filter Tipocuentas to delete.
     * @example
     * // Delete a few Tipocuentas
     * const { count } = await prisma.tipocuenta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tipocuentaDeleteManyArgs>(args?: SelectSubset<T, tipocuentaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipocuentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipocuentaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipocuentas
     * const tipocuenta = await prisma.tipocuenta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tipocuentaUpdateManyArgs>(args: SelectSubset<T, tipocuentaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipocuentas and returns the data updated in the database.
     * @param {tipocuentaUpdateManyAndReturnArgs} args - Arguments to update many Tipocuentas.
     * @example
     * // Update many Tipocuentas
     * const tipocuenta = await prisma.tipocuenta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tipocuentas and only return the `id`
     * const tipocuentaWithIdOnly = await prisma.tipocuenta.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tipocuentaUpdateManyAndReturnArgs>(args: SelectSubset<T, tipocuentaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipocuentaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tipocuenta.
     * @param {tipocuentaUpsertArgs} args - Arguments to update or create a Tipocuenta.
     * @example
     * // Update or create a Tipocuenta
     * const tipocuenta = await prisma.tipocuenta.upsert({
     *   create: {
     *     // ... data to create a Tipocuenta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipocuenta we want to update
     *   }
     * })
     */
    upsert<T extends tipocuentaUpsertArgs>(args: SelectSubset<T, tipocuentaUpsertArgs<ExtArgs>>): Prisma__tipocuentaClient<$Result.GetResult<Prisma.$tipocuentaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tipocuentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipocuentaCountArgs} args - Arguments to filter Tipocuentas to count.
     * @example
     * // Count the number of Tipocuentas
     * const count = await prisma.tipocuenta.count({
     *   where: {
     *     // ... the filter for the Tipocuentas we want to count
     *   }
     * })
    **/
    count<T extends tipocuentaCountArgs>(
      args?: Subset<T, tipocuentaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipocuentaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipocuenta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipocuentaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipocuentaAggregateArgs>(args: Subset<T, TipocuentaAggregateArgs>): Prisma.PrismaPromise<GetTipocuentaAggregateType<T>>

    /**
     * Group by Tipocuenta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipocuentaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipocuentaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipocuentaGroupByArgs['orderBy'] }
        : { orderBy?: tipocuentaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipocuentaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipocuentaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipocuenta model
   */
  readonly fields: tipocuentaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipocuenta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipocuentaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cuentafinanciera<T extends tipocuenta$cuentafinancieraArgs<ExtArgs> = {}>(args?: Subset<T, tipocuenta$cuentafinancieraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cuentafinancieraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tipocuenta model
   */
  interface tipocuentaFieldRefs {
    readonly id: FieldRef<"tipocuenta", 'Int'>
    readonly nombre: FieldRef<"tipocuenta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tipocuenta findUnique
   */
  export type tipocuentaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipocuenta
     */
    select?: tipocuentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipocuenta
     */
    omit?: tipocuentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipocuentaInclude<ExtArgs> | null
    /**
     * Filter, which tipocuenta to fetch.
     */
    where: tipocuentaWhereUniqueInput
  }

  /**
   * tipocuenta findUniqueOrThrow
   */
  export type tipocuentaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipocuenta
     */
    select?: tipocuentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipocuenta
     */
    omit?: tipocuentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipocuentaInclude<ExtArgs> | null
    /**
     * Filter, which tipocuenta to fetch.
     */
    where: tipocuentaWhereUniqueInput
  }

  /**
   * tipocuenta findFirst
   */
  export type tipocuentaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipocuenta
     */
    select?: tipocuentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipocuenta
     */
    omit?: tipocuentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipocuentaInclude<ExtArgs> | null
    /**
     * Filter, which tipocuenta to fetch.
     */
    where?: tipocuentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipocuentas to fetch.
     */
    orderBy?: tipocuentaOrderByWithRelationInput | tipocuentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipocuentas.
     */
    cursor?: tipocuentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipocuentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipocuentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipocuentas.
     */
    distinct?: TipocuentaScalarFieldEnum | TipocuentaScalarFieldEnum[]
  }

  /**
   * tipocuenta findFirstOrThrow
   */
  export type tipocuentaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipocuenta
     */
    select?: tipocuentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipocuenta
     */
    omit?: tipocuentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipocuentaInclude<ExtArgs> | null
    /**
     * Filter, which tipocuenta to fetch.
     */
    where?: tipocuentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipocuentas to fetch.
     */
    orderBy?: tipocuentaOrderByWithRelationInput | tipocuentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipocuentas.
     */
    cursor?: tipocuentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipocuentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipocuentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipocuentas.
     */
    distinct?: TipocuentaScalarFieldEnum | TipocuentaScalarFieldEnum[]
  }

  /**
   * tipocuenta findMany
   */
  export type tipocuentaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipocuenta
     */
    select?: tipocuentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipocuenta
     */
    omit?: tipocuentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipocuentaInclude<ExtArgs> | null
    /**
     * Filter, which tipocuentas to fetch.
     */
    where?: tipocuentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipocuentas to fetch.
     */
    orderBy?: tipocuentaOrderByWithRelationInput | tipocuentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipocuentas.
     */
    cursor?: tipocuentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipocuentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipocuentas.
     */
    skip?: number
    distinct?: TipocuentaScalarFieldEnum | TipocuentaScalarFieldEnum[]
  }

  /**
   * tipocuenta create
   */
  export type tipocuentaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipocuenta
     */
    select?: tipocuentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipocuenta
     */
    omit?: tipocuentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipocuentaInclude<ExtArgs> | null
    /**
     * The data needed to create a tipocuenta.
     */
    data: XOR<tipocuentaCreateInput, tipocuentaUncheckedCreateInput>
  }

  /**
   * tipocuenta createMany
   */
  export type tipocuentaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipocuentas.
     */
    data: tipocuentaCreateManyInput | tipocuentaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipocuenta createManyAndReturn
   */
  export type tipocuentaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipocuenta
     */
    select?: tipocuentaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipocuenta
     */
    omit?: tipocuentaOmit<ExtArgs> | null
    /**
     * The data used to create many tipocuentas.
     */
    data: tipocuentaCreateManyInput | tipocuentaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipocuenta update
   */
  export type tipocuentaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipocuenta
     */
    select?: tipocuentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipocuenta
     */
    omit?: tipocuentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipocuentaInclude<ExtArgs> | null
    /**
     * The data needed to update a tipocuenta.
     */
    data: XOR<tipocuentaUpdateInput, tipocuentaUncheckedUpdateInput>
    /**
     * Choose, which tipocuenta to update.
     */
    where: tipocuentaWhereUniqueInput
  }

  /**
   * tipocuenta updateMany
   */
  export type tipocuentaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipocuentas.
     */
    data: XOR<tipocuentaUpdateManyMutationInput, tipocuentaUncheckedUpdateManyInput>
    /**
     * Filter which tipocuentas to update
     */
    where?: tipocuentaWhereInput
    /**
     * Limit how many tipocuentas to update.
     */
    limit?: number
  }

  /**
   * tipocuenta updateManyAndReturn
   */
  export type tipocuentaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipocuenta
     */
    select?: tipocuentaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipocuenta
     */
    omit?: tipocuentaOmit<ExtArgs> | null
    /**
     * The data used to update tipocuentas.
     */
    data: XOR<tipocuentaUpdateManyMutationInput, tipocuentaUncheckedUpdateManyInput>
    /**
     * Filter which tipocuentas to update
     */
    where?: tipocuentaWhereInput
    /**
     * Limit how many tipocuentas to update.
     */
    limit?: number
  }

  /**
   * tipocuenta upsert
   */
  export type tipocuentaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipocuenta
     */
    select?: tipocuentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipocuenta
     */
    omit?: tipocuentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipocuentaInclude<ExtArgs> | null
    /**
     * The filter to search for the tipocuenta to update in case it exists.
     */
    where: tipocuentaWhereUniqueInput
    /**
     * In case the tipocuenta found by the `where` argument doesn't exist, create a new tipocuenta with this data.
     */
    create: XOR<tipocuentaCreateInput, tipocuentaUncheckedCreateInput>
    /**
     * In case the tipocuenta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipocuentaUpdateInput, tipocuentaUncheckedUpdateInput>
  }

  /**
   * tipocuenta delete
   */
  export type tipocuentaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipocuenta
     */
    select?: tipocuentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipocuenta
     */
    omit?: tipocuentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipocuentaInclude<ExtArgs> | null
    /**
     * Filter which tipocuenta to delete.
     */
    where: tipocuentaWhereUniqueInput
  }

  /**
   * tipocuenta deleteMany
   */
  export type tipocuentaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipocuentas to delete
     */
    where?: tipocuentaWhereInput
    /**
     * Limit how many tipocuentas to delete.
     */
    limit?: number
  }

  /**
   * tipocuenta.cuentafinanciera
   */
  export type tipocuenta$cuentafinancieraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuentafinanciera
     */
    select?: cuentafinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuentafinanciera
     */
    omit?: cuentafinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cuentafinancieraInclude<ExtArgs> | null
    where?: cuentafinancieraWhereInput
    orderBy?: cuentafinancieraOrderByWithRelationInput | cuentafinancieraOrderByWithRelationInput[]
    cursor?: cuentafinancieraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CuentafinancieraScalarFieldEnum | CuentafinancieraScalarFieldEnum[]
  }

  /**
   * tipocuenta without action
   */
  export type tipocuentaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipocuenta
     */
    select?: tipocuentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipocuenta
     */
    omit?: tipocuentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipocuentaInclude<ExtArgs> | null
  }


  /**
   * Model tipolistaprecio
   */

  export type AggregateTipolistaprecio = {
    _count: TipolistaprecioCountAggregateOutputType | null
    _avg: TipolistaprecioAvgAggregateOutputType | null
    _sum: TipolistaprecioSumAggregateOutputType | null
    _min: TipolistaprecioMinAggregateOutputType | null
    _max: TipolistaprecioMaxAggregateOutputType | null
  }

  export type TipolistaprecioAvgAggregateOutputType = {
    id: number | null
  }

  export type TipolistaprecioSumAggregateOutputType = {
    id: number | null
  }

  export type TipolistaprecioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type TipolistaprecioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type TipolistaprecioCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type TipolistaprecioAvgAggregateInputType = {
    id?: true
  }

  export type TipolistaprecioSumAggregateInputType = {
    id?: true
  }

  export type TipolistaprecioMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type TipolistaprecioMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type TipolistaprecioCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type TipolistaprecioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipolistaprecio to aggregate.
     */
    where?: tipolistaprecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipolistaprecios to fetch.
     */
    orderBy?: tipolistaprecioOrderByWithRelationInput | tipolistaprecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipolistaprecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipolistaprecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipolistaprecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipolistaprecios
    **/
    _count?: true | TipolistaprecioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipolistaprecioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipolistaprecioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipolistaprecioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipolistaprecioMaxAggregateInputType
  }

  export type GetTipolistaprecioAggregateType<T extends TipolistaprecioAggregateArgs> = {
        [P in keyof T & keyof AggregateTipolistaprecio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipolistaprecio[P]>
      : GetScalarType<T[P], AggregateTipolistaprecio[P]>
  }




  export type tipolistaprecioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipolistaprecioWhereInput
    orderBy?: tipolistaprecioOrderByWithAggregationInput | tipolistaprecioOrderByWithAggregationInput[]
    by: TipolistaprecioScalarFieldEnum[] | TipolistaprecioScalarFieldEnum
    having?: tipolistaprecioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipolistaprecioCountAggregateInputType | true
    _avg?: TipolistaprecioAvgAggregateInputType
    _sum?: TipolistaprecioSumAggregateInputType
    _min?: TipolistaprecioMinAggregateInputType
    _max?: TipolistaprecioMaxAggregateInputType
  }

  export type TipolistaprecioGroupByOutputType = {
    id: number
    nombre: string
    _count: TipolistaprecioCountAggregateOutputType | null
    _avg: TipolistaprecioAvgAggregateOutputType | null
    _sum: TipolistaprecioSumAggregateOutputType | null
    _min: TipolistaprecioMinAggregateOutputType | null
    _max: TipolistaprecioMaxAggregateOutputType | null
  }

  type GetTipolistaprecioGroupByPayload<T extends tipolistaprecioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipolistaprecioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipolistaprecioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipolistaprecioGroupByOutputType[P]>
            : GetScalarType<T[P], TipolistaprecioGroupByOutputType[P]>
        }
      >
    >


  export type tipolistaprecioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    detalleventa?: boolean | tipolistaprecio$detalleventaArgs<ExtArgs>
    listaprecio?: boolean | tipolistaprecio$listaprecioArgs<ExtArgs>
    _count?: boolean | TipolistaprecioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipolistaprecio"]>

  export type tipolistaprecioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["tipolistaprecio"]>

  export type tipolistaprecioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["tipolistaprecio"]>

  export type tipolistaprecioSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type tipolistaprecioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["tipolistaprecio"]>
  export type tipolistaprecioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalleventa?: boolean | tipolistaprecio$detalleventaArgs<ExtArgs>
    listaprecio?: boolean | tipolistaprecio$listaprecioArgs<ExtArgs>
    _count?: boolean | TipolistaprecioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tipolistaprecioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type tipolistaprecioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tipolistaprecioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipolistaprecio"
    objects: {
      detalleventa: Prisma.$detalleventaPayload<ExtArgs>[]
      listaprecio: Prisma.$listaprecioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["tipolistaprecio"]>
    composites: {}
  }

  type tipolistaprecioGetPayload<S extends boolean | null | undefined | tipolistaprecioDefaultArgs> = $Result.GetResult<Prisma.$tipolistaprecioPayload, S>

  type tipolistaprecioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tipolistaprecioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TipolistaprecioCountAggregateInputType | true
    }

  export interface tipolistaprecioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipolistaprecio'], meta: { name: 'tipolistaprecio' } }
    /**
     * Find zero or one Tipolistaprecio that matches the filter.
     * @param {tipolistaprecioFindUniqueArgs} args - Arguments to find a Tipolistaprecio
     * @example
     * // Get one Tipolistaprecio
     * const tipolistaprecio = await prisma.tipolistaprecio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tipolistaprecioFindUniqueArgs>(args: SelectSubset<T, tipolistaprecioFindUniqueArgs<ExtArgs>>): Prisma__tipolistaprecioClient<$Result.GetResult<Prisma.$tipolistaprecioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tipolistaprecio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tipolistaprecioFindUniqueOrThrowArgs} args - Arguments to find a Tipolistaprecio
     * @example
     * // Get one Tipolistaprecio
     * const tipolistaprecio = await prisma.tipolistaprecio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tipolistaprecioFindUniqueOrThrowArgs>(args: SelectSubset<T, tipolistaprecioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tipolistaprecioClient<$Result.GetResult<Prisma.$tipolistaprecioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipolistaprecio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipolistaprecioFindFirstArgs} args - Arguments to find a Tipolistaprecio
     * @example
     * // Get one Tipolistaprecio
     * const tipolistaprecio = await prisma.tipolistaprecio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tipolistaprecioFindFirstArgs>(args?: SelectSubset<T, tipolistaprecioFindFirstArgs<ExtArgs>>): Prisma__tipolistaprecioClient<$Result.GetResult<Prisma.$tipolistaprecioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipolistaprecio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipolistaprecioFindFirstOrThrowArgs} args - Arguments to find a Tipolistaprecio
     * @example
     * // Get one Tipolistaprecio
     * const tipolistaprecio = await prisma.tipolistaprecio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tipolistaprecioFindFirstOrThrowArgs>(args?: SelectSubset<T, tipolistaprecioFindFirstOrThrowArgs<ExtArgs>>): Prisma__tipolistaprecioClient<$Result.GetResult<Prisma.$tipolistaprecioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tipolistaprecios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipolistaprecioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipolistaprecios
     * const tipolistaprecios = await prisma.tipolistaprecio.findMany()
     * 
     * // Get first 10 Tipolistaprecios
     * const tipolistaprecios = await prisma.tipolistaprecio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipolistaprecioWithIdOnly = await prisma.tipolistaprecio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tipolistaprecioFindManyArgs>(args?: SelectSubset<T, tipolistaprecioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipolistaprecioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tipolistaprecio.
     * @param {tipolistaprecioCreateArgs} args - Arguments to create a Tipolistaprecio.
     * @example
     * // Create one Tipolistaprecio
     * const Tipolistaprecio = await prisma.tipolistaprecio.create({
     *   data: {
     *     // ... data to create a Tipolistaprecio
     *   }
     * })
     * 
     */
    create<T extends tipolistaprecioCreateArgs>(args: SelectSubset<T, tipolistaprecioCreateArgs<ExtArgs>>): Prisma__tipolistaprecioClient<$Result.GetResult<Prisma.$tipolistaprecioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tipolistaprecios.
     * @param {tipolistaprecioCreateManyArgs} args - Arguments to create many Tipolistaprecios.
     * @example
     * // Create many Tipolistaprecios
     * const tipolistaprecio = await prisma.tipolistaprecio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tipolistaprecioCreateManyArgs>(args?: SelectSubset<T, tipolistaprecioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tipolistaprecios and returns the data saved in the database.
     * @param {tipolistaprecioCreateManyAndReturnArgs} args - Arguments to create many Tipolistaprecios.
     * @example
     * // Create many Tipolistaprecios
     * const tipolistaprecio = await prisma.tipolistaprecio.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tipolistaprecios and only return the `id`
     * const tipolistaprecioWithIdOnly = await prisma.tipolistaprecio.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tipolistaprecioCreateManyAndReturnArgs>(args?: SelectSubset<T, tipolistaprecioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipolistaprecioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tipolistaprecio.
     * @param {tipolistaprecioDeleteArgs} args - Arguments to delete one Tipolistaprecio.
     * @example
     * // Delete one Tipolistaprecio
     * const Tipolistaprecio = await prisma.tipolistaprecio.delete({
     *   where: {
     *     // ... filter to delete one Tipolistaprecio
     *   }
     * })
     * 
     */
    delete<T extends tipolistaprecioDeleteArgs>(args: SelectSubset<T, tipolistaprecioDeleteArgs<ExtArgs>>): Prisma__tipolistaprecioClient<$Result.GetResult<Prisma.$tipolistaprecioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tipolistaprecio.
     * @param {tipolistaprecioUpdateArgs} args - Arguments to update one Tipolistaprecio.
     * @example
     * // Update one Tipolistaprecio
     * const tipolistaprecio = await prisma.tipolistaprecio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tipolistaprecioUpdateArgs>(args: SelectSubset<T, tipolistaprecioUpdateArgs<ExtArgs>>): Prisma__tipolistaprecioClient<$Result.GetResult<Prisma.$tipolistaprecioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tipolistaprecios.
     * @param {tipolistaprecioDeleteManyArgs} args - Arguments to filter Tipolistaprecios to delete.
     * @example
     * // Delete a few Tipolistaprecios
     * const { count } = await prisma.tipolistaprecio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tipolistaprecioDeleteManyArgs>(args?: SelectSubset<T, tipolistaprecioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipolistaprecios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipolistaprecioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipolistaprecios
     * const tipolistaprecio = await prisma.tipolistaprecio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tipolistaprecioUpdateManyArgs>(args: SelectSubset<T, tipolistaprecioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipolistaprecios and returns the data updated in the database.
     * @param {tipolistaprecioUpdateManyAndReturnArgs} args - Arguments to update many Tipolistaprecios.
     * @example
     * // Update many Tipolistaprecios
     * const tipolistaprecio = await prisma.tipolistaprecio.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tipolistaprecios and only return the `id`
     * const tipolistaprecioWithIdOnly = await prisma.tipolistaprecio.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tipolistaprecioUpdateManyAndReturnArgs>(args: SelectSubset<T, tipolistaprecioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipolistaprecioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tipolistaprecio.
     * @param {tipolistaprecioUpsertArgs} args - Arguments to update or create a Tipolistaprecio.
     * @example
     * // Update or create a Tipolistaprecio
     * const tipolistaprecio = await prisma.tipolistaprecio.upsert({
     *   create: {
     *     // ... data to create a Tipolistaprecio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipolistaprecio we want to update
     *   }
     * })
     */
    upsert<T extends tipolistaprecioUpsertArgs>(args: SelectSubset<T, tipolistaprecioUpsertArgs<ExtArgs>>): Prisma__tipolistaprecioClient<$Result.GetResult<Prisma.$tipolistaprecioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tipolistaprecios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipolistaprecioCountArgs} args - Arguments to filter Tipolistaprecios to count.
     * @example
     * // Count the number of Tipolistaprecios
     * const count = await prisma.tipolistaprecio.count({
     *   where: {
     *     // ... the filter for the Tipolistaprecios we want to count
     *   }
     * })
    **/
    count<T extends tipolistaprecioCountArgs>(
      args?: Subset<T, tipolistaprecioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipolistaprecioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipolistaprecio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipolistaprecioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipolistaprecioAggregateArgs>(args: Subset<T, TipolistaprecioAggregateArgs>): Prisma.PrismaPromise<GetTipolistaprecioAggregateType<T>>

    /**
     * Group by Tipolistaprecio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipolistaprecioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipolistaprecioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipolistaprecioGroupByArgs['orderBy'] }
        : { orderBy?: tipolistaprecioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipolistaprecioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipolistaprecioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipolistaprecio model
   */
  readonly fields: tipolistaprecioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipolistaprecio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipolistaprecioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalleventa<T extends tipolistaprecio$detalleventaArgs<ExtArgs> = {}>(args?: Subset<T, tipolistaprecio$detalleventaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    listaprecio<T extends tipolistaprecio$listaprecioArgs<ExtArgs> = {}>(args?: Subset<T, tipolistaprecio$listaprecioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$listaprecioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tipolistaprecio model
   */
  interface tipolistaprecioFieldRefs {
    readonly id: FieldRef<"tipolistaprecio", 'Int'>
    readonly nombre: FieldRef<"tipolistaprecio", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tipolistaprecio findUnique
   */
  export type tipolistaprecioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipolistaprecio
     */
    select?: tipolistaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipolistaprecio
     */
    omit?: tipolistaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipolistaprecioInclude<ExtArgs> | null
    /**
     * Filter, which tipolistaprecio to fetch.
     */
    where: tipolistaprecioWhereUniqueInput
  }

  /**
   * tipolistaprecio findUniqueOrThrow
   */
  export type tipolistaprecioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipolistaprecio
     */
    select?: tipolistaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipolistaprecio
     */
    omit?: tipolistaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipolistaprecioInclude<ExtArgs> | null
    /**
     * Filter, which tipolistaprecio to fetch.
     */
    where: tipolistaprecioWhereUniqueInput
  }

  /**
   * tipolistaprecio findFirst
   */
  export type tipolistaprecioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipolistaprecio
     */
    select?: tipolistaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipolistaprecio
     */
    omit?: tipolistaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipolistaprecioInclude<ExtArgs> | null
    /**
     * Filter, which tipolistaprecio to fetch.
     */
    where?: tipolistaprecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipolistaprecios to fetch.
     */
    orderBy?: tipolistaprecioOrderByWithRelationInput | tipolistaprecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipolistaprecios.
     */
    cursor?: tipolistaprecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipolistaprecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipolistaprecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipolistaprecios.
     */
    distinct?: TipolistaprecioScalarFieldEnum | TipolistaprecioScalarFieldEnum[]
  }

  /**
   * tipolistaprecio findFirstOrThrow
   */
  export type tipolistaprecioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipolistaprecio
     */
    select?: tipolistaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipolistaprecio
     */
    omit?: tipolistaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipolistaprecioInclude<ExtArgs> | null
    /**
     * Filter, which tipolistaprecio to fetch.
     */
    where?: tipolistaprecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipolistaprecios to fetch.
     */
    orderBy?: tipolistaprecioOrderByWithRelationInput | tipolistaprecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipolistaprecios.
     */
    cursor?: tipolistaprecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipolistaprecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipolistaprecios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipolistaprecios.
     */
    distinct?: TipolistaprecioScalarFieldEnum | TipolistaprecioScalarFieldEnum[]
  }

  /**
   * tipolistaprecio findMany
   */
  export type tipolistaprecioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipolistaprecio
     */
    select?: tipolistaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipolistaprecio
     */
    omit?: tipolistaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipolistaprecioInclude<ExtArgs> | null
    /**
     * Filter, which tipolistaprecios to fetch.
     */
    where?: tipolistaprecioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipolistaprecios to fetch.
     */
    orderBy?: tipolistaprecioOrderByWithRelationInput | tipolistaprecioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipolistaprecios.
     */
    cursor?: tipolistaprecioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipolistaprecios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipolistaprecios.
     */
    skip?: number
    distinct?: TipolistaprecioScalarFieldEnum | TipolistaprecioScalarFieldEnum[]
  }

  /**
   * tipolistaprecio create
   */
  export type tipolistaprecioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipolistaprecio
     */
    select?: tipolistaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipolistaprecio
     */
    omit?: tipolistaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipolistaprecioInclude<ExtArgs> | null
    /**
     * The data needed to create a tipolistaprecio.
     */
    data: XOR<tipolistaprecioCreateInput, tipolistaprecioUncheckedCreateInput>
  }

  /**
   * tipolistaprecio createMany
   */
  export type tipolistaprecioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipolistaprecios.
     */
    data: tipolistaprecioCreateManyInput | tipolistaprecioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipolistaprecio createManyAndReturn
   */
  export type tipolistaprecioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipolistaprecio
     */
    select?: tipolistaprecioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipolistaprecio
     */
    omit?: tipolistaprecioOmit<ExtArgs> | null
    /**
     * The data used to create many tipolistaprecios.
     */
    data: tipolistaprecioCreateManyInput | tipolistaprecioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipolistaprecio update
   */
  export type tipolistaprecioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipolistaprecio
     */
    select?: tipolistaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipolistaprecio
     */
    omit?: tipolistaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipolistaprecioInclude<ExtArgs> | null
    /**
     * The data needed to update a tipolistaprecio.
     */
    data: XOR<tipolistaprecioUpdateInput, tipolistaprecioUncheckedUpdateInput>
    /**
     * Choose, which tipolistaprecio to update.
     */
    where: tipolistaprecioWhereUniqueInput
  }

  /**
   * tipolistaprecio updateMany
   */
  export type tipolistaprecioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipolistaprecios.
     */
    data: XOR<tipolistaprecioUpdateManyMutationInput, tipolistaprecioUncheckedUpdateManyInput>
    /**
     * Filter which tipolistaprecios to update
     */
    where?: tipolistaprecioWhereInput
    /**
     * Limit how many tipolistaprecios to update.
     */
    limit?: number
  }

  /**
   * tipolistaprecio updateManyAndReturn
   */
  export type tipolistaprecioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipolistaprecio
     */
    select?: tipolistaprecioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipolistaprecio
     */
    omit?: tipolistaprecioOmit<ExtArgs> | null
    /**
     * The data used to update tipolistaprecios.
     */
    data: XOR<tipolistaprecioUpdateManyMutationInput, tipolistaprecioUncheckedUpdateManyInput>
    /**
     * Filter which tipolistaprecios to update
     */
    where?: tipolistaprecioWhereInput
    /**
     * Limit how many tipolistaprecios to update.
     */
    limit?: number
  }

  /**
   * tipolistaprecio upsert
   */
  export type tipolistaprecioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipolistaprecio
     */
    select?: tipolistaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipolistaprecio
     */
    omit?: tipolistaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipolistaprecioInclude<ExtArgs> | null
    /**
     * The filter to search for the tipolistaprecio to update in case it exists.
     */
    where: tipolistaprecioWhereUniqueInput
    /**
     * In case the tipolistaprecio found by the `where` argument doesn't exist, create a new tipolistaprecio with this data.
     */
    create: XOR<tipolistaprecioCreateInput, tipolistaprecioUncheckedCreateInput>
    /**
     * In case the tipolistaprecio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipolistaprecioUpdateInput, tipolistaprecioUncheckedUpdateInput>
  }

  /**
   * tipolistaprecio delete
   */
  export type tipolistaprecioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipolistaprecio
     */
    select?: tipolistaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipolistaprecio
     */
    omit?: tipolistaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipolistaprecioInclude<ExtArgs> | null
    /**
     * Filter which tipolistaprecio to delete.
     */
    where: tipolistaprecioWhereUniqueInput
  }

  /**
   * tipolistaprecio deleteMany
   */
  export type tipolistaprecioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipolistaprecios to delete
     */
    where?: tipolistaprecioWhereInput
    /**
     * Limit how many tipolistaprecios to delete.
     */
    limit?: number
  }

  /**
   * tipolistaprecio.detalleventa
   */
  export type tipolistaprecio$detalleventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
    where?: detalleventaWhereInput
    orderBy?: detalleventaOrderByWithRelationInput | detalleventaOrderByWithRelationInput[]
    cursor?: detalleventaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleventaScalarFieldEnum | DetalleventaScalarFieldEnum[]
  }

  /**
   * tipolistaprecio.listaprecio
   */
  export type tipolistaprecio$listaprecioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the listaprecio
     */
    select?: listaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the listaprecio
     */
    omit?: listaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: listaprecioInclude<ExtArgs> | null
    where?: listaprecioWhereInput
    orderBy?: listaprecioOrderByWithRelationInput | listaprecioOrderByWithRelationInput[]
    cursor?: listaprecioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListaprecioScalarFieldEnum | ListaprecioScalarFieldEnum[]
  }

  /**
   * tipolistaprecio without action
   */
  export type tipolistaprecioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipolistaprecio
     */
    select?: tipolistaprecioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipolistaprecio
     */
    omit?: tipolistaprecioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipolistaprecioInclude<ExtArgs> | null
  }


  /**
   * Model tipotransaccion
   */

  export type AggregateTipotransaccion = {
    _count: TipotransaccionCountAggregateOutputType | null
    _avg: TipotransaccionAvgAggregateOutputType | null
    _sum: TipotransaccionSumAggregateOutputType | null
    _min: TipotransaccionMinAggregateOutputType | null
    _max: TipotransaccionMaxAggregateOutputType | null
  }

  export type TipotransaccionAvgAggregateOutputType = {
    id: number | null
  }

  export type TipotransaccionSumAggregateOutputType = {
    id: number | null
  }

  export type TipotransaccionMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type TipotransaccionMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type TipotransaccionCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type TipotransaccionAvgAggregateInputType = {
    id?: true
  }

  export type TipotransaccionSumAggregateInputType = {
    id?: true
  }

  export type TipotransaccionMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type TipotransaccionMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type TipotransaccionCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type TipotransaccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipotransaccion to aggregate.
     */
    where?: tipotransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipotransaccions to fetch.
     */
    orderBy?: tipotransaccionOrderByWithRelationInput | tipotransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipotransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipotransaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipotransaccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipotransaccions
    **/
    _count?: true | TipotransaccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipotransaccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipotransaccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipotransaccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipotransaccionMaxAggregateInputType
  }

  export type GetTipotransaccionAggregateType<T extends TipotransaccionAggregateArgs> = {
        [P in keyof T & keyof AggregateTipotransaccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipotransaccion[P]>
      : GetScalarType<T[P], AggregateTipotransaccion[P]>
  }




  export type tipotransaccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipotransaccionWhereInput
    orderBy?: tipotransaccionOrderByWithAggregationInput | tipotransaccionOrderByWithAggregationInput[]
    by: TipotransaccionScalarFieldEnum[] | TipotransaccionScalarFieldEnum
    having?: tipotransaccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipotransaccionCountAggregateInputType | true
    _avg?: TipotransaccionAvgAggregateInputType
    _sum?: TipotransaccionSumAggregateInputType
    _min?: TipotransaccionMinAggregateInputType
    _max?: TipotransaccionMaxAggregateInputType
  }

  export type TipotransaccionGroupByOutputType = {
    id: number
    nombre: string
    _count: TipotransaccionCountAggregateOutputType | null
    _avg: TipotransaccionAvgAggregateOutputType | null
    _sum: TipotransaccionSumAggregateOutputType | null
    _min: TipotransaccionMinAggregateOutputType | null
    _max: TipotransaccionMaxAggregateOutputType | null
  }

  type GetTipotransaccionGroupByPayload<T extends tipotransaccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipotransaccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipotransaccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipotransaccionGroupByOutputType[P]>
            : GetScalarType<T[P], TipotransaccionGroupByOutputType[P]>
        }
      >
    >


  export type tipotransaccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    transaccionfinanciera?: boolean | tipotransaccion$transaccionfinancieraArgs<ExtArgs>
    _count?: boolean | TipotransaccionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipotransaccion"]>

  export type tipotransaccionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["tipotransaccion"]>

  export type tipotransaccionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["tipotransaccion"]>

  export type tipotransaccionSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type tipotransaccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["tipotransaccion"]>
  export type tipotransaccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccionfinanciera?: boolean | tipotransaccion$transaccionfinancieraArgs<ExtArgs>
    _count?: boolean | TipotransaccionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tipotransaccionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type tipotransaccionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tipotransaccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipotransaccion"
    objects: {
      transaccionfinanciera: Prisma.$transaccionfinancieraPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["tipotransaccion"]>
    composites: {}
  }

  type tipotransaccionGetPayload<S extends boolean | null | undefined | tipotransaccionDefaultArgs> = $Result.GetResult<Prisma.$tipotransaccionPayload, S>

  type tipotransaccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tipotransaccionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TipotransaccionCountAggregateInputType | true
    }

  export interface tipotransaccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipotransaccion'], meta: { name: 'tipotransaccion' } }
    /**
     * Find zero or one Tipotransaccion that matches the filter.
     * @param {tipotransaccionFindUniqueArgs} args - Arguments to find a Tipotransaccion
     * @example
     * // Get one Tipotransaccion
     * const tipotransaccion = await prisma.tipotransaccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tipotransaccionFindUniqueArgs>(args: SelectSubset<T, tipotransaccionFindUniqueArgs<ExtArgs>>): Prisma__tipotransaccionClient<$Result.GetResult<Prisma.$tipotransaccionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tipotransaccion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tipotransaccionFindUniqueOrThrowArgs} args - Arguments to find a Tipotransaccion
     * @example
     * // Get one Tipotransaccion
     * const tipotransaccion = await prisma.tipotransaccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tipotransaccionFindUniqueOrThrowArgs>(args: SelectSubset<T, tipotransaccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tipotransaccionClient<$Result.GetResult<Prisma.$tipotransaccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipotransaccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipotransaccionFindFirstArgs} args - Arguments to find a Tipotransaccion
     * @example
     * // Get one Tipotransaccion
     * const tipotransaccion = await prisma.tipotransaccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tipotransaccionFindFirstArgs>(args?: SelectSubset<T, tipotransaccionFindFirstArgs<ExtArgs>>): Prisma__tipotransaccionClient<$Result.GetResult<Prisma.$tipotransaccionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipotransaccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipotransaccionFindFirstOrThrowArgs} args - Arguments to find a Tipotransaccion
     * @example
     * // Get one Tipotransaccion
     * const tipotransaccion = await prisma.tipotransaccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tipotransaccionFindFirstOrThrowArgs>(args?: SelectSubset<T, tipotransaccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__tipotransaccionClient<$Result.GetResult<Prisma.$tipotransaccionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tipotransaccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipotransaccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipotransaccions
     * const tipotransaccions = await prisma.tipotransaccion.findMany()
     * 
     * // Get first 10 Tipotransaccions
     * const tipotransaccions = await prisma.tipotransaccion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipotransaccionWithIdOnly = await prisma.tipotransaccion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tipotransaccionFindManyArgs>(args?: SelectSubset<T, tipotransaccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipotransaccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tipotransaccion.
     * @param {tipotransaccionCreateArgs} args - Arguments to create a Tipotransaccion.
     * @example
     * // Create one Tipotransaccion
     * const Tipotransaccion = await prisma.tipotransaccion.create({
     *   data: {
     *     // ... data to create a Tipotransaccion
     *   }
     * })
     * 
     */
    create<T extends tipotransaccionCreateArgs>(args: SelectSubset<T, tipotransaccionCreateArgs<ExtArgs>>): Prisma__tipotransaccionClient<$Result.GetResult<Prisma.$tipotransaccionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tipotransaccions.
     * @param {tipotransaccionCreateManyArgs} args - Arguments to create many Tipotransaccions.
     * @example
     * // Create many Tipotransaccions
     * const tipotransaccion = await prisma.tipotransaccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tipotransaccionCreateManyArgs>(args?: SelectSubset<T, tipotransaccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tipotransaccions and returns the data saved in the database.
     * @param {tipotransaccionCreateManyAndReturnArgs} args - Arguments to create many Tipotransaccions.
     * @example
     * // Create many Tipotransaccions
     * const tipotransaccion = await prisma.tipotransaccion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tipotransaccions and only return the `id`
     * const tipotransaccionWithIdOnly = await prisma.tipotransaccion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tipotransaccionCreateManyAndReturnArgs>(args?: SelectSubset<T, tipotransaccionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipotransaccionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tipotransaccion.
     * @param {tipotransaccionDeleteArgs} args - Arguments to delete one Tipotransaccion.
     * @example
     * // Delete one Tipotransaccion
     * const Tipotransaccion = await prisma.tipotransaccion.delete({
     *   where: {
     *     // ... filter to delete one Tipotransaccion
     *   }
     * })
     * 
     */
    delete<T extends tipotransaccionDeleteArgs>(args: SelectSubset<T, tipotransaccionDeleteArgs<ExtArgs>>): Prisma__tipotransaccionClient<$Result.GetResult<Prisma.$tipotransaccionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tipotransaccion.
     * @param {tipotransaccionUpdateArgs} args - Arguments to update one Tipotransaccion.
     * @example
     * // Update one Tipotransaccion
     * const tipotransaccion = await prisma.tipotransaccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tipotransaccionUpdateArgs>(args: SelectSubset<T, tipotransaccionUpdateArgs<ExtArgs>>): Prisma__tipotransaccionClient<$Result.GetResult<Prisma.$tipotransaccionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tipotransaccions.
     * @param {tipotransaccionDeleteManyArgs} args - Arguments to filter Tipotransaccions to delete.
     * @example
     * // Delete a few Tipotransaccions
     * const { count } = await prisma.tipotransaccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tipotransaccionDeleteManyArgs>(args?: SelectSubset<T, tipotransaccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipotransaccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipotransaccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipotransaccions
     * const tipotransaccion = await prisma.tipotransaccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tipotransaccionUpdateManyArgs>(args: SelectSubset<T, tipotransaccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipotransaccions and returns the data updated in the database.
     * @param {tipotransaccionUpdateManyAndReturnArgs} args - Arguments to update many Tipotransaccions.
     * @example
     * // Update many Tipotransaccions
     * const tipotransaccion = await prisma.tipotransaccion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tipotransaccions and only return the `id`
     * const tipotransaccionWithIdOnly = await prisma.tipotransaccion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tipotransaccionUpdateManyAndReturnArgs>(args: SelectSubset<T, tipotransaccionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipotransaccionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tipotransaccion.
     * @param {tipotransaccionUpsertArgs} args - Arguments to update or create a Tipotransaccion.
     * @example
     * // Update or create a Tipotransaccion
     * const tipotransaccion = await prisma.tipotransaccion.upsert({
     *   create: {
     *     // ... data to create a Tipotransaccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipotransaccion we want to update
     *   }
     * })
     */
    upsert<T extends tipotransaccionUpsertArgs>(args: SelectSubset<T, tipotransaccionUpsertArgs<ExtArgs>>): Prisma__tipotransaccionClient<$Result.GetResult<Prisma.$tipotransaccionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tipotransaccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipotransaccionCountArgs} args - Arguments to filter Tipotransaccions to count.
     * @example
     * // Count the number of Tipotransaccions
     * const count = await prisma.tipotransaccion.count({
     *   where: {
     *     // ... the filter for the Tipotransaccions we want to count
     *   }
     * })
    **/
    count<T extends tipotransaccionCountArgs>(
      args?: Subset<T, tipotransaccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipotransaccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipotransaccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipotransaccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipotransaccionAggregateArgs>(args: Subset<T, TipotransaccionAggregateArgs>): Prisma.PrismaPromise<GetTipotransaccionAggregateType<T>>

    /**
     * Group by Tipotransaccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipotransaccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipotransaccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipotransaccionGroupByArgs['orderBy'] }
        : { orderBy?: tipotransaccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipotransaccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipotransaccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipotransaccion model
   */
  readonly fields: tipotransaccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipotransaccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipotransaccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transaccionfinanciera<T extends tipotransaccion$transaccionfinancieraArgs<ExtArgs> = {}>(args?: Subset<T, tipotransaccion$transaccionfinancieraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaccionfinancieraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tipotransaccion model
   */
  interface tipotransaccionFieldRefs {
    readonly id: FieldRef<"tipotransaccion", 'Int'>
    readonly nombre: FieldRef<"tipotransaccion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tipotransaccion findUnique
   */
  export type tipotransaccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipotransaccion
     */
    select?: tipotransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipotransaccion
     */
    omit?: tipotransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipotransaccionInclude<ExtArgs> | null
    /**
     * Filter, which tipotransaccion to fetch.
     */
    where: tipotransaccionWhereUniqueInput
  }

  /**
   * tipotransaccion findUniqueOrThrow
   */
  export type tipotransaccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipotransaccion
     */
    select?: tipotransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipotransaccion
     */
    omit?: tipotransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipotransaccionInclude<ExtArgs> | null
    /**
     * Filter, which tipotransaccion to fetch.
     */
    where: tipotransaccionWhereUniqueInput
  }

  /**
   * tipotransaccion findFirst
   */
  export type tipotransaccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipotransaccion
     */
    select?: tipotransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipotransaccion
     */
    omit?: tipotransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipotransaccionInclude<ExtArgs> | null
    /**
     * Filter, which tipotransaccion to fetch.
     */
    where?: tipotransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipotransaccions to fetch.
     */
    orderBy?: tipotransaccionOrderByWithRelationInput | tipotransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipotransaccions.
     */
    cursor?: tipotransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipotransaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipotransaccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipotransaccions.
     */
    distinct?: TipotransaccionScalarFieldEnum | TipotransaccionScalarFieldEnum[]
  }

  /**
   * tipotransaccion findFirstOrThrow
   */
  export type tipotransaccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipotransaccion
     */
    select?: tipotransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipotransaccion
     */
    omit?: tipotransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipotransaccionInclude<ExtArgs> | null
    /**
     * Filter, which tipotransaccion to fetch.
     */
    where?: tipotransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipotransaccions to fetch.
     */
    orderBy?: tipotransaccionOrderByWithRelationInput | tipotransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipotransaccions.
     */
    cursor?: tipotransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipotransaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipotransaccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipotransaccions.
     */
    distinct?: TipotransaccionScalarFieldEnum | TipotransaccionScalarFieldEnum[]
  }

  /**
   * tipotransaccion findMany
   */
  export type tipotransaccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipotransaccion
     */
    select?: tipotransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipotransaccion
     */
    omit?: tipotransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipotransaccionInclude<ExtArgs> | null
    /**
     * Filter, which tipotransaccions to fetch.
     */
    where?: tipotransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipotransaccions to fetch.
     */
    orderBy?: tipotransaccionOrderByWithRelationInput | tipotransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipotransaccions.
     */
    cursor?: tipotransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipotransaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipotransaccions.
     */
    skip?: number
    distinct?: TipotransaccionScalarFieldEnum | TipotransaccionScalarFieldEnum[]
  }

  /**
   * tipotransaccion create
   */
  export type tipotransaccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipotransaccion
     */
    select?: tipotransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipotransaccion
     */
    omit?: tipotransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipotransaccionInclude<ExtArgs> | null
    /**
     * The data needed to create a tipotransaccion.
     */
    data: XOR<tipotransaccionCreateInput, tipotransaccionUncheckedCreateInput>
  }

  /**
   * tipotransaccion createMany
   */
  export type tipotransaccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipotransaccions.
     */
    data: tipotransaccionCreateManyInput | tipotransaccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipotransaccion createManyAndReturn
   */
  export type tipotransaccionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipotransaccion
     */
    select?: tipotransaccionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipotransaccion
     */
    omit?: tipotransaccionOmit<ExtArgs> | null
    /**
     * The data used to create many tipotransaccions.
     */
    data: tipotransaccionCreateManyInput | tipotransaccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipotransaccion update
   */
  export type tipotransaccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipotransaccion
     */
    select?: tipotransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipotransaccion
     */
    omit?: tipotransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipotransaccionInclude<ExtArgs> | null
    /**
     * The data needed to update a tipotransaccion.
     */
    data: XOR<tipotransaccionUpdateInput, tipotransaccionUncheckedUpdateInput>
    /**
     * Choose, which tipotransaccion to update.
     */
    where: tipotransaccionWhereUniqueInput
  }

  /**
   * tipotransaccion updateMany
   */
  export type tipotransaccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipotransaccions.
     */
    data: XOR<tipotransaccionUpdateManyMutationInput, tipotransaccionUncheckedUpdateManyInput>
    /**
     * Filter which tipotransaccions to update
     */
    where?: tipotransaccionWhereInput
    /**
     * Limit how many tipotransaccions to update.
     */
    limit?: number
  }

  /**
   * tipotransaccion updateManyAndReturn
   */
  export type tipotransaccionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipotransaccion
     */
    select?: tipotransaccionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipotransaccion
     */
    omit?: tipotransaccionOmit<ExtArgs> | null
    /**
     * The data used to update tipotransaccions.
     */
    data: XOR<tipotransaccionUpdateManyMutationInput, tipotransaccionUncheckedUpdateManyInput>
    /**
     * Filter which tipotransaccions to update
     */
    where?: tipotransaccionWhereInput
    /**
     * Limit how many tipotransaccions to update.
     */
    limit?: number
  }

  /**
   * tipotransaccion upsert
   */
  export type tipotransaccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipotransaccion
     */
    select?: tipotransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipotransaccion
     */
    omit?: tipotransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipotransaccionInclude<ExtArgs> | null
    /**
     * The filter to search for the tipotransaccion to update in case it exists.
     */
    where: tipotransaccionWhereUniqueInput
    /**
     * In case the tipotransaccion found by the `where` argument doesn't exist, create a new tipotransaccion with this data.
     */
    create: XOR<tipotransaccionCreateInput, tipotransaccionUncheckedCreateInput>
    /**
     * In case the tipotransaccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipotransaccionUpdateInput, tipotransaccionUncheckedUpdateInput>
  }

  /**
   * tipotransaccion delete
   */
  export type tipotransaccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipotransaccion
     */
    select?: tipotransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipotransaccion
     */
    omit?: tipotransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipotransaccionInclude<ExtArgs> | null
    /**
     * Filter which tipotransaccion to delete.
     */
    where: tipotransaccionWhereUniqueInput
  }

  /**
   * tipotransaccion deleteMany
   */
  export type tipotransaccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipotransaccions to delete
     */
    where?: tipotransaccionWhereInput
    /**
     * Limit how many tipotransaccions to delete.
     */
    limit?: number
  }

  /**
   * tipotransaccion.transaccionfinanciera
   */
  export type tipotransaccion$transaccionfinancieraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccionfinanciera
     */
    select?: transaccionfinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccionfinanciera
     */
    omit?: transaccionfinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccionfinancieraInclude<ExtArgs> | null
    where?: transaccionfinancieraWhereInput
    orderBy?: transaccionfinancieraOrderByWithRelationInput | transaccionfinancieraOrderByWithRelationInput[]
    cursor?: transaccionfinancieraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaccionfinancieraScalarFieldEnum | TransaccionfinancieraScalarFieldEnum[]
  }

  /**
   * tipotransaccion without action
   */
  export type tipotransaccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipotransaccion
     */
    select?: tipotransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipotransaccion
     */
    omit?: tipotransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipotransaccionInclude<ExtArgs> | null
  }


  /**
   * Model tipoventa
   */

  export type AggregateTipoventa = {
    _count: TipoventaCountAggregateOutputType | null
    _avg: TipoventaAvgAggregateOutputType | null
    _sum: TipoventaSumAggregateOutputType | null
    _min: TipoventaMinAggregateOutputType | null
    _max: TipoventaMaxAggregateOutputType | null
  }

  export type TipoventaAvgAggregateOutputType = {
    id: number | null
  }

  export type TipoventaSumAggregateOutputType = {
    id: number | null
  }

  export type TipoventaMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type TipoventaMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type TipoventaCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type TipoventaAvgAggregateInputType = {
    id?: true
  }

  export type TipoventaSumAggregateInputType = {
    id?: true
  }

  export type TipoventaMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type TipoventaMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type TipoventaCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type TipoventaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipoventa to aggregate.
     */
    where?: tipoventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoventas to fetch.
     */
    orderBy?: tipoventaOrderByWithRelationInput | tipoventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipoventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipoventas
    **/
    _count?: true | TipoventaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TipoventaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TipoventaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipoventaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipoventaMaxAggregateInputType
  }

  export type GetTipoventaAggregateType<T extends TipoventaAggregateArgs> = {
        [P in keyof T & keyof AggregateTipoventa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipoventa[P]>
      : GetScalarType<T[P], AggregateTipoventa[P]>
  }




  export type tipoventaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipoventaWhereInput
    orderBy?: tipoventaOrderByWithAggregationInput | tipoventaOrderByWithAggregationInput[]
    by: TipoventaScalarFieldEnum[] | TipoventaScalarFieldEnum
    having?: tipoventaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipoventaCountAggregateInputType | true
    _avg?: TipoventaAvgAggregateInputType
    _sum?: TipoventaSumAggregateInputType
    _min?: TipoventaMinAggregateInputType
    _max?: TipoventaMaxAggregateInputType
  }

  export type TipoventaGroupByOutputType = {
    id: number
    nombre: string
    _count: TipoventaCountAggregateOutputType | null
    _avg: TipoventaAvgAggregateOutputType | null
    _sum: TipoventaSumAggregateOutputType | null
    _min: TipoventaMinAggregateOutputType | null
    _max: TipoventaMaxAggregateOutputType | null
  }

  type GetTipoventaGroupByPayload<T extends tipoventaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipoventaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipoventaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipoventaGroupByOutputType[P]>
            : GetScalarType<T[P], TipoventaGroupByOutputType[P]>
        }
      >
    >


  export type tipoventaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    detalleventa?: boolean | tipoventa$detalleventaArgs<ExtArgs>
    _count?: boolean | TipoventaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipoventa"]>

  export type tipoventaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["tipoventa"]>

  export type tipoventaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["tipoventa"]>

  export type tipoventaSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type tipoventaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["tipoventa"]>
  export type tipoventaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalleventa?: boolean | tipoventa$detalleventaArgs<ExtArgs>
    _count?: boolean | TipoventaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tipoventaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type tipoventaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tipoventaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipoventa"
    objects: {
      detalleventa: Prisma.$detalleventaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["tipoventa"]>
    composites: {}
  }

  type tipoventaGetPayload<S extends boolean | null | undefined | tipoventaDefaultArgs> = $Result.GetResult<Prisma.$tipoventaPayload, S>

  type tipoventaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tipoventaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TipoventaCountAggregateInputType | true
    }

  export interface tipoventaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipoventa'], meta: { name: 'tipoventa' } }
    /**
     * Find zero or one Tipoventa that matches the filter.
     * @param {tipoventaFindUniqueArgs} args - Arguments to find a Tipoventa
     * @example
     * // Get one Tipoventa
     * const tipoventa = await prisma.tipoventa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tipoventaFindUniqueArgs>(args: SelectSubset<T, tipoventaFindUniqueArgs<ExtArgs>>): Prisma__tipoventaClient<$Result.GetResult<Prisma.$tipoventaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tipoventa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tipoventaFindUniqueOrThrowArgs} args - Arguments to find a Tipoventa
     * @example
     * // Get one Tipoventa
     * const tipoventa = await prisma.tipoventa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tipoventaFindUniqueOrThrowArgs>(args: SelectSubset<T, tipoventaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tipoventaClient<$Result.GetResult<Prisma.$tipoventaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipoventa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoventaFindFirstArgs} args - Arguments to find a Tipoventa
     * @example
     * // Get one Tipoventa
     * const tipoventa = await prisma.tipoventa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tipoventaFindFirstArgs>(args?: SelectSubset<T, tipoventaFindFirstArgs<ExtArgs>>): Prisma__tipoventaClient<$Result.GetResult<Prisma.$tipoventaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipoventa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoventaFindFirstOrThrowArgs} args - Arguments to find a Tipoventa
     * @example
     * // Get one Tipoventa
     * const tipoventa = await prisma.tipoventa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tipoventaFindFirstOrThrowArgs>(args?: SelectSubset<T, tipoventaFindFirstOrThrowArgs<ExtArgs>>): Prisma__tipoventaClient<$Result.GetResult<Prisma.$tipoventaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tipoventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoventaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipoventas
     * const tipoventas = await prisma.tipoventa.findMany()
     * 
     * // Get first 10 Tipoventas
     * const tipoventas = await prisma.tipoventa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipoventaWithIdOnly = await prisma.tipoventa.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tipoventaFindManyArgs>(args?: SelectSubset<T, tipoventaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipoventaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tipoventa.
     * @param {tipoventaCreateArgs} args - Arguments to create a Tipoventa.
     * @example
     * // Create one Tipoventa
     * const Tipoventa = await prisma.tipoventa.create({
     *   data: {
     *     // ... data to create a Tipoventa
     *   }
     * })
     * 
     */
    create<T extends tipoventaCreateArgs>(args: SelectSubset<T, tipoventaCreateArgs<ExtArgs>>): Prisma__tipoventaClient<$Result.GetResult<Prisma.$tipoventaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tipoventas.
     * @param {tipoventaCreateManyArgs} args - Arguments to create many Tipoventas.
     * @example
     * // Create many Tipoventas
     * const tipoventa = await prisma.tipoventa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tipoventaCreateManyArgs>(args?: SelectSubset<T, tipoventaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tipoventas and returns the data saved in the database.
     * @param {tipoventaCreateManyAndReturnArgs} args - Arguments to create many Tipoventas.
     * @example
     * // Create many Tipoventas
     * const tipoventa = await prisma.tipoventa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tipoventas and only return the `id`
     * const tipoventaWithIdOnly = await prisma.tipoventa.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tipoventaCreateManyAndReturnArgs>(args?: SelectSubset<T, tipoventaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipoventaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tipoventa.
     * @param {tipoventaDeleteArgs} args - Arguments to delete one Tipoventa.
     * @example
     * // Delete one Tipoventa
     * const Tipoventa = await prisma.tipoventa.delete({
     *   where: {
     *     // ... filter to delete one Tipoventa
     *   }
     * })
     * 
     */
    delete<T extends tipoventaDeleteArgs>(args: SelectSubset<T, tipoventaDeleteArgs<ExtArgs>>): Prisma__tipoventaClient<$Result.GetResult<Prisma.$tipoventaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tipoventa.
     * @param {tipoventaUpdateArgs} args - Arguments to update one Tipoventa.
     * @example
     * // Update one Tipoventa
     * const tipoventa = await prisma.tipoventa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tipoventaUpdateArgs>(args: SelectSubset<T, tipoventaUpdateArgs<ExtArgs>>): Prisma__tipoventaClient<$Result.GetResult<Prisma.$tipoventaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tipoventas.
     * @param {tipoventaDeleteManyArgs} args - Arguments to filter Tipoventas to delete.
     * @example
     * // Delete a few Tipoventas
     * const { count } = await prisma.tipoventa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tipoventaDeleteManyArgs>(args?: SelectSubset<T, tipoventaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipoventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoventaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipoventas
     * const tipoventa = await prisma.tipoventa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tipoventaUpdateManyArgs>(args: SelectSubset<T, tipoventaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipoventas and returns the data updated in the database.
     * @param {tipoventaUpdateManyAndReturnArgs} args - Arguments to update many Tipoventas.
     * @example
     * // Update many Tipoventas
     * const tipoventa = await prisma.tipoventa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tipoventas and only return the `id`
     * const tipoventaWithIdOnly = await prisma.tipoventa.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tipoventaUpdateManyAndReturnArgs>(args: SelectSubset<T, tipoventaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipoventaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tipoventa.
     * @param {tipoventaUpsertArgs} args - Arguments to update or create a Tipoventa.
     * @example
     * // Update or create a Tipoventa
     * const tipoventa = await prisma.tipoventa.upsert({
     *   create: {
     *     // ... data to create a Tipoventa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipoventa we want to update
     *   }
     * })
     */
    upsert<T extends tipoventaUpsertArgs>(args: SelectSubset<T, tipoventaUpsertArgs<ExtArgs>>): Prisma__tipoventaClient<$Result.GetResult<Prisma.$tipoventaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tipoventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoventaCountArgs} args - Arguments to filter Tipoventas to count.
     * @example
     * // Count the number of Tipoventas
     * const count = await prisma.tipoventa.count({
     *   where: {
     *     // ... the filter for the Tipoventas we want to count
     *   }
     * })
    **/
    count<T extends tipoventaCountArgs>(
      args?: Subset<T, tipoventaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipoventaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipoventa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipoventaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipoventaAggregateArgs>(args: Subset<T, TipoventaAggregateArgs>): Prisma.PrismaPromise<GetTipoventaAggregateType<T>>

    /**
     * Group by Tipoventa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipoventaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipoventaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipoventaGroupByArgs['orderBy'] }
        : { orderBy?: tipoventaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipoventaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipoventaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipoventa model
   */
  readonly fields: tipoventaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipoventa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipoventaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalleventa<T extends tipoventa$detalleventaArgs<ExtArgs> = {}>(args?: Subset<T, tipoventa$detalleventaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tipoventa model
   */
  interface tipoventaFieldRefs {
    readonly id: FieldRef<"tipoventa", 'Int'>
    readonly nombre: FieldRef<"tipoventa", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tipoventa findUnique
   */
  export type tipoventaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoventa
     */
    select?: tipoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipoventa
     */
    omit?: tipoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoventaInclude<ExtArgs> | null
    /**
     * Filter, which tipoventa to fetch.
     */
    where: tipoventaWhereUniqueInput
  }

  /**
   * tipoventa findUniqueOrThrow
   */
  export type tipoventaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoventa
     */
    select?: tipoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipoventa
     */
    omit?: tipoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoventaInclude<ExtArgs> | null
    /**
     * Filter, which tipoventa to fetch.
     */
    where: tipoventaWhereUniqueInput
  }

  /**
   * tipoventa findFirst
   */
  export type tipoventaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoventa
     */
    select?: tipoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipoventa
     */
    omit?: tipoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoventaInclude<ExtArgs> | null
    /**
     * Filter, which tipoventa to fetch.
     */
    where?: tipoventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoventas to fetch.
     */
    orderBy?: tipoventaOrderByWithRelationInput | tipoventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipoventas.
     */
    cursor?: tipoventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipoventas.
     */
    distinct?: TipoventaScalarFieldEnum | TipoventaScalarFieldEnum[]
  }

  /**
   * tipoventa findFirstOrThrow
   */
  export type tipoventaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoventa
     */
    select?: tipoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipoventa
     */
    omit?: tipoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoventaInclude<ExtArgs> | null
    /**
     * Filter, which tipoventa to fetch.
     */
    where?: tipoventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoventas to fetch.
     */
    orderBy?: tipoventaOrderByWithRelationInput | tipoventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipoventas.
     */
    cursor?: tipoventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipoventas.
     */
    distinct?: TipoventaScalarFieldEnum | TipoventaScalarFieldEnum[]
  }

  /**
   * tipoventa findMany
   */
  export type tipoventaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoventa
     */
    select?: tipoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipoventa
     */
    omit?: tipoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoventaInclude<ExtArgs> | null
    /**
     * Filter, which tipoventas to fetch.
     */
    where?: tipoventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipoventas to fetch.
     */
    orderBy?: tipoventaOrderByWithRelationInput | tipoventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipoventas.
     */
    cursor?: tipoventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipoventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipoventas.
     */
    skip?: number
    distinct?: TipoventaScalarFieldEnum | TipoventaScalarFieldEnum[]
  }

  /**
   * tipoventa create
   */
  export type tipoventaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoventa
     */
    select?: tipoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipoventa
     */
    omit?: tipoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoventaInclude<ExtArgs> | null
    /**
     * The data needed to create a tipoventa.
     */
    data: XOR<tipoventaCreateInput, tipoventaUncheckedCreateInput>
  }

  /**
   * tipoventa createMany
   */
  export type tipoventaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipoventas.
     */
    data: tipoventaCreateManyInput | tipoventaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipoventa createManyAndReturn
   */
  export type tipoventaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoventa
     */
    select?: tipoventaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipoventa
     */
    omit?: tipoventaOmit<ExtArgs> | null
    /**
     * The data used to create many tipoventas.
     */
    data: tipoventaCreateManyInput | tipoventaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipoventa update
   */
  export type tipoventaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoventa
     */
    select?: tipoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipoventa
     */
    omit?: tipoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoventaInclude<ExtArgs> | null
    /**
     * The data needed to update a tipoventa.
     */
    data: XOR<tipoventaUpdateInput, tipoventaUncheckedUpdateInput>
    /**
     * Choose, which tipoventa to update.
     */
    where: tipoventaWhereUniqueInput
  }

  /**
   * tipoventa updateMany
   */
  export type tipoventaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipoventas.
     */
    data: XOR<tipoventaUpdateManyMutationInput, tipoventaUncheckedUpdateManyInput>
    /**
     * Filter which tipoventas to update
     */
    where?: tipoventaWhereInput
    /**
     * Limit how many tipoventas to update.
     */
    limit?: number
  }

  /**
   * tipoventa updateManyAndReturn
   */
  export type tipoventaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoventa
     */
    select?: tipoventaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipoventa
     */
    omit?: tipoventaOmit<ExtArgs> | null
    /**
     * The data used to update tipoventas.
     */
    data: XOR<tipoventaUpdateManyMutationInput, tipoventaUncheckedUpdateManyInput>
    /**
     * Filter which tipoventas to update
     */
    where?: tipoventaWhereInput
    /**
     * Limit how many tipoventas to update.
     */
    limit?: number
  }

  /**
   * tipoventa upsert
   */
  export type tipoventaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoventa
     */
    select?: tipoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipoventa
     */
    omit?: tipoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoventaInclude<ExtArgs> | null
    /**
     * The filter to search for the tipoventa to update in case it exists.
     */
    where: tipoventaWhereUniqueInput
    /**
     * In case the tipoventa found by the `where` argument doesn't exist, create a new tipoventa with this data.
     */
    create: XOR<tipoventaCreateInput, tipoventaUncheckedCreateInput>
    /**
     * In case the tipoventa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipoventaUpdateInput, tipoventaUncheckedUpdateInput>
  }

  /**
   * tipoventa delete
   */
  export type tipoventaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoventa
     */
    select?: tipoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipoventa
     */
    omit?: tipoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoventaInclude<ExtArgs> | null
    /**
     * Filter which tipoventa to delete.
     */
    where: tipoventaWhereUniqueInput
  }

  /**
   * tipoventa deleteMany
   */
  export type tipoventaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipoventas to delete
     */
    where?: tipoventaWhereInput
    /**
     * Limit how many tipoventas to delete.
     */
    limit?: number
  }

  /**
   * tipoventa.detalleventa
   */
  export type tipoventa$detalleventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
    where?: detalleventaWhereInput
    orderBy?: detalleventaOrderByWithRelationInput | detalleventaOrderByWithRelationInput[]
    cursor?: detalleventaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleventaScalarFieldEnum | DetalleventaScalarFieldEnum[]
  }

  /**
   * tipoventa without action
   */
  export type tipoventaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipoventa
     */
    select?: tipoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipoventa
     */
    omit?: tipoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipoventaInclude<ExtArgs> | null
  }


  /**
   * Model transaccionfinanciera
   */

  export type AggregateTransaccionfinanciera = {
    _count: TransaccionfinancieraCountAggregateOutputType | null
    _avg: TransaccionfinancieraAvgAggregateOutputType | null
    _sum: TransaccionfinancieraSumAggregateOutputType | null
    _min: TransaccionfinancieraMinAggregateOutputType | null
    _max: TransaccionfinancieraMaxAggregateOutputType | null
  }

  export type TransaccionfinancieraAvgAggregateOutputType = {
    id: number | null
    cuenta_id: number | null
    tipo_id: number | null
    monto: Decimal | null
  }

  export type TransaccionfinancieraSumAggregateOutputType = {
    id: number | null
    cuenta_id: number | null
    tipo_id: number | null
    monto: Decimal | null
  }

  export type TransaccionfinancieraMinAggregateOutputType = {
    id: number | null
    cuenta_id: number | null
    fecha: Date | null
    tipo_id: number | null
    monto: Decimal | null
    descripcion: string | null
  }

  export type TransaccionfinancieraMaxAggregateOutputType = {
    id: number | null
    cuenta_id: number | null
    fecha: Date | null
    tipo_id: number | null
    monto: Decimal | null
    descripcion: string | null
  }

  export type TransaccionfinancieraCountAggregateOutputType = {
    id: number
    cuenta_id: number
    fecha: number
    tipo_id: number
    monto: number
    descripcion: number
    _all: number
  }


  export type TransaccionfinancieraAvgAggregateInputType = {
    id?: true
    cuenta_id?: true
    tipo_id?: true
    monto?: true
  }

  export type TransaccionfinancieraSumAggregateInputType = {
    id?: true
    cuenta_id?: true
    tipo_id?: true
    monto?: true
  }

  export type TransaccionfinancieraMinAggregateInputType = {
    id?: true
    cuenta_id?: true
    fecha?: true
    tipo_id?: true
    monto?: true
    descripcion?: true
  }

  export type TransaccionfinancieraMaxAggregateInputType = {
    id?: true
    cuenta_id?: true
    fecha?: true
    tipo_id?: true
    monto?: true
    descripcion?: true
  }

  export type TransaccionfinancieraCountAggregateInputType = {
    id?: true
    cuenta_id?: true
    fecha?: true
    tipo_id?: true
    monto?: true
    descripcion?: true
    _all?: true
  }

  export type TransaccionfinancieraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transaccionfinanciera to aggregate.
     */
    where?: transaccionfinancieraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaccionfinancieras to fetch.
     */
    orderBy?: transaccionfinancieraOrderByWithRelationInput | transaccionfinancieraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: transaccionfinancieraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaccionfinancieras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaccionfinancieras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned transaccionfinancieras
    **/
    _count?: true | TransaccionfinancieraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransaccionfinancieraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransaccionfinancieraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransaccionfinancieraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransaccionfinancieraMaxAggregateInputType
  }

  export type GetTransaccionfinancieraAggregateType<T extends TransaccionfinancieraAggregateArgs> = {
        [P in keyof T & keyof AggregateTransaccionfinanciera]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransaccionfinanciera[P]>
      : GetScalarType<T[P], AggregateTransaccionfinanciera[P]>
  }




  export type transaccionfinancieraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transaccionfinancieraWhereInput
    orderBy?: transaccionfinancieraOrderByWithAggregationInput | transaccionfinancieraOrderByWithAggregationInput[]
    by: TransaccionfinancieraScalarFieldEnum[] | TransaccionfinancieraScalarFieldEnum
    having?: transaccionfinancieraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransaccionfinancieraCountAggregateInputType | true
    _avg?: TransaccionfinancieraAvgAggregateInputType
    _sum?: TransaccionfinancieraSumAggregateInputType
    _min?: TransaccionfinancieraMinAggregateInputType
    _max?: TransaccionfinancieraMaxAggregateInputType
  }

  export type TransaccionfinancieraGroupByOutputType = {
    id: number
    cuenta_id: number | null
    fecha: Date
    tipo_id: number | null
    monto: Decimal
    descripcion: string | null
    _count: TransaccionfinancieraCountAggregateOutputType | null
    _avg: TransaccionfinancieraAvgAggregateOutputType | null
    _sum: TransaccionfinancieraSumAggregateOutputType | null
    _min: TransaccionfinancieraMinAggregateOutputType | null
    _max: TransaccionfinancieraMaxAggregateOutputType | null
  }

  type GetTransaccionfinancieraGroupByPayload<T extends transaccionfinancieraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransaccionfinancieraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransaccionfinancieraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransaccionfinancieraGroupByOutputType[P]>
            : GetScalarType<T[P], TransaccionfinancieraGroupByOutputType[P]>
        }
      >
    >


  export type transaccionfinancieraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cuenta_id?: boolean
    fecha?: boolean
    tipo_id?: boolean
    monto?: boolean
    descripcion?: boolean
    cuentafinanciera?: boolean | transaccionfinanciera$cuentafinancieraArgs<ExtArgs>
    tipotransaccion?: boolean | transaccionfinanciera$tipotransaccionArgs<ExtArgs>
  }, ExtArgs["result"]["transaccionfinanciera"]>

  export type transaccionfinancieraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cuenta_id?: boolean
    fecha?: boolean
    tipo_id?: boolean
    monto?: boolean
    descripcion?: boolean
    cuentafinanciera?: boolean | transaccionfinanciera$cuentafinancieraArgs<ExtArgs>
    tipotransaccion?: boolean | transaccionfinanciera$tipotransaccionArgs<ExtArgs>
  }, ExtArgs["result"]["transaccionfinanciera"]>

  export type transaccionfinancieraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cuenta_id?: boolean
    fecha?: boolean
    tipo_id?: boolean
    monto?: boolean
    descripcion?: boolean
    cuentafinanciera?: boolean | transaccionfinanciera$cuentafinancieraArgs<ExtArgs>
    tipotransaccion?: boolean | transaccionfinanciera$tipotransaccionArgs<ExtArgs>
  }, ExtArgs["result"]["transaccionfinanciera"]>

  export type transaccionfinancieraSelectScalar = {
    id?: boolean
    cuenta_id?: boolean
    fecha?: boolean
    tipo_id?: boolean
    monto?: boolean
    descripcion?: boolean
  }

  export type transaccionfinancieraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cuenta_id" | "fecha" | "tipo_id" | "monto" | "descripcion", ExtArgs["result"]["transaccionfinanciera"]>
  export type transaccionfinancieraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cuentafinanciera?: boolean | transaccionfinanciera$cuentafinancieraArgs<ExtArgs>
    tipotransaccion?: boolean | transaccionfinanciera$tipotransaccionArgs<ExtArgs>
  }
  export type transaccionfinancieraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cuentafinanciera?: boolean | transaccionfinanciera$cuentafinancieraArgs<ExtArgs>
    tipotransaccion?: boolean | transaccionfinanciera$tipotransaccionArgs<ExtArgs>
  }
  export type transaccionfinancieraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cuentafinanciera?: boolean | transaccionfinanciera$cuentafinancieraArgs<ExtArgs>
    tipotransaccion?: boolean | transaccionfinanciera$tipotransaccionArgs<ExtArgs>
  }

  export type $transaccionfinancieraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "transaccionfinanciera"
    objects: {
      cuentafinanciera: Prisma.$cuentafinancieraPayload<ExtArgs> | null
      tipotransaccion: Prisma.$tipotransaccionPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      cuenta_id: number | null
      fecha: Date
      tipo_id: number | null
      monto: Prisma.Decimal
      descripcion: string | null
    }, ExtArgs["result"]["transaccionfinanciera"]>
    composites: {}
  }

  type transaccionfinancieraGetPayload<S extends boolean | null | undefined | transaccionfinancieraDefaultArgs> = $Result.GetResult<Prisma.$transaccionfinancieraPayload, S>

  type transaccionfinancieraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<transaccionfinancieraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransaccionfinancieraCountAggregateInputType | true
    }

  export interface transaccionfinancieraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['transaccionfinanciera'], meta: { name: 'transaccionfinanciera' } }
    /**
     * Find zero or one Transaccionfinanciera that matches the filter.
     * @param {transaccionfinancieraFindUniqueArgs} args - Arguments to find a Transaccionfinanciera
     * @example
     * // Get one Transaccionfinanciera
     * const transaccionfinanciera = await prisma.transaccionfinanciera.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends transaccionfinancieraFindUniqueArgs>(args: SelectSubset<T, transaccionfinancieraFindUniqueArgs<ExtArgs>>): Prisma__transaccionfinancieraClient<$Result.GetResult<Prisma.$transaccionfinancieraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transaccionfinanciera that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {transaccionfinancieraFindUniqueOrThrowArgs} args - Arguments to find a Transaccionfinanciera
     * @example
     * // Get one Transaccionfinanciera
     * const transaccionfinanciera = await prisma.transaccionfinanciera.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends transaccionfinancieraFindUniqueOrThrowArgs>(args: SelectSubset<T, transaccionfinancieraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__transaccionfinancieraClient<$Result.GetResult<Prisma.$transaccionfinancieraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaccionfinanciera that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaccionfinancieraFindFirstArgs} args - Arguments to find a Transaccionfinanciera
     * @example
     * // Get one Transaccionfinanciera
     * const transaccionfinanciera = await prisma.transaccionfinanciera.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends transaccionfinancieraFindFirstArgs>(args?: SelectSubset<T, transaccionfinancieraFindFirstArgs<ExtArgs>>): Prisma__transaccionfinancieraClient<$Result.GetResult<Prisma.$transaccionfinancieraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transaccionfinanciera that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaccionfinancieraFindFirstOrThrowArgs} args - Arguments to find a Transaccionfinanciera
     * @example
     * // Get one Transaccionfinanciera
     * const transaccionfinanciera = await prisma.transaccionfinanciera.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends transaccionfinancieraFindFirstOrThrowArgs>(args?: SelectSubset<T, transaccionfinancieraFindFirstOrThrowArgs<ExtArgs>>): Prisma__transaccionfinancieraClient<$Result.GetResult<Prisma.$transaccionfinancieraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transaccionfinancieras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaccionfinancieraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transaccionfinancieras
     * const transaccionfinancieras = await prisma.transaccionfinanciera.findMany()
     * 
     * // Get first 10 Transaccionfinancieras
     * const transaccionfinancieras = await prisma.transaccionfinanciera.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transaccionfinancieraWithIdOnly = await prisma.transaccionfinanciera.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends transaccionfinancieraFindManyArgs>(args?: SelectSubset<T, transaccionfinancieraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaccionfinancieraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transaccionfinanciera.
     * @param {transaccionfinancieraCreateArgs} args - Arguments to create a Transaccionfinanciera.
     * @example
     * // Create one Transaccionfinanciera
     * const Transaccionfinanciera = await prisma.transaccionfinanciera.create({
     *   data: {
     *     // ... data to create a Transaccionfinanciera
     *   }
     * })
     * 
     */
    create<T extends transaccionfinancieraCreateArgs>(args: SelectSubset<T, transaccionfinancieraCreateArgs<ExtArgs>>): Prisma__transaccionfinancieraClient<$Result.GetResult<Prisma.$transaccionfinancieraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transaccionfinancieras.
     * @param {transaccionfinancieraCreateManyArgs} args - Arguments to create many Transaccionfinancieras.
     * @example
     * // Create many Transaccionfinancieras
     * const transaccionfinanciera = await prisma.transaccionfinanciera.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends transaccionfinancieraCreateManyArgs>(args?: SelectSubset<T, transaccionfinancieraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transaccionfinancieras and returns the data saved in the database.
     * @param {transaccionfinancieraCreateManyAndReturnArgs} args - Arguments to create many Transaccionfinancieras.
     * @example
     * // Create many Transaccionfinancieras
     * const transaccionfinanciera = await prisma.transaccionfinanciera.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transaccionfinancieras and only return the `id`
     * const transaccionfinancieraWithIdOnly = await prisma.transaccionfinanciera.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends transaccionfinancieraCreateManyAndReturnArgs>(args?: SelectSubset<T, transaccionfinancieraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaccionfinancieraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transaccionfinanciera.
     * @param {transaccionfinancieraDeleteArgs} args - Arguments to delete one Transaccionfinanciera.
     * @example
     * // Delete one Transaccionfinanciera
     * const Transaccionfinanciera = await prisma.transaccionfinanciera.delete({
     *   where: {
     *     // ... filter to delete one Transaccionfinanciera
     *   }
     * })
     * 
     */
    delete<T extends transaccionfinancieraDeleteArgs>(args: SelectSubset<T, transaccionfinancieraDeleteArgs<ExtArgs>>): Prisma__transaccionfinancieraClient<$Result.GetResult<Prisma.$transaccionfinancieraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transaccionfinanciera.
     * @param {transaccionfinancieraUpdateArgs} args - Arguments to update one Transaccionfinanciera.
     * @example
     * // Update one Transaccionfinanciera
     * const transaccionfinanciera = await prisma.transaccionfinanciera.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends transaccionfinancieraUpdateArgs>(args: SelectSubset<T, transaccionfinancieraUpdateArgs<ExtArgs>>): Prisma__transaccionfinancieraClient<$Result.GetResult<Prisma.$transaccionfinancieraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transaccionfinancieras.
     * @param {transaccionfinancieraDeleteManyArgs} args - Arguments to filter Transaccionfinancieras to delete.
     * @example
     * // Delete a few Transaccionfinancieras
     * const { count } = await prisma.transaccionfinanciera.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends transaccionfinancieraDeleteManyArgs>(args?: SelectSubset<T, transaccionfinancieraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaccionfinancieras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaccionfinancieraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transaccionfinancieras
     * const transaccionfinanciera = await prisma.transaccionfinanciera.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends transaccionfinancieraUpdateManyArgs>(args: SelectSubset<T, transaccionfinancieraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaccionfinancieras and returns the data updated in the database.
     * @param {transaccionfinancieraUpdateManyAndReturnArgs} args - Arguments to update many Transaccionfinancieras.
     * @example
     * // Update many Transaccionfinancieras
     * const transaccionfinanciera = await prisma.transaccionfinanciera.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transaccionfinancieras and only return the `id`
     * const transaccionfinancieraWithIdOnly = await prisma.transaccionfinanciera.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends transaccionfinancieraUpdateManyAndReturnArgs>(args: SelectSubset<T, transaccionfinancieraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaccionfinancieraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transaccionfinanciera.
     * @param {transaccionfinancieraUpsertArgs} args - Arguments to update or create a Transaccionfinanciera.
     * @example
     * // Update or create a Transaccionfinanciera
     * const transaccionfinanciera = await prisma.transaccionfinanciera.upsert({
     *   create: {
     *     // ... data to create a Transaccionfinanciera
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transaccionfinanciera we want to update
     *   }
     * })
     */
    upsert<T extends transaccionfinancieraUpsertArgs>(args: SelectSubset<T, transaccionfinancieraUpsertArgs<ExtArgs>>): Prisma__transaccionfinancieraClient<$Result.GetResult<Prisma.$transaccionfinancieraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transaccionfinancieras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaccionfinancieraCountArgs} args - Arguments to filter Transaccionfinancieras to count.
     * @example
     * // Count the number of Transaccionfinancieras
     * const count = await prisma.transaccionfinanciera.count({
     *   where: {
     *     // ... the filter for the Transaccionfinancieras we want to count
     *   }
     * })
    **/
    count<T extends transaccionfinancieraCountArgs>(
      args?: Subset<T, transaccionfinancieraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransaccionfinancieraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transaccionfinanciera.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionfinancieraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransaccionfinancieraAggregateArgs>(args: Subset<T, TransaccionfinancieraAggregateArgs>): Prisma.PrismaPromise<GetTransaccionfinancieraAggregateType<T>>

    /**
     * Group by Transaccionfinanciera.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaccionfinancieraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends transaccionfinancieraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: transaccionfinancieraGroupByArgs['orderBy'] }
        : { orderBy?: transaccionfinancieraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, transaccionfinancieraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransaccionfinancieraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the transaccionfinanciera model
   */
  readonly fields: transaccionfinancieraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for transaccionfinanciera.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__transaccionfinancieraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cuentafinanciera<T extends transaccionfinanciera$cuentafinancieraArgs<ExtArgs> = {}>(args?: Subset<T, transaccionfinanciera$cuentafinancieraArgs<ExtArgs>>): Prisma__cuentafinancieraClient<$Result.GetResult<Prisma.$cuentafinancieraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tipotransaccion<T extends transaccionfinanciera$tipotransaccionArgs<ExtArgs> = {}>(args?: Subset<T, transaccionfinanciera$tipotransaccionArgs<ExtArgs>>): Prisma__tipotransaccionClient<$Result.GetResult<Prisma.$tipotransaccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the transaccionfinanciera model
   */
  interface transaccionfinancieraFieldRefs {
    readonly id: FieldRef<"transaccionfinanciera", 'Int'>
    readonly cuenta_id: FieldRef<"transaccionfinanciera", 'Int'>
    readonly fecha: FieldRef<"transaccionfinanciera", 'DateTime'>
    readonly tipo_id: FieldRef<"transaccionfinanciera", 'Int'>
    readonly monto: FieldRef<"transaccionfinanciera", 'Decimal'>
    readonly descripcion: FieldRef<"transaccionfinanciera", 'String'>
  }
    

  // Custom InputTypes
  /**
   * transaccionfinanciera findUnique
   */
  export type transaccionfinancieraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccionfinanciera
     */
    select?: transaccionfinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccionfinanciera
     */
    omit?: transaccionfinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccionfinancieraInclude<ExtArgs> | null
    /**
     * Filter, which transaccionfinanciera to fetch.
     */
    where: transaccionfinancieraWhereUniqueInput
  }

  /**
   * transaccionfinanciera findUniqueOrThrow
   */
  export type transaccionfinancieraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccionfinanciera
     */
    select?: transaccionfinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccionfinanciera
     */
    omit?: transaccionfinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccionfinancieraInclude<ExtArgs> | null
    /**
     * Filter, which transaccionfinanciera to fetch.
     */
    where: transaccionfinancieraWhereUniqueInput
  }

  /**
   * transaccionfinanciera findFirst
   */
  export type transaccionfinancieraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccionfinanciera
     */
    select?: transaccionfinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccionfinanciera
     */
    omit?: transaccionfinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccionfinancieraInclude<ExtArgs> | null
    /**
     * Filter, which transaccionfinanciera to fetch.
     */
    where?: transaccionfinancieraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaccionfinancieras to fetch.
     */
    orderBy?: transaccionfinancieraOrderByWithRelationInput | transaccionfinancieraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transaccionfinancieras.
     */
    cursor?: transaccionfinancieraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaccionfinancieras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaccionfinancieras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transaccionfinancieras.
     */
    distinct?: TransaccionfinancieraScalarFieldEnum | TransaccionfinancieraScalarFieldEnum[]
  }

  /**
   * transaccionfinanciera findFirstOrThrow
   */
  export type transaccionfinancieraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccionfinanciera
     */
    select?: transaccionfinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccionfinanciera
     */
    omit?: transaccionfinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccionfinancieraInclude<ExtArgs> | null
    /**
     * Filter, which transaccionfinanciera to fetch.
     */
    where?: transaccionfinancieraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaccionfinancieras to fetch.
     */
    orderBy?: transaccionfinancieraOrderByWithRelationInput | transaccionfinancieraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transaccionfinancieras.
     */
    cursor?: transaccionfinancieraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaccionfinancieras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaccionfinancieras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transaccionfinancieras.
     */
    distinct?: TransaccionfinancieraScalarFieldEnum | TransaccionfinancieraScalarFieldEnum[]
  }

  /**
   * transaccionfinanciera findMany
   */
  export type transaccionfinancieraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccionfinanciera
     */
    select?: transaccionfinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccionfinanciera
     */
    omit?: transaccionfinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccionfinancieraInclude<ExtArgs> | null
    /**
     * Filter, which transaccionfinancieras to fetch.
     */
    where?: transaccionfinancieraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaccionfinancieras to fetch.
     */
    orderBy?: transaccionfinancieraOrderByWithRelationInput | transaccionfinancieraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing transaccionfinancieras.
     */
    cursor?: transaccionfinancieraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaccionfinancieras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaccionfinancieras.
     */
    skip?: number
    distinct?: TransaccionfinancieraScalarFieldEnum | TransaccionfinancieraScalarFieldEnum[]
  }

  /**
   * transaccionfinanciera create
   */
  export type transaccionfinancieraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccionfinanciera
     */
    select?: transaccionfinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccionfinanciera
     */
    omit?: transaccionfinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccionfinancieraInclude<ExtArgs> | null
    /**
     * The data needed to create a transaccionfinanciera.
     */
    data: XOR<transaccionfinancieraCreateInput, transaccionfinancieraUncheckedCreateInput>
  }

  /**
   * transaccionfinanciera createMany
   */
  export type transaccionfinancieraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many transaccionfinancieras.
     */
    data: transaccionfinancieraCreateManyInput | transaccionfinancieraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * transaccionfinanciera createManyAndReturn
   */
  export type transaccionfinancieraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccionfinanciera
     */
    select?: transaccionfinancieraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the transaccionfinanciera
     */
    omit?: transaccionfinancieraOmit<ExtArgs> | null
    /**
     * The data used to create many transaccionfinancieras.
     */
    data: transaccionfinancieraCreateManyInput | transaccionfinancieraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccionfinancieraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * transaccionfinanciera update
   */
  export type transaccionfinancieraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccionfinanciera
     */
    select?: transaccionfinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccionfinanciera
     */
    omit?: transaccionfinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccionfinancieraInclude<ExtArgs> | null
    /**
     * The data needed to update a transaccionfinanciera.
     */
    data: XOR<transaccionfinancieraUpdateInput, transaccionfinancieraUncheckedUpdateInput>
    /**
     * Choose, which transaccionfinanciera to update.
     */
    where: transaccionfinancieraWhereUniqueInput
  }

  /**
   * transaccionfinanciera updateMany
   */
  export type transaccionfinancieraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update transaccionfinancieras.
     */
    data: XOR<transaccionfinancieraUpdateManyMutationInput, transaccionfinancieraUncheckedUpdateManyInput>
    /**
     * Filter which transaccionfinancieras to update
     */
    where?: transaccionfinancieraWhereInput
    /**
     * Limit how many transaccionfinancieras to update.
     */
    limit?: number
  }

  /**
   * transaccionfinanciera updateManyAndReturn
   */
  export type transaccionfinancieraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccionfinanciera
     */
    select?: transaccionfinancieraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the transaccionfinanciera
     */
    omit?: transaccionfinancieraOmit<ExtArgs> | null
    /**
     * The data used to update transaccionfinancieras.
     */
    data: XOR<transaccionfinancieraUpdateManyMutationInput, transaccionfinancieraUncheckedUpdateManyInput>
    /**
     * Filter which transaccionfinancieras to update
     */
    where?: transaccionfinancieraWhereInput
    /**
     * Limit how many transaccionfinancieras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccionfinancieraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * transaccionfinanciera upsert
   */
  export type transaccionfinancieraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccionfinanciera
     */
    select?: transaccionfinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccionfinanciera
     */
    omit?: transaccionfinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccionfinancieraInclude<ExtArgs> | null
    /**
     * The filter to search for the transaccionfinanciera to update in case it exists.
     */
    where: transaccionfinancieraWhereUniqueInput
    /**
     * In case the transaccionfinanciera found by the `where` argument doesn't exist, create a new transaccionfinanciera with this data.
     */
    create: XOR<transaccionfinancieraCreateInput, transaccionfinancieraUncheckedCreateInput>
    /**
     * In case the transaccionfinanciera was found with the provided `where` argument, update it with this data.
     */
    update: XOR<transaccionfinancieraUpdateInput, transaccionfinancieraUncheckedUpdateInput>
  }

  /**
   * transaccionfinanciera delete
   */
  export type transaccionfinancieraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccionfinanciera
     */
    select?: transaccionfinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccionfinanciera
     */
    omit?: transaccionfinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccionfinancieraInclude<ExtArgs> | null
    /**
     * Filter which transaccionfinanciera to delete.
     */
    where: transaccionfinancieraWhereUniqueInput
  }

  /**
   * transaccionfinanciera deleteMany
   */
  export type transaccionfinancieraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transaccionfinancieras to delete
     */
    where?: transaccionfinancieraWhereInput
    /**
     * Limit how many transaccionfinancieras to delete.
     */
    limit?: number
  }

  /**
   * transaccionfinanciera.cuentafinanciera
   */
  export type transaccionfinanciera$cuentafinancieraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cuentafinanciera
     */
    select?: cuentafinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cuentafinanciera
     */
    omit?: cuentafinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cuentafinancieraInclude<ExtArgs> | null
    where?: cuentafinancieraWhereInput
  }

  /**
   * transaccionfinanciera.tipotransaccion
   */
  export type transaccionfinanciera$tipotransaccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipotransaccion
     */
    select?: tipotransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipotransaccion
     */
    omit?: tipotransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipotransaccionInclude<ExtArgs> | null
    where?: tipotransaccionWhereInput
  }

  /**
   * transaccionfinanciera without action
   */
  export type transaccionfinancieraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaccionfinanciera
     */
    select?: transaccionfinancieraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the transaccionfinanciera
     */
    omit?: transaccionfinancieraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaccionfinancieraInclude<ExtArgs> | null
  }


  /**
   * Model usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id: number | null
    rol_id: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id: number | null
    rol_id: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    correo: string | null
    contrasena: string | null
    rol_id: number | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    correo: string | null
    contrasena: string | null
    rol_id: number | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    nombre: number
    correo: number
    contrasena: number
    rol_id: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id?: true
    rol_id?: true
  }

  export type UsuarioSumAggregateInputType = {
    id?: true
    rol_id?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    nombre?: true
    correo?: true
    contrasena?: true
    rol_id?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    nombre?: true
    correo?: true
    contrasena?: true
    rol_id?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    nombre?: true
    correo?: true
    contrasena?: true
    rol_id?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuario to aggregate.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type usuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuarioWhereInput
    orderBy?: usuarioOrderByWithAggregationInput | usuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: usuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: number
    nombre: string
    correo: string
    contrasena: string
    rol_id: number | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends usuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type usuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    correo?: boolean
    contrasena?: boolean
    rol_id?: boolean
    rol?: boolean | usuario$rolArgs<ExtArgs>
    venta?: boolean | usuario$ventaArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    correo?: boolean
    contrasena?: boolean
    rol_id?: boolean
    rol?: boolean | usuario$rolArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    correo?: boolean
    contrasena?: boolean
    rol_id?: boolean
    rol?: boolean | usuario$rolArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectScalar = {
    id?: boolean
    nombre?: boolean
    correo?: boolean
    contrasena?: boolean
    rol_id?: boolean
  }

  export type usuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "correo" | "contrasena" | "rol_id", ExtArgs["result"]["usuario"]>
  export type usuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | usuario$rolArgs<ExtArgs>
    venta?: boolean | usuario$ventaArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | usuario$rolArgs<ExtArgs>
  }
  export type usuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | usuario$rolArgs<ExtArgs>
  }

  export type $usuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuario"
    objects: {
      rol: Prisma.$rolPayload<ExtArgs> | null
      venta: Prisma.$ventaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      correo: string
      contrasena: string
      rol_id: number | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type usuarioGetPayload<S extends boolean | null | undefined | usuarioDefaultArgs> = $Result.GetResult<Prisma.$usuarioPayload, S>

  type usuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface usuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuario'], meta: { name: 'usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {usuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usuarioFindUniqueArgs>(args: SelectSubset<T, usuarioFindUniqueArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, usuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usuarioFindFirstArgs>(args?: SelectSubset<T, usuarioFindFirstArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, usuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usuarioFindManyArgs>(args?: SelectSubset<T, usuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {usuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends usuarioCreateArgs>(args: SelectSubset<T, usuarioCreateArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {usuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usuarioCreateManyArgs>(args?: SelectSubset<T, usuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {usuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, usuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {usuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends usuarioDeleteArgs>(args: SelectSubset<T, usuarioDeleteArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {usuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usuarioUpdateArgs>(args: SelectSubset<T, usuarioUpdateArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {usuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usuarioDeleteManyArgs>(args?: SelectSubset<T, usuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usuarioUpdateManyArgs>(args: SelectSubset<T, usuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {usuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, usuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {usuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends usuarioUpsertArgs>(args: SelectSubset<T, usuarioUpsertArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends usuarioCountArgs>(
      args?: Subset<T, usuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuarioGroupByArgs['orderBy'] }
        : { orderBy?: usuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuario model
   */
  readonly fields: usuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rol<T extends usuario$rolArgs<ExtArgs> = {}>(args?: Subset<T, usuario$rolArgs<ExtArgs>>): Prisma__rolClient<$Result.GetResult<Prisma.$rolPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    venta<T extends usuario$ventaArgs<ExtArgs> = {}>(args?: Subset<T, usuario$ventaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ventaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the usuario model
   */
  interface usuarioFieldRefs {
    readonly id: FieldRef<"usuario", 'Int'>
    readonly nombre: FieldRef<"usuario", 'String'>
    readonly correo: FieldRef<"usuario", 'String'>
    readonly contrasena: FieldRef<"usuario", 'String'>
    readonly rol_id: FieldRef<"usuario", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * usuario findUnique
   */
  export type usuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario findUniqueOrThrow
   */
  export type usuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario findFirst
   */
  export type usuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario findFirstOrThrow
   */
  export type usuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario findMany
   */
  export type usuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * usuario create
   */
  export type usuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a usuario.
     */
    data: XOR<usuarioCreateInput, usuarioUncheckedCreateInput>
  }

  /**
   * usuario createMany
   */
  export type usuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuarios.
     */
    data: usuarioCreateManyInput | usuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuario createManyAndReturn
   */
  export type usuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * The data used to create many usuarios.
     */
    data: usuarioCreateManyInput | usuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * usuario update
   */
  export type usuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a usuario.
     */
    data: XOR<usuarioUpdateInput, usuarioUncheckedUpdateInput>
    /**
     * Choose, which usuario to update.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario updateMany
   */
  export type usuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuarioUpdateManyMutationInput, usuarioUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuarioWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuario updateManyAndReturn
   */
  export type usuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuarioUpdateManyMutationInput, usuarioUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuarioWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * usuario upsert
   */
  export type usuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the usuario to update in case it exists.
     */
    where: usuarioWhereUniqueInput
    /**
     * In case the usuario found by the `where` argument doesn't exist, create a new usuario with this data.
     */
    create: XOR<usuarioCreateInput, usuarioUncheckedCreateInput>
    /**
     * In case the usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuarioUpdateInput, usuarioUncheckedUpdateInput>
  }

  /**
   * usuario delete
   */
  export type usuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter which usuario to delete.
     */
    where: usuarioWhereUniqueInput
  }

  /**
   * usuario deleteMany
   */
  export type usuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to delete
     */
    where?: usuarioWhereInput
    /**
     * Limit how many usuarios to delete.
     */
    limit?: number
  }

  /**
   * usuario.rol
   */
  export type usuario$rolArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rol
     */
    select?: rolSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rol
     */
    omit?: rolOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolInclude<ExtArgs> | null
    where?: rolWhereInput
  }

  /**
   * usuario.venta
   */
  export type usuario$ventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaInclude<ExtArgs> | null
    where?: ventaWhereInput
    orderBy?: ventaOrderByWithRelationInput | ventaOrderByWithRelationInput[]
    cursor?: ventaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * usuario without action
   */
  export type usuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
  }


  /**
   * Model venta
   */

  export type AggregateVenta = {
    _count: VentaCountAggregateOutputType | null
    _avg: VentaAvgAggregateOutputType | null
    _sum: VentaSumAggregateOutputType | null
    _min: VentaMinAggregateOutputType | null
    _max: VentaMaxAggregateOutputType | null
  }

  export type VentaAvgAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    estado_id: number | null
    total: Decimal | null
  }

  export type VentaSumAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    estado_id: number | null
    total: Decimal | null
  }

  export type VentaMinAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    fecha: Date | null
    estado_id: number | null
    total: Decimal | null
  }

  export type VentaMaxAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    fecha: Date | null
    estado_id: number | null
    total: Decimal | null
  }

  export type VentaCountAggregateOutputType = {
    id: number
    usuario_id: number
    fecha: number
    estado_id: number
    total: number
    _all: number
  }


  export type VentaAvgAggregateInputType = {
    id?: true
    usuario_id?: true
    estado_id?: true
    total?: true
  }

  export type VentaSumAggregateInputType = {
    id?: true
    usuario_id?: true
    estado_id?: true
    total?: true
  }

  export type VentaMinAggregateInputType = {
    id?: true
    usuario_id?: true
    fecha?: true
    estado_id?: true
    total?: true
  }

  export type VentaMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    fecha?: true
    estado_id?: true
    total?: true
  }

  export type VentaCountAggregateInputType = {
    id?: true
    usuario_id?: true
    fecha?: true
    estado_id?: true
    total?: true
    _all?: true
  }

  export type VentaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which venta to aggregate.
     */
    where?: ventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ventas to fetch.
     */
    orderBy?: ventaOrderByWithRelationInput | ventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ventas
    **/
    _count?: true | VentaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VentaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VentaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VentaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VentaMaxAggregateInputType
  }

  export type GetVentaAggregateType<T extends VentaAggregateArgs> = {
        [P in keyof T & keyof AggregateVenta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVenta[P]>
      : GetScalarType<T[P], AggregateVenta[P]>
  }




  export type ventaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ventaWhereInput
    orderBy?: ventaOrderByWithAggregationInput | ventaOrderByWithAggregationInput[]
    by: VentaScalarFieldEnum[] | VentaScalarFieldEnum
    having?: ventaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VentaCountAggregateInputType | true
    _avg?: VentaAvgAggregateInputType
    _sum?: VentaSumAggregateInputType
    _min?: VentaMinAggregateInputType
    _max?: VentaMaxAggregateInputType
  }

  export type VentaGroupByOutputType = {
    id: number
    usuario_id: number | null
    fecha: Date
    estado_id: number | null
    total: Decimal
    _count: VentaCountAggregateOutputType | null
    _avg: VentaAvgAggregateOutputType | null
    _sum: VentaSumAggregateOutputType | null
    _min: VentaMinAggregateOutputType | null
    _max: VentaMaxAggregateOutputType | null
  }

  type GetVentaGroupByPayload<T extends ventaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VentaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VentaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VentaGroupByOutputType[P]>
            : GetScalarType<T[P], VentaGroupByOutputType[P]>
        }
      >
    >


  export type ventaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    fecha?: boolean
    estado_id?: boolean
    total?: boolean
    detalleventa?: boolean | venta$detalleventaArgs<ExtArgs>
    estadoventa?: boolean | venta$estadoventaArgs<ExtArgs>
    usuario?: boolean | venta$usuarioArgs<ExtArgs>
    _count?: boolean | VentaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type ventaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    fecha?: boolean
    estado_id?: boolean
    total?: boolean
    estadoventa?: boolean | venta$estadoventaArgs<ExtArgs>
    usuario?: boolean | venta$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type ventaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    fecha?: boolean
    estado_id?: boolean
    total?: boolean
    estadoventa?: boolean | venta$estadoventaArgs<ExtArgs>
    usuario?: boolean | venta$usuarioArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type ventaSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    fecha?: boolean
    estado_id?: boolean
    total?: boolean
  }

  export type ventaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuario_id" | "fecha" | "estado_id" | "total", ExtArgs["result"]["venta"]>
  export type ventaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalleventa?: boolean | venta$detalleventaArgs<ExtArgs>
    estadoventa?: boolean | venta$estadoventaArgs<ExtArgs>
    usuario?: boolean | venta$usuarioArgs<ExtArgs>
    _count?: boolean | VentaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ventaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estadoventa?: boolean | venta$estadoventaArgs<ExtArgs>
    usuario?: boolean | venta$usuarioArgs<ExtArgs>
  }
  export type ventaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    estadoventa?: boolean | venta$estadoventaArgs<ExtArgs>
    usuario?: boolean | venta$usuarioArgs<ExtArgs>
  }

  export type $ventaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "venta"
    objects: {
      detalleventa: Prisma.$detalleventaPayload<ExtArgs>[]
      estadoventa: Prisma.$estadoventaPayload<ExtArgs> | null
      usuario: Prisma.$usuarioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuario_id: number | null
      fecha: Date
      estado_id: number | null
      total: Prisma.Decimal
    }, ExtArgs["result"]["venta"]>
    composites: {}
  }

  type ventaGetPayload<S extends boolean | null | undefined | ventaDefaultArgs> = $Result.GetResult<Prisma.$ventaPayload, S>

  type ventaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ventaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VentaCountAggregateInputType | true
    }

  export interface ventaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['venta'], meta: { name: 'venta' } }
    /**
     * Find zero or one Venta that matches the filter.
     * @param {ventaFindUniqueArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ventaFindUniqueArgs>(args: SelectSubset<T, ventaFindUniqueArgs<ExtArgs>>): Prisma__ventaClient<$Result.GetResult<Prisma.$ventaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Venta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ventaFindUniqueOrThrowArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ventaFindUniqueOrThrowArgs>(args: SelectSubset<T, ventaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ventaClient<$Result.GetResult<Prisma.$ventaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Venta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventaFindFirstArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ventaFindFirstArgs>(args?: SelectSubset<T, ventaFindFirstArgs<ExtArgs>>): Prisma__ventaClient<$Result.GetResult<Prisma.$ventaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Venta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventaFindFirstOrThrowArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ventaFindFirstOrThrowArgs>(args?: SelectSubset<T, ventaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ventaClient<$Result.GetResult<Prisma.$ventaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ventas
     * const ventas = await prisma.venta.findMany()
     * 
     * // Get first 10 Ventas
     * const ventas = await prisma.venta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ventaWithIdOnly = await prisma.venta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ventaFindManyArgs>(args?: SelectSubset<T, ventaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ventaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Venta.
     * @param {ventaCreateArgs} args - Arguments to create a Venta.
     * @example
     * // Create one Venta
     * const Venta = await prisma.venta.create({
     *   data: {
     *     // ... data to create a Venta
     *   }
     * })
     * 
     */
    create<T extends ventaCreateArgs>(args: SelectSubset<T, ventaCreateArgs<ExtArgs>>): Prisma__ventaClient<$Result.GetResult<Prisma.$ventaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ventas.
     * @param {ventaCreateManyArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const venta = await prisma.venta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ventaCreateManyArgs>(args?: SelectSubset<T, ventaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ventas and returns the data saved in the database.
     * @param {ventaCreateManyAndReturnArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const venta = await prisma.venta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ventas and only return the `id`
     * const ventaWithIdOnly = await prisma.venta.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ventaCreateManyAndReturnArgs>(args?: SelectSubset<T, ventaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ventaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Venta.
     * @param {ventaDeleteArgs} args - Arguments to delete one Venta.
     * @example
     * // Delete one Venta
     * const Venta = await prisma.venta.delete({
     *   where: {
     *     // ... filter to delete one Venta
     *   }
     * })
     * 
     */
    delete<T extends ventaDeleteArgs>(args: SelectSubset<T, ventaDeleteArgs<ExtArgs>>): Prisma__ventaClient<$Result.GetResult<Prisma.$ventaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Venta.
     * @param {ventaUpdateArgs} args - Arguments to update one Venta.
     * @example
     * // Update one Venta
     * const venta = await prisma.venta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ventaUpdateArgs>(args: SelectSubset<T, ventaUpdateArgs<ExtArgs>>): Prisma__ventaClient<$Result.GetResult<Prisma.$ventaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ventas.
     * @param {ventaDeleteManyArgs} args - Arguments to filter Ventas to delete.
     * @example
     * // Delete a few Ventas
     * const { count } = await prisma.venta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ventaDeleteManyArgs>(args?: SelectSubset<T, ventaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ventas
     * const venta = await prisma.venta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ventaUpdateManyArgs>(args: SelectSubset<T, ventaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas and returns the data updated in the database.
     * @param {ventaUpdateManyAndReturnArgs} args - Arguments to update many Ventas.
     * @example
     * // Update many Ventas
     * const venta = await prisma.venta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ventas and only return the `id`
     * const ventaWithIdOnly = await prisma.venta.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ventaUpdateManyAndReturnArgs>(args: SelectSubset<T, ventaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ventaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Venta.
     * @param {ventaUpsertArgs} args - Arguments to update or create a Venta.
     * @example
     * // Update or create a Venta
     * const venta = await prisma.venta.upsert({
     *   create: {
     *     // ... data to create a Venta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Venta we want to update
     *   }
     * })
     */
    upsert<T extends ventaUpsertArgs>(args: SelectSubset<T, ventaUpsertArgs<ExtArgs>>): Prisma__ventaClient<$Result.GetResult<Prisma.$ventaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventaCountArgs} args - Arguments to filter Ventas to count.
     * @example
     * // Count the number of Ventas
     * const count = await prisma.venta.count({
     *   where: {
     *     // ... the filter for the Ventas we want to count
     *   }
     * })
    **/
    count<T extends ventaCountArgs>(
      args?: Subset<T, ventaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VentaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VentaAggregateArgs>(args: Subset<T, VentaAggregateArgs>): Prisma.PrismaPromise<GetVentaAggregateType<T>>

    /**
     * Group by Venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ventaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ventaGroupByArgs['orderBy'] }
        : { orderBy?: ventaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ventaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVentaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the venta model
   */
  readonly fields: ventaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for venta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ventaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalleventa<T extends venta$detalleventaArgs<ExtArgs> = {}>(args?: Subset<T, venta$detalleventaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalleventaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    estadoventa<T extends venta$estadoventaArgs<ExtArgs> = {}>(args?: Subset<T, venta$estadoventaArgs<ExtArgs>>): Prisma__estadoventaClient<$Result.GetResult<Prisma.$estadoventaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    usuario<T extends venta$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, venta$usuarioArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the venta model
   */
  interface ventaFieldRefs {
    readonly id: FieldRef<"venta", 'Int'>
    readonly usuario_id: FieldRef<"venta", 'Int'>
    readonly fecha: FieldRef<"venta", 'DateTime'>
    readonly estado_id: FieldRef<"venta", 'Int'>
    readonly total: FieldRef<"venta", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * venta findUnique
   */
  export type ventaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaInclude<ExtArgs> | null
    /**
     * Filter, which venta to fetch.
     */
    where: ventaWhereUniqueInput
  }

  /**
   * venta findUniqueOrThrow
   */
  export type ventaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaInclude<ExtArgs> | null
    /**
     * Filter, which venta to fetch.
     */
    where: ventaWhereUniqueInput
  }

  /**
   * venta findFirst
   */
  export type ventaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaInclude<ExtArgs> | null
    /**
     * Filter, which venta to fetch.
     */
    where?: ventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ventas to fetch.
     */
    orderBy?: ventaOrderByWithRelationInput | ventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ventas.
     */
    cursor?: ventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ventas.
     */
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * venta findFirstOrThrow
   */
  export type ventaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaInclude<ExtArgs> | null
    /**
     * Filter, which venta to fetch.
     */
    where?: ventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ventas to fetch.
     */
    orderBy?: ventaOrderByWithRelationInput | ventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ventas.
     */
    cursor?: ventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ventas.
     */
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * venta findMany
   */
  export type ventaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaInclude<ExtArgs> | null
    /**
     * Filter, which ventas to fetch.
     */
    where?: ventaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ventas to fetch.
     */
    orderBy?: ventaOrderByWithRelationInput | ventaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ventas.
     */
    cursor?: ventaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ventas.
     */
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * venta create
   */
  export type ventaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaInclude<ExtArgs> | null
    /**
     * The data needed to create a venta.
     */
    data: XOR<ventaCreateInput, ventaUncheckedCreateInput>
  }

  /**
   * venta createMany
   */
  export type ventaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ventas.
     */
    data: ventaCreateManyInput | ventaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * venta createManyAndReturn
   */
  export type ventaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * The data used to create many ventas.
     */
    data: ventaCreateManyInput | ventaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * venta update
   */
  export type ventaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaInclude<ExtArgs> | null
    /**
     * The data needed to update a venta.
     */
    data: XOR<ventaUpdateInput, ventaUncheckedUpdateInput>
    /**
     * Choose, which venta to update.
     */
    where: ventaWhereUniqueInput
  }

  /**
   * venta updateMany
   */
  export type ventaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ventas.
     */
    data: XOR<ventaUpdateManyMutationInput, ventaUncheckedUpdateManyInput>
    /**
     * Filter which ventas to update
     */
    where?: ventaWhereInput
    /**
     * Limit how many ventas to update.
     */
    limit?: number
  }

  /**
   * venta updateManyAndReturn
   */
  export type ventaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * The data used to update ventas.
     */
    data: XOR<ventaUpdateManyMutationInput, ventaUncheckedUpdateManyInput>
    /**
     * Filter which ventas to update
     */
    where?: ventaWhereInput
    /**
     * Limit how many ventas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * venta upsert
   */
  export type ventaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaInclude<ExtArgs> | null
    /**
     * The filter to search for the venta to update in case it exists.
     */
    where: ventaWhereUniqueInput
    /**
     * In case the venta found by the `where` argument doesn't exist, create a new venta with this data.
     */
    create: XOR<ventaCreateInput, ventaUncheckedCreateInput>
    /**
     * In case the venta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ventaUpdateInput, ventaUncheckedUpdateInput>
  }

  /**
   * venta delete
   */
  export type ventaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaInclude<ExtArgs> | null
    /**
     * Filter which venta to delete.
     */
    where: ventaWhereUniqueInput
  }

  /**
   * venta deleteMany
   */
  export type ventaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ventas to delete
     */
    where?: ventaWhereInput
    /**
     * Limit how many ventas to delete.
     */
    limit?: number
  }

  /**
   * venta.detalleventa
   */
  export type venta$detalleventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalleventa
     */
    select?: detalleventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalleventa
     */
    omit?: detalleventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalleventaInclude<ExtArgs> | null
    where?: detalleventaWhereInput
    orderBy?: detalleventaOrderByWithRelationInput | detalleventaOrderByWithRelationInput[]
    cursor?: detalleventaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DetalleventaScalarFieldEnum | DetalleventaScalarFieldEnum[]
  }

  /**
   * venta.estadoventa
   */
  export type venta$estadoventaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the estadoventa
     */
    select?: estadoventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the estadoventa
     */
    omit?: estadoventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: estadoventaInclude<ExtArgs> | null
    where?: estadoventaWhereInput
  }

  /**
   * venta.usuario
   */
  export type venta$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuario
     */
    omit?: usuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuarioInclude<ExtArgs> | null
    where?: usuarioWhereInput
  }

  /**
   * venta without action
   */
  export type ventaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the venta
     */
    select?: ventaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the venta
     */
    omit?: ventaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventaInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CodigobarraScalarFieldEnum: {
    id: 'id',
    producto_id: 'producto_id',
    codigo: 'codigo'
  };

  export type CodigobarraScalarFieldEnum = (typeof CodigobarraScalarFieldEnum)[keyof typeof CodigobarraScalarFieldEnum]


  export const CompraScalarFieldEnum: {
    id: 'id',
    proveedor_id: 'proveedor_id',
    fecha: 'fecha',
    total: 'total'
  };

  export type CompraScalarFieldEnum = (typeof CompraScalarFieldEnum)[keyof typeof CompraScalarFieldEnum]


  export const CuentafinancieraScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    tipo_id: 'tipo_id',
    saldo: 'saldo'
  };

  export type CuentafinancieraScalarFieldEnum = (typeof CuentafinancieraScalarFieldEnum)[keyof typeof CuentafinancieraScalarFieldEnum]


  export const DetallecompraScalarFieldEnum: {
    id: 'id',
    compra_id: 'compra_id',
    lote_id: 'lote_id',
    cantidad: 'cantidad',
    precio_unitario: 'precio_unitario'
  };

  export type DetallecompraScalarFieldEnum = (typeof DetallecompraScalarFieldEnum)[keyof typeof DetallecompraScalarFieldEnum]


  export const DetalleordencompraScalarFieldEnum: {
    id: 'id',
    orden_id: 'orden_id',
    producto_id: 'producto_id',
    cantidad_solicitada: 'cantidad_solicitada',
    precio_estimado: 'precio_estimado'
  };

  export type DetalleordencompraScalarFieldEnum = (typeof DetalleordencompraScalarFieldEnum)[keyof typeof DetalleordencompraScalarFieldEnum]


  export const DetalleventaScalarFieldEnum: {
    id: 'id',
    venta_id: 'venta_id',
    codigo_barra_id: 'codigo_barra_id',
    producto_id: 'producto_id',
    tipo_venta_id: 'tipo_venta_id',
    tipo_lista_id: 'tipo_lista_id',
    cantidad: 'cantidad',
    precio_unitario: 'precio_unitario'
  };

  export type DetalleventaScalarFieldEnum = (typeof DetalleventaScalarFieldEnum)[keyof typeof DetalleventaScalarFieldEnum]


  export const EstadoordencompraScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type EstadoordencompraScalarFieldEnum = (typeof EstadoordencompraScalarFieldEnum)[keyof typeof EstadoordencompraScalarFieldEnum]


  export const EstadoproduccionScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type EstadoproduccionScalarFieldEnum = (typeof EstadoproduccionScalarFieldEnum)[keyof typeof EstadoproduccionScalarFieldEnum]


  export const EstadoventaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type EstadoventaScalarFieldEnum = (typeof EstadoventaScalarFieldEnum)[keyof typeof EstadoventaScalarFieldEnum]


  export const InsumoproduccionScalarFieldEnum: {
    id: 'id',
    orden_id: 'orden_id',
    producto_id: 'producto_id',
    cantidad: 'cantidad'
  };

  export type InsumoproduccionScalarFieldEnum = (typeof InsumoproduccionScalarFieldEnum)[keyof typeof InsumoproduccionScalarFieldEnum]


  export const ListaprecioScalarFieldEnum: {
    id: 'id',
    producto_id: 'producto_id',
    sucursal_id: 'sucursal_id',
    tipo_lista_id: 'tipo_lista_id',
    precio: 'precio'
  };

  export type ListaprecioScalarFieldEnum = (typeof ListaprecioScalarFieldEnum)[keyof typeof ListaprecioScalarFieldEnum]


  export const LoteScalarFieldEnum: {
    id: 'id',
    codigo_barra_id: 'codigo_barra_id',
    fecha_vencimiento: 'fecha_vencimiento',
    cantidad: 'cantidad',
    ubicacion: 'ubicacion'
  };

  export type LoteScalarFieldEnum = (typeof LoteScalarFieldEnum)[keyof typeof LoteScalarFieldEnum]


  export const OrdencompraScalarFieldEnum: {
    id: 'id',
    proveedor_id: 'proveedor_id',
    fecha: 'fecha',
    estado_id: 'estado_id',
    observaciones: 'observaciones'
  };

  export type OrdencompraScalarFieldEnum = (typeof OrdencompraScalarFieldEnum)[keyof typeof OrdencompraScalarFieldEnum]


  export const OrdencompracompraScalarFieldEnum: {
    id: 'id',
    orden_id: 'orden_id',
    compra_id: 'compra_id'
  };

  export type OrdencompracompraScalarFieldEnum = (typeof OrdencompracompraScalarFieldEnum)[keyof typeof OrdencompracompraScalarFieldEnum]


  export const OrdenproduccionScalarFieldEnum: {
    id: 'id',
    producto_id: 'producto_id',
    fecha_inicio: 'fecha_inicio',
    fecha_fin: 'fecha_fin',
    estado_id: 'estado_id'
  };

  export type OrdenproduccionScalarFieldEnum = (typeof OrdenproduccionScalarFieldEnum)[keyof typeof OrdenproduccionScalarFieldEnum]


  export const PermisoScalarFieldEnum: {
    id: 'id',
    rol_id: 'rol_id',
    screen_id: 'screen_id',
    puede_ver: 'puede_ver',
    puede_crear: 'puede_crear',
    puede_editar: 'puede_editar',
    puede_eliminar: 'puede_eliminar'
  };

  export type PermisoScalarFieldEnum = (typeof PermisoScalarFieldEnum)[keyof typeof PermisoScalarFieldEnum]


  export const ProductoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    es_combo: 'es_combo',
    stock_minimo: 'stock_minimo'
  };

  export type ProductoScalarFieldEnum = (typeof ProductoScalarFieldEnum)[keyof typeof ProductoScalarFieldEnum]


  export const ProductocomboScalarFieldEnum: {
    id: 'id',
    combo_id: 'combo_id',
    producto_id: 'producto_id',
    cantidad: 'cantidad'
  };

  export type ProductocomboScalarFieldEnum = (typeof ProductocomboScalarFieldEnum)[keyof typeof ProductocomboScalarFieldEnum]


  export const ProductoterminadoScalarFieldEnum: {
    id: 'id',
    orden_id: 'orden_id',
    lote_id: 'lote_id',
    cantidad: 'cantidad'
  };

  export type ProductoterminadoScalarFieldEnum = (typeof ProductoterminadoScalarFieldEnum)[keyof typeof ProductoterminadoScalarFieldEnum]


  export const ProveedorScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    nit: 'nit',
    contacto: 'contacto',
    telefono: 'telefono',
    correo: 'correo',
    direccion: 'direccion',
    tipo: 'tipo'
  };

  export type ProveedorScalarFieldEnum = (typeof ProveedorScalarFieldEnum)[keyof typeof ProveedorScalarFieldEnum]


  export const RolScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type RolScalarFieldEnum = (typeof RolScalarFieldEnum)[keyof typeof RolScalarFieldEnum]


  export const ScreenScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion'
  };

  export type ScreenScalarFieldEnum = (typeof ScreenScalarFieldEnum)[keyof typeof ScreenScalarFieldEnum]


  export const SucursalScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    direccion: 'direccion'
  };

  export type SucursalScalarFieldEnum = (typeof SucursalScalarFieldEnum)[keyof typeof SucursalScalarFieldEnum]


  export const TipocuentaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type TipocuentaScalarFieldEnum = (typeof TipocuentaScalarFieldEnum)[keyof typeof TipocuentaScalarFieldEnum]


  export const TipolistaprecioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type TipolistaprecioScalarFieldEnum = (typeof TipolistaprecioScalarFieldEnum)[keyof typeof TipolistaprecioScalarFieldEnum]


  export const TipotransaccionScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type TipotransaccionScalarFieldEnum = (typeof TipotransaccionScalarFieldEnum)[keyof typeof TipotransaccionScalarFieldEnum]


  export const TipoventaScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type TipoventaScalarFieldEnum = (typeof TipoventaScalarFieldEnum)[keyof typeof TipoventaScalarFieldEnum]


  export const TransaccionfinancieraScalarFieldEnum: {
    id: 'id',
    cuenta_id: 'cuenta_id',
    fecha: 'fecha',
    tipo_id: 'tipo_id',
    monto: 'monto',
    descripcion: 'descripcion'
  };

  export type TransaccionfinancieraScalarFieldEnum = (typeof TransaccionfinancieraScalarFieldEnum)[keyof typeof TransaccionfinancieraScalarFieldEnum]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    correo: 'correo',
    contrasena: 'contrasena',
    rol_id: 'rol_id'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const VentaScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    fecha: 'fecha',
    estado_id: 'estado_id',
    total: 'total'
  };

  export type VentaScalarFieldEnum = (typeof VentaScalarFieldEnum)[keyof typeof VentaScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type codigobarraWhereInput = {
    AND?: codigobarraWhereInput | codigobarraWhereInput[]
    OR?: codigobarraWhereInput[]
    NOT?: codigobarraWhereInput | codigobarraWhereInput[]
    id?: IntFilter<"codigobarra"> | number
    producto_id?: IntNullableFilter<"codigobarra"> | number | null
    codigo?: StringFilter<"codigobarra"> | string
    producto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
    detalleventa?: DetalleventaListRelationFilter
    lote?: LoteListRelationFilter
  }

  export type codigobarraOrderByWithRelationInput = {
    id?: SortOrder
    producto_id?: SortOrderInput | SortOrder
    codigo?: SortOrder
    producto?: productoOrderByWithRelationInput
    detalleventa?: detalleventaOrderByRelationAggregateInput
    lote?: loteOrderByRelationAggregateInput
  }

  export type codigobarraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    codigo?: string
    AND?: codigobarraWhereInput | codigobarraWhereInput[]
    OR?: codigobarraWhereInput[]
    NOT?: codigobarraWhereInput | codigobarraWhereInput[]
    producto_id?: IntNullableFilter<"codigobarra"> | number | null
    producto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
    detalleventa?: DetalleventaListRelationFilter
    lote?: LoteListRelationFilter
  }, "id" | "codigo">

  export type codigobarraOrderByWithAggregationInput = {
    id?: SortOrder
    producto_id?: SortOrderInput | SortOrder
    codigo?: SortOrder
    _count?: codigobarraCountOrderByAggregateInput
    _avg?: codigobarraAvgOrderByAggregateInput
    _max?: codigobarraMaxOrderByAggregateInput
    _min?: codigobarraMinOrderByAggregateInput
    _sum?: codigobarraSumOrderByAggregateInput
  }

  export type codigobarraScalarWhereWithAggregatesInput = {
    AND?: codigobarraScalarWhereWithAggregatesInput | codigobarraScalarWhereWithAggregatesInput[]
    OR?: codigobarraScalarWhereWithAggregatesInput[]
    NOT?: codigobarraScalarWhereWithAggregatesInput | codigobarraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"codigobarra"> | number
    producto_id?: IntNullableWithAggregatesFilter<"codigobarra"> | number | null
    codigo?: StringWithAggregatesFilter<"codigobarra"> | string
  }

  export type compraWhereInput = {
    AND?: compraWhereInput | compraWhereInput[]
    OR?: compraWhereInput[]
    NOT?: compraWhereInput | compraWhereInput[]
    id?: IntFilter<"compra"> | number
    proveedor_id?: IntNullableFilter<"compra"> | number | null
    fecha?: DateTimeFilter<"compra"> | Date | string
    total?: DecimalFilter<"compra"> | Decimal | DecimalJsLike | number | string
    proveedor?: XOR<ProveedorNullableScalarRelationFilter, proveedorWhereInput> | null
    detallecompra?: DetallecompraListRelationFilter
    ordencompracompra?: OrdencompracompraListRelationFilter
  }

  export type compraOrderByWithRelationInput = {
    id?: SortOrder
    proveedor_id?: SortOrderInput | SortOrder
    fecha?: SortOrder
    total?: SortOrder
    proveedor?: proveedorOrderByWithRelationInput
    detallecompra?: detallecompraOrderByRelationAggregateInput
    ordencompracompra?: ordencompracompraOrderByRelationAggregateInput
  }

  export type compraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: compraWhereInput | compraWhereInput[]
    OR?: compraWhereInput[]
    NOT?: compraWhereInput | compraWhereInput[]
    proveedor_id?: IntNullableFilter<"compra"> | number | null
    fecha?: DateTimeFilter<"compra"> | Date | string
    total?: DecimalFilter<"compra"> | Decimal | DecimalJsLike | number | string
    proveedor?: XOR<ProveedorNullableScalarRelationFilter, proveedorWhereInput> | null
    detallecompra?: DetallecompraListRelationFilter
    ordencompracompra?: OrdencompracompraListRelationFilter
  }, "id">

  export type compraOrderByWithAggregationInput = {
    id?: SortOrder
    proveedor_id?: SortOrderInput | SortOrder
    fecha?: SortOrder
    total?: SortOrder
    _count?: compraCountOrderByAggregateInput
    _avg?: compraAvgOrderByAggregateInput
    _max?: compraMaxOrderByAggregateInput
    _min?: compraMinOrderByAggregateInput
    _sum?: compraSumOrderByAggregateInput
  }

  export type compraScalarWhereWithAggregatesInput = {
    AND?: compraScalarWhereWithAggregatesInput | compraScalarWhereWithAggregatesInput[]
    OR?: compraScalarWhereWithAggregatesInput[]
    NOT?: compraScalarWhereWithAggregatesInput | compraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"compra"> | number
    proveedor_id?: IntNullableWithAggregatesFilter<"compra"> | number | null
    fecha?: DateTimeWithAggregatesFilter<"compra"> | Date | string
    total?: DecimalWithAggregatesFilter<"compra"> | Decimal | DecimalJsLike | number | string
  }

  export type cuentafinancieraWhereInput = {
    AND?: cuentafinancieraWhereInput | cuentafinancieraWhereInput[]
    OR?: cuentafinancieraWhereInput[]
    NOT?: cuentafinancieraWhereInput | cuentafinancieraWhereInput[]
    id?: IntFilter<"cuentafinanciera"> | number
    nombre?: StringFilter<"cuentafinanciera"> | string
    tipo_id?: IntNullableFilter<"cuentafinanciera"> | number | null
    saldo?: DecimalNullableFilter<"cuentafinanciera"> | Decimal | DecimalJsLike | number | string | null
    tipocuenta?: XOR<TipocuentaNullableScalarRelationFilter, tipocuentaWhereInput> | null
    transaccionfinanciera?: TransaccionfinancieraListRelationFilter
  }

  export type cuentafinancieraOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_id?: SortOrderInput | SortOrder
    saldo?: SortOrderInput | SortOrder
    tipocuenta?: tipocuentaOrderByWithRelationInput
    transaccionfinanciera?: transaccionfinancieraOrderByRelationAggregateInput
  }

  export type cuentafinancieraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: cuentafinancieraWhereInput | cuentafinancieraWhereInput[]
    OR?: cuentafinancieraWhereInput[]
    NOT?: cuentafinancieraWhereInput | cuentafinancieraWhereInput[]
    nombre?: StringFilter<"cuentafinanciera"> | string
    tipo_id?: IntNullableFilter<"cuentafinanciera"> | number | null
    saldo?: DecimalNullableFilter<"cuentafinanciera"> | Decimal | DecimalJsLike | number | string | null
    tipocuenta?: XOR<TipocuentaNullableScalarRelationFilter, tipocuentaWhereInput> | null
    transaccionfinanciera?: TransaccionfinancieraListRelationFilter
  }, "id">

  export type cuentafinancieraOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_id?: SortOrderInput | SortOrder
    saldo?: SortOrderInput | SortOrder
    _count?: cuentafinancieraCountOrderByAggregateInput
    _avg?: cuentafinancieraAvgOrderByAggregateInput
    _max?: cuentafinancieraMaxOrderByAggregateInput
    _min?: cuentafinancieraMinOrderByAggregateInput
    _sum?: cuentafinancieraSumOrderByAggregateInput
  }

  export type cuentafinancieraScalarWhereWithAggregatesInput = {
    AND?: cuentafinancieraScalarWhereWithAggregatesInput | cuentafinancieraScalarWhereWithAggregatesInput[]
    OR?: cuentafinancieraScalarWhereWithAggregatesInput[]
    NOT?: cuentafinancieraScalarWhereWithAggregatesInput | cuentafinancieraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"cuentafinanciera"> | number
    nombre?: StringWithAggregatesFilter<"cuentafinanciera"> | string
    tipo_id?: IntNullableWithAggregatesFilter<"cuentafinanciera"> | number | null
    saldo?: DecimalNullableWithAggregatesFilter<"cuentafinanciera"> | Decimal | DecimalJsLike | number | string | null
  }

  export type detallecompraWhereInput = {
    AND?: detallecompraWhereInput | detallecompraWhereInput[]
    OR?: detallecompraWhereInput[]
    NOT?: detallecompraWhereInput | detallecompraWhereInput[]
    id?: IntFilter<"detallecompra"> | number
    compra_id?: IntNullableFilter<"detallecompra"> | number | null
    lote_id?: IntNullableFilter<"detallecompra"> | number | null
    cantidad?: IntFilter<"detallecompra"> | number
    precio_unitario?: DecimalFilter<"detallecompra"> | Decimal | DecimalJsLike | number | string
    compra?: XOR<CompraNullableScalarRelationFilter, compraWhereInput> | null
    lote?: XOR<LoteNullableScalarRelationFilter, loteWhereInput> | null
  }

  export type detallecompraOrderByWithRelationInput = {
    id?: SortOrder
    compra_id?: SortOrderInput | SortOrder
    lote_id?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    compra?: compraOrderByWithRelationInput
    lote?: loteOrderByWithRelationInput
  }

  export type detallecompraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: detallecompraWhereInput | detallecompraWhereInput[]
    OR?: detallecompraWhereInput[]
    NOT?: detallecompraWhereInput | detallecompraWhereInput[]
    compra_id?: IntNullableFilter<"detallecompra"> | number | null
    lote_id?: IntNullableFilter<"detallecompra"> | number | null
    cantidad?: IntFilter<"detallecompra"> | number
    precio_unitario?: DecimalFilter<"detallecompra"> | Decimal | DecimalJsLike | number | string
    compra?: XOR<CompraNullableScalarRelationFilter, compraWhereInput> | null
    lote?: XOR<LoteNullableScalarRelationFilter, loteWhereInput> | null
  }, "id">

  export type detallecompraOrderByWithAggregationInput = {
    id?: SortOrder
    compra_id?: SortOrderInput | SortOrder
    lote_id?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    _count?: detallecompraCountOrderByAggregateInput
    _avg?: detallecompraAvgOrderByAggregateInput
    _max?: detallecompraMaxOrderByAggregateInput
    _min?: detallecompraMinOrderByAggregateInput
    _sum?: detallecompraSumOrderByAggregateInput
  }

  export type detallecompraScalarWhereWithAggregatesInput = {
    AND?: detallecompraScalarWhereWithAggregatesInput | detallecompraScalarWhereWithAggregatesInput[]
    OR?: detallecompraScalarWhereWithAggregatesInput[]
    NOT?: detallecompraScalarWhereWithAggregatesInput | detallecompraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"detallecompra"> | number
    compra_id?: IntNullableWithAggregatesFilter<"detallecompra"> | number | null
    lote_id?: IntNullableWithAggregatesFilter<"detallecompra"> | number | null
    cantidad?: IntWithAggregatesFilter<"detallecompra"> | number
    precio_unitario?: DecimalWithAggregatesFilter<"detallecompra"> | Decimal | DecimalJsLike | number | string
  }

  export type detalleordencompraWhereInput = {
    AND?: detalleordencompraWhereInput | detalleordencompraWhereInput[]
    OR?: detalleordencompraWhereInput[]
    NOT?: detalleordencompraWhereInput | detalleordencompraWhereInput[]
    id?: IntFilter<"detalleordencompra"> | number
    orden_id?: IntNullableFilter<"detalleordencompra"> | number | null
    producto_id?: IntNullableFilter<"detalleordencompra"> | number | null
    cantidad_solicitada?: IntFilter<"detalleordencompra"> | number
    precio_estimado?: DecimalNullableFilter<"detalleordencompra"> | Decimal | DecimalJsLike | number | string | null
    ordencompra?: XOR<OrdencompraNullableScalarRelationFilter, ordencompraWhereInput> | null
    producto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
  }

  export type detalleordencompraOrderByWithRelationInput = {
    id?: SortOrder
    orden_id?: SortOrderInput | SortOrder
    producto_id?: SortOrderInput | SortOrder
    cantidad_solicitada?: SortOrder
    precio_estimado?: SortOrderInput | SortOrder
    ordencompra?: ordencompraOrderByWithRelationInput
    producto?: productoOrderByWithRelationInput
  }

  export type detalleordencompraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: detalleordencompraWhereInput | detalleordencompraWhereInput[]
    OR?: detalleordencompraWhereInput[]
    NOT?: detalleordencompraWhereInput | detalleordencompraWhereInput[]
    orden_id?: IntNullableFilter<"detalleordencompra"> | number | null
    producto_id?: IntNullableFilter<"detalleordencompra"> | number | null
    cantidad_solicitada?: IntFilter<"detalleordencompra"> | number
    precio_estimado?: DecimalNullableFilter<"detalleordencompra"> | Decimal | DecimalJsLike | number | string | null
    ordencompra?: XOR<OrdencompraNullableScalarRelationFilter, ordencompraWhereInput> | null
    producto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
  }, "id">

  export type detalleordencompraOrderByWithAggregationInput = {
    id?: SortOrder
    orden_id?: SortOrderInput | SortOrder
    producto_id?: SortOrderInput | SortOrder
    cantidad_solicitada?: SortOrder
    precio_estimado?: SortOrderInput | SortOrder
    _count?: detalleordencompraCountOrderByAggregateInput
    _avg?: detalleordencompraAvgOrderByAggregateInput
    _max?: detalleordencompraMaxOrderByAggregateInput
    _min?: detalleordencompraMinOrderByAggregateInput
    _sum?: detalleordencompraSumOrderByAggregateInput
  }

  export type detalleordencompraScalarWhereWithAggregatesInput = {
    AND?: detalleordencompraScalarWhereWithAggregatesInput | detalleordencompraScalarWhereWithAggregatesInput[]
    OR?: detalleordencompraScalarWhereWithAggregatesInput[]
    NOT?: detalleordencompraScalarWhereWithAggregatesInput | detalleordencompraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"detalleordencompra"> | number
    orden_id?: IntNullableWithAggregatesFilter<"detalleordencompra"> | number | null
    producto_id?: IntNullableWithAggregatesFilter<"detalleordencompra"> | number | null
    cantidad_solicitada?: IntWithAggregatesFilter<"detalleordencompra"> | number
    precio_estimado?: DecimalNullableWithAggregatesFilter<"detalleordencompra"> | Decimal | DecimalJsLike | number | string | null
  }

  export type detalleventaWhereInput = {
    AND?: detalleventaWhereInput | detalleventaWhereInput[]
    OR?: detalleventaWhereInput[]
    NOT?: detalleventaWhereInput | detalleventaWhereInput[]
    id?: IntFilter<"detalleventa"> | number
    venta_id?: IntNullableFilter<"detalleventa"> | number | null
    codigo_barra_id?: IntNullableFilter<"detalleventa"> | number | null
    producto_id?: IntNullableFilter<"detalleventa"> | number | null
    tipo_venta_id?: IntNullableFilter<"detalleventa"> | number | null
    tipo_lista_id?: IntNullableFilter<"detalleventa"> | number | null
    cantidad?: IntFilter<"detalleventa"> | number
    precio_unitario?: DecimalFilter<"detalleventa"> | Decimal | DecimalJsLike | number | string
    codigobarra?: XOR<CodigobarraNullableScalarRelationFilter, codigobarraWhereInput> | null
    producto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
    tipolistaprecio?: XOR<TipolistaprecioNullableScalarRelationFilter, tipolistaprecioWhereInput> | null
    tipoventa?: XOR<TipoventaNullableScalarRelationFilter, tipoventaWhereInput> | null
    venta?: XOR<VentaNullableScalarRelationFilter, ventaWhereInput> | null
  }

  export type detalleventaOrderByWithRelationInput = {
    id?: SortOrder
    venta_id?: SortOrderInput | SortOrder
    codigo_barra_id?: SortOrderInput | SortOrder
    producto_id?: SortOrderInput | SortOrder
    tipo_venta_id?: SortOrderInput | SortOrder
    tipo_lista_id?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    codigobarra?: codigobarraOrderByWithRelationInput
    producto?: productoOrderByWithRelationInput
    tipolistaprecio?: tipolistaprecioOrderByWithRelationInput
    tipoventa?: tipoventaOrderByWithRelationInput
    venta?: ventaOrderByWithRelationInput
  }

  export type detalleventaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: detalleventaWhereInput | detalleventaWhereInput[]
    OR?: detalleventaWhereInput[]
    NOT?: detalleventaWhereInput | detalleventaWhereInput[]
    venta_id?: IntNullableFilter<"detalleventa"> | number | null
    codigo_barra_id?: IntNullableFilter<"detalleventa"> | number | null
    producto_id?: IntNullableFilter<"detalleventa"> | number | null
    tipo_venta_id?: IntNullableFilter<"detalleventa"> | number | null
    tipo_lista_id?: IntNullableFilter<"detalleventa"> | number | null
    cantidad?: IntFilter<"detalleventa"> | number
    precio_unitario?: DecimalFilter<"detalleventa"> | Decimal | DecimalJsLike | number | string
    codigobarra?: XOR<CodigobarraNullableScalarRelationFilter, codigobarraWhereInput> | null
    producto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
    tipolistaprecio?: XOR<TipolistaprecioNullableScalarRelationFilter, tipolistaprecioWhereInput> | null
    tipoventa?: XOR<TipoventaNullableScalarRelationFilter, tipoventaWhereInput> | null
    venta?: XOR<VentaNullableScalarRelationFilter, ventaWhereInput> | null
  }, "id">

  export type detalleventaOrderByWithAggregationInput = {
    id?: SortOrder
    venta_id?: SortOrderInput | SortOrder
    codigo_barra_id?: SortOrderInput | SortOrder
    producto_id?: SortOrderInput | SortOrder
    tipo_venta_id?: SortOrderInput | SortOrder
    tipo_lista_id?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    _count?: detalleventaCountOrderByAggregateInput
    _avg?: detalleventaAvgOrderByAggregateInput
    _max?: detalleventaMaxOrderByAggregateInput
    _min?: detalleventaMinOrderByAggregateInput
    _sum?: detalleventaSumOrderByAggregateInput
  }

  export type detalleventaScalarWhereWithAggregatesInput = {
    AND?: detalleventaScalarWhereWithAggregatesInput | detalleventaScalarWhereWithAggregatesInput[]
    OR?: detalleventaScalarWhereWithAggregatesInput[]
    NOT?: detalleventaScalarWhereWithAggregatesInput | detalleventaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"detalleventa"> | number
    venta_id?: IntNullableWithAggregatesFilter<"detalleventa"> | number | null
    codigo_barra_id?: IntNullableWithAggregatesFilter<"detalleventa"> | number | null
    producto_id?: IntNullableWithAggregatesFilter<"detalleventa"> | number | null
    tipo_venta_id?: IntNullableWithAggregatesFilter<"detalleventa"> | number | null
    tipo_lista_id?: IntNullableWithAggregatesFilter<"detalleventa"> | number | null
    cantidad?: IntWithAggregatesFilter<"detalleventa"> | number
    precio_unitario?: DecimalWithAggregatesFilter<"detalleventa"> | Decimal | DecimalJsLike | number | string
  }

  export type estadoordencompraWhereInput = {
    AND?: estadoordencompraWhereInput | estadoordencompraWhereInput[]
    OR?: estadoordencompraWhereInput[]
    NOT?: estadoordencompraWhereInput | estadoordencompraWhereInput[]
    id?: IntFilter<"estadoordencompra"> | number
    nombre?: StringFilter<"estadoordencompra"> | string
    ordencompra?: OrdencompraListRelationFilter
  }

  export type estadoordencompraOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    ordencompra?: ordencompraOrderByRelationAggregateInput
  }

  export type estadoordencompraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: estadoordencompraWhereInput | estadoordencompraWhereInput[]
    OR?: estadoordencompraWhereInput[]
    NOT?: estadoordencompraWhereInput | estadoordencompraWhereInput[]
    ordencompra?: OrdencompraListRelationFilter
  }, "id" | "nombre">

  export type estadoordencompraOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: estadoordencompraCountOrderByAggregateInput
    _avg?: estadoordencompraAvgOrderByAggregateInput
    _max?: estadoordencompraMaxOrderByAggregateInput
    _min?: estadoordencompraMinOrderByAggregateInput
    _sum?: estadoordencompraSumOrderByAggregateInput
  }

  export type estadoordencompraScalarWhereWithAggregatesInput = {
    AND?: estadoordencompraScalarWhereWithAggregatesInput | estadoordencompraScalarWhereWithAggregatesInput[]
    OR?: estadoordencompraScalarWhereWithAggregatesInput[]
    NOT?: estadoordencompraScalarWhereWithAggregatesInput | estadoordencompraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"estadoordencompra"> | number
    nombre?: StringWithAggregatesFilter<"estadoordencompra"> | string
  }

  export type estadoproduccionWhereInput = {
    AND?: estadoproduccionWhereInput | estadoproduccionWhereInput[]
    OR?: estadoproduccionWhereInput[]
    NOT?: estadoproduccionWhereInput | estadoproduccionWhereInput[]
    id?: IntFilter<"estadoproduccion"> | number
    nombre?: StringFilter<"estadoproduccion"> | string
    ordenproduccion?: OrdenproduccionListRelationFilter
  }

  export type estadoproduccionOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    ordenproduccion?: ordenproduccionOrderByRelationAggregateInput
  }

  export type estadoproduccionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: estadoproduccionWhereInput | estadoproduccionWhereInput[]
    OR?: estadoproduccionWhereInput[]
    NOT?: estadoproduccionWhereInput | estadoproduccionWhereInput[]
    ordenproduccion?: OrdenproduccionListRelationFilter
  }, "id" | "nombre">

  export type estadoproduccionOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: estadoproduccionCountOrderByAggregateInput
    _avg?: estadoproduccionAvgOrderByAggregateInput
    _max?: estadoproduccionMaxOrderByAggregateInput
    _min?: estadoproduccionMinOrderByAggregateInput
    _sum?: estadoproduccionSumOrderByAggregateInput
  }

  export type estadoproduccionScalarWhereWithAggregatesInput = {
    AND?: estadoproduccionScalarWhereWithAggregatesInput | estadoproduccionScalarWhereWithAggregatesInput[]
    OR?: estadoproduccionScalarWhereWithAggregatesInput[]
    NOT?: estadoproduccionScalarWhereWithAggregatesInput | estadoproduccionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"estadoproduccion"> | number
    nombre?: StringWithAggregatesFilter<"estadoproduccion"> | string
  }

  export type estadoventaWhereInput = {
    AND?: estadoventaWhereInput | estadoventaWhereInput[]
    OR?: estadoventaWhereInput[]
    NOT?: estadoventaWhereInput | estadoventaWhereInput[]
    id?: IntFilter<"estadoventa"> | number
    nombre?: StringFilter<"estadoventa"> | string
    venta?: VentaListRelationFilter
  }

  export type estadoventaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    venta?: ventaOrderByRelationAggregateInput
  }

  export type estadoventaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: estadoventaWhereInput | estadoventaWhereInput[]
    OR?: estadoventaWhereInput[]
    NOT?: estadoventaWhereInput | estadoventaWhereInput[]
    venta?: VentaListRelationFilter
  }, "id" | "nombre">

  export type estadoventaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: estadoventaCountOrderByAggregateInput
    _avg?: estadoventaAvgOrderByAggregateInput
    _max?: estadoventaMaxOrderByAggregateInput
    _min?: estadoventaMinOrderByAggregateInput
    _sum?: estadoventaSumOrderByAggregateInput
  }

  export type estadoventaScalarWhereWithAggregatesInput = {
    AND?: estadoventaScalarWhereWithAggregatesInput | estadoventaScalarWhereWithAggregatesInput[]
    OR?: estadoventaScalarWhereWithAggregatesInput[]
    NOT?: estadoventaScalarWhereWithAggregatesInput | estadoventaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"estadoventa"> | number
    nombre?: StringWithAggregatesFilter<"estadoventa"> | string
  }

  export type insumoproduccionWhereInput = {
    AND?: insumoproduccionWhereInput | insumoproduccionWhereInput[]
    OR?: insumoproduccionWhereInput[]
    NOT?: insumoproduccionWhereInput | insumoproduccionWhereInput[]
    id?: IntFilter<"insumoproduccion"> | number
    orden_id?: IntNullableFilter<"insumoproduccion"> | number | null
    producto_id?: IntNullableFilter<"insumoproduccion"> | number | null
    cantidad?: IntFilter<"insumoproduccion"> | number
    ordenproduccion?: XOR<OrdenproduccionNullableScalarRelationFilter, ordenproduccionWhereInput> | null
    producto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
  }

  export type insumoproduccionOrderByWithRelationInput = {
    id?: SortOrder
    orden_id?: SortOrderInput | SortOrder
    producto_id?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    ordenproduccion?: ordenproduccionOrderByWithRelationInput
    producto?: productoOrderByWithRelationInput
  }

  export type insumoproduccionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: insumoproduccionWhereInput | insumoproduccionWhereInput[]
    OR?: insumoproduccionWhereInput[]
    NOT?: insumoproduccionWhereInput | insumoproduccionWhereInput[]
    orden_id?: IntNullableFilter<"insumoproduccion"> | number | null
    producto_id?: IntNullableFilter<"insumoproduccion"> | number | null
    cantidad?: IntFilter<"insumoproduccion"> | number
    ordenproduccion?: XOR<OrdenproduccionNullableScalarRelationFilter, ordenproduccionWhereInput> | null
    producto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
  }, "id">

  export type insumoproduccionOrderByWithAggregationInput = {
    id?: SortOrder
    orden_id?: SortOrderInput | SortOrder
    producto_id?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    _count?: insumoproduccionCountOrderByAggregateInput
    _avg?: insumoproduccionAvgOrderByAggregateInput
    _max?: insumoproduccionMaxOrderByAggregateInput
    _min?: insumoproduccionMinOrderByAggregateInput
    _sum?: insumoproduccionSumOrderByAggregateInput
  }

  export type insumoproduccionScalarWhereWithAggregatesInput = {
    AND?: insumoproduccionScalarWhereWithAggregatesInput | insumoproduccionScalarWhereWithAggregatesInput[]
    OR?: insumoproduccionScalarWhereWithAggregatesInput[]
    NOT?: insumoproduccionScalarWhereWithAggregatesInput | insumoproduccionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"insumoproduccion"> | number
    orden_id?: IntNullableWithAggregatesFilter<"insumoproduccion"> | number | null
    producto_id?: IntNullableWithAggregatesFilter<"insumoproduccion"> | number | null
    cantidad?: IntWithAggregatesFilter<"insumoproduccion"> | number
  }

  export type listaprecioWhereInput = {
    AND?: listaprecioWhereInput | listaprecioWhereInput[]
    OR?: listaprecioWhereInput[]
    NOT?: listaprecioWhereInput | listaprecioWhereInput[]
    id?: IntFilter<"listaprecio"> | number
    producto_id?: IntNullableFilter<"listaprecio"> | number | null
    sucursal_id?: IntNullableFilter<"listaprecio"> | number | null
    tipo_lista_id?: IntNullableFilter<"listaprecio"> | number | null
    precio?: DecimalFilter<"listaprecio"> | Decimal | DecimalJsLike | number | string
    producto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
    sucursal?: XOR<SucursalNullableScalarRelationFilter, sucursalWhereInput> | null
    tipolistaprecio?: XOR<TipolistaprecioNullableScalarRelationFilter, tipolistaprecioWhereInput> | null
  }

  export type listaprecioOrderByWithRelationInput = {
    id?: SortOrder
    producto_id?: SortOrderInput | SortOrder
    sucursal_id?: SortOrderInput | SortOrder
    tipo_lista_id?: SortOrderInput | SortOrder
    precio?: SortOrder
    producto?: productoOrderByWithRelationInput
    sucursal?: sucursalOrderByWithRelationInput
    tipolistaprecio?: tipolistaprecioOrderByWithRelationInput
  }

  export type listaprecioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: listaprecioWhereInput | listaprecioWhereInput[]
    OR?: listaprecioWhereInput[]
    NOT?: listaprecioWhereInput | listaprecioWhereInput[]
    producto_id?: IntNullableFilter<"listaprecio"> | number | null
    sucursal_id?: IntNullableFilter<"listaprecio"> | number | null
    tipo_lista_id?: IntNullableFilter<"listaprecio"> | number | null
    precio?: DecimalFilter<"listaprecio"> | Decimal | DecimalJsLike | number | string
    producto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
    sucursal?: XOR<SucursalNullableScalarRelationFilter, sucursalWhereInput> | null
    tipolistaprecio?: XOR<TipolistaprecioNullableScalarRelationFilter, tipolistaprecioWhereInput> | null
  }, "id">

  export type listaprecioOrderByWithAggregationInput = {
    id?: SortOrder
    producto_id?: SortOrderInput | SortOrder
    sucursal_id?: SortOrderInput | SortOrder
    tipo_lista_id?: SortOrderInput | SortOrder
    precio?: SortOrder
    _count?: listaprecioCountOrderByAggregateInput
    _avg?: listaprecioAvgOrderByAggregateInput
    _max?: listaprecioMaxOrderByAggregateInput
    _min?: listaprecioMinOrderByAggregateInput
    _sum?: listaprecioSumOrderByAggregateInput
  }

  export type listaprecioScalarWhereWithAggregatesInput = {
    AND?: listaprecioScalarWhereWithAggregatesInput | listaprecioScalarWhereWithAggregatesInput[]
    OR?: listaprecioScalarWhereWithAggregatesInput[]
    NOT?: listaprecioScalarWhereWithAggregatesInput | listaprecioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"listaprecio"> | number
    producto_id?: IntNullableWithAggregatesFilter<"listaprecio"> | number | null
    sucursal_id?: IntNullableWithAggregatesFilter<"listaprecio"> | number | null
    tipo_lista_id?: IntNullableWithAggregatesFilter<"listaprecio"> | number | null
    precio?: DecimalWithAggregatesFilter<"listaprecio"> | Decimal | DecimalJsLike | number | string
  }

  export type loteWhereInput = {
    AND?: loteWhereInput | loteWhereInput[]
    OR?: loteWhereInput[]
    NOT?: loteWhereInput | loteWhereInput[]
    id?: IntFilter<"lote"> | number
    codigo_barra_id?: IntNullableFilter<"lote"> | number | null
    fecha_vencimiento?: DateTimeNullableFilter<"lote"> | Date | string | null
    cantidad?: IntFilter<"lote"> | number
    ubicacion?: StringNullableFilter<"lote"> | string | null
    detallecompra?: DetallecompraListRelationFilter
    codigobarra?: XOR<CodigobarraNullableScalarRelationFilter, codigobarraWhereInput> | null
    productoterminado?: ProductoterminadoListRelationFilter
  }

  export type loteOrderByWithRelationInput = {
    id?: SortOrder
    codigo_barra_id?: SortOrderInput | SortOrder
    fecha_vencimiento?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    ubicacion?: SortOrderInput | SortOrder
    detallecompra?: detallecompraOrderByRelationAggregateInput
    codigobarra?: codigobarraOrderByWithRelationInput
    productoterminado?: productoterminadoOrderByRelationAggregateInput
  }

  export type loteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: loteWhereInput | loteWhereInput[]
    OR?: loteWhereInput[]
    NOT?: loteWhereInput | loteWhereInput[]
    codigo_barra_id?: IntNullableFilter<"lote"> | number | null
    fecha_vencimiento?: DateTimeNullableFilter<"lote"> | Date | string | null
    cantidad?: IntFilter<"lote"> | number
    ubicacion?: StringNullableFilter<"lote"> | string | null
    detallecompra?: DetallecompraListRelationFilter
    codigobarra?: XOR<CodigobarraNullableScalarRelationFilter, codigobarraWhereInput> | null
    productoterminado?: ProductoterminadoListRelationFilter
  }, "id">

  export type loteOrderByWithAggregationInput = {
    id?: SortOrder
    codigo_barra_id?: SortOrderInput | SortOrder
    fecha_vencimiento?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    ubicacion?: SortOrderInput | SortOrder
    _count?: loteCountOrderByAggregateInput
    _avg?: loteAvgOrderByAggregateInput
    _max?: loteMaxOrderByAggregateInput
    _min?: loteMinOrderByAggregateInput
    _sum?: loteSumOrderByAggregateInput
  }

  export type loteScalarWhereWithAggregatesInput = {
    AND?: loteScalarWhereWithAggregatesInput | loteScalarWhereWithAggregatesInput[]
    OR?: loteScalarWhereWithAggregatesInput[]
    NOT?: loteScalarWhereWithAggregatesInput | loteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"lote"> | number
    codigo_barra_id?: IntNullableWithAggregatesFilter<"lote"> | number | null
    fecha_vencimiento?: DateTimeNullableWithAggregatesFilter<"lote"> | Date | string | null
    cantidad?: IntWithAggregatesFilter<"lote"> | number
    ubicacion?: StringNullableWithAggregatesFilter<"lote"> | string | null
  }

  export type ordencompraWhereInput = {
    AND?: ordencompraWhereInput | ordencompraWhereInput[]
    OR?: ordencompraWhereInput[]
    NOT?: ordencompraWhereInput | ordencompraWhereInput[]
    id?: IntFilter<"ordencompra"> | number
    proveedor_id?: IntNullableFilter<"ordencompra"> | number | null
    fecha?: DateTimeFilter<"ordencompra"> | Date | string
    estado_id?: IntNullableFilter<"ordencompra"> | number | null
    observaciones?: StringNullableFilter<"ordencompra"> | string | null
    detalleordencompra?: DetalleordencompraListRelationFilter
    estadoordencompra?: XOR<EstadoordencompraNullableScalarRelationFilter, estadoordencompraWhereInput> | null
    proveedor?: XOR<ProveedorNullableScalarRelationFilter, proveedorWhereInput> | null
    ordencompracompra?: OrdencompracompraListRelationFilter
  }

  export type ordencompraOrderByWithRelationInput = {
    id?: SortOrder
    proveedor_id?: SortOrderInput | SortOrder
    fecha?: SortOrder
    estado_id?: SortOrderInput | SortOrder
    observaciones?: SortOrderInput | SortOrder
    detalleordencompra?: detalleordencompraOrderByRelationAggregateInput
    estadoordencompra?: estadoordencompraOrderByWithRelationInput
    proveedor?: proveedorOrderByWithRelationInput
    ordencompracompra?: ordencompracompraOrderByRelationAggregateInput
  }

  export type ordencompraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ordencompraWhereInput | ordencompraWhereInput[]
    OR?: ordencompraWhereInput[]
    NOT?: ordencompraWhereInput | ordencompraWhereInput[]
    proveedor_id?: IntNullableFilter<"ordencompra"> | number | null
    fecha?: DateTimeFilter<"ordencompra"> | Date | string
    estado_id?: IntNullableFilter<"ordencompra"> | number | null
    observaciones?: StringNullableFilter<"ordencompra"> | string | null
    detalleordencompra?: DetalleordencompraListRelationFilter
    estadoordencompra?: XOR<EstadoordencompraNullableScalarRelationFilter, estadoordencompraWhereInput> | null
    proveedor?: XOR<ProveedorNullableScalarRelationFilter, proveedorWhereInput> | null
    ordencompracompra?: OrdencompracompraListRelationFilter
  }, "id">

  export type ordencompraOrderByWithAggregationInput = {
    id?: SortOrder
    proveedor_id?: SortOrderInput | SortOrder
    fecha?: SortOrder
    estado_id?: SortOrderInput | SortOrder
    observaciones?: SortOrderInput | SortOrder
    _count?: ordencompraCountOrderByAggregateInput
    _avg?: ordencompraAvgOrderByAggregateInput
    _max?: ordencompraMaxOrderByAggregateInput
    _min?: ordencompraMinOrderByAggregateInput
    _sum?: ordencompraSumOrderByAggregateInput
  }

  export type ordencompraScalarWhereWithAggregatesInput = {
    AND?: ordencompraScalarWhereWithAggregatesInput | ordencompraScalarWhereWithAggregatesInput[]
    OR?: ordencompraScalarWhereWithAggregatesInput[]
    NOT?: ordencompraScalarWhereWithAggregatesInput | ordencompraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ordencompra"> | number
    proveedor_id?: IntNullableWithAggregatesFilter<"ordencompra"> | number | null
    fecha?: DateTimeWithAggregatesFilter<"ordencompra"> | Date | string
    estado_id?: IntNullableWithAggregatesFilter<"ordencompra"> | number | null
    observaciones?: StringNullableWithAggregatesFilter<"ordencompra"> | string | null
  }

  export type ordencompracompraWhereInput = {
    AND?: ordencompracompraWhereInput | ordencompracompraWhereInput[]
    OR?: ordencompracompraWhereInput[]
    NOT?: ordencompracompraWhereInput | ordencompracompraWhereInput[]
    id?: IntFilter<"ordencompracompra"> | number
    orden_id?: IntNullableFilter<"ordencompracompra"> | number | null
    compra_id?: IntNullableFilter<"ordencompracompra"> | number | null
    compra?: XOR<CompraNullableScalarRelationFilter, compraWhereInput> | null
    ordencompra?: XOR<OrdencompraNullableScalarRelationFilter, ordencompraWhereInput> | null
  }

  export type ordencompracompraOrderByWithRelationInput = {
    id?: SortOrder
    orden_id?: SortOrderInput | SortOrder
    compra_id?: SortOrderInput | SortOrder
    compra?: compraOrderByWithRelationInput
    ordencompra?: ordencompraOrderByWithRelationInput
  }

  export type ordencompracompraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ordencompracompraWhereInput | ordencompracompraWhereInput[]
    OR?: ordencompracompraWhereInput[]
    NOT?: ordencompracompraWhereInput | ordencompracompraWhereInput[]
    orden_id?: IntNullableFilter<"ordencompracompra"> | number | null
    compra_id?: IntNullableFilter<"ordencompracompra"> | number | null
    compra?: XOR<CompraNullableScalarRelationFilter, compraWhereInput> | null
    ordencompra?: XOR<OrdencompraNullableScalarRelationFilter, ordencompraWhereInput> | null
  }, "id">

  export type ordencompracompraOrderByWithAggregationInput = {
    id?: SortOrder
    orden_id?: SortOrderInput | SortOrder
    compra_id?: SortOrderInput | SortOrder
    _count?: ordencompracompraCountOrderByAggregateInput
    _avg?: ordencompracompraAvgOrderByAggregateInput
    _max?: ordencompracompraMaxOrderByAggregateInput
    _min?: ordencompracompraMinOrderByAggregateInput
    _sum?: ordencompracompraSumOrderByAggregateInput
  }

  export type ordencompracompraScalarWhereWithAggregatesInput = {
    AND?: ordencompracompraScalarWhereWithAggregatesInput | ordencompracompraScalarWhereWithAggregatesInput[]
    OR?: ordencompracompraScalarWhereWithAggregatesInput[]
    NOT?: ordencompracompraScalarWhereWithAggregatesInput | ordencompracompraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ordencompracompra"> | number
    orden_id?: IntNullableWithAggregatesFilter<"ordencompracompra"> | number | null
    compra_id?: IntNullableWithAggregatesFilter<"ordencompracompra"> | number | null
  }

  export type ordenproduccionWhereInput = {
    AND?: ordenproduccionWhereInput | ordenproduccionWhereInput[]
    OR?: ordenproduccionWhereInput[]
    NOT?: ordenproduccionWhereInput | ordenproduccionWhereInput[]
    id?: IntFilter<"ordenproduccion"> | number
    producto_id?: IntNullableFilter<"ordenproduccion"> | number | null
    fecha_inicio?: DateTimeFilter<"ordenproduccion"> | Date | string
    fecha_fin?: DateTimeNullableFilter<"ordenproduccion"> | Date | string | null
    estado_id?: IntNullableFilter<"ordenproduccion"> | number | null
    insumoproduccion?: InsumoproduccionListRelationFilter
    estadoproduccion?: XOR<EstadoproduccionNullableScalarRelationFilter, estadoproduccionWhereInput> | null
    producto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
    productoterminado?: ProductoterminadoListRelationFilter
  }

  export type ordenproduccionOrderByWithRelationInput = {
    id?: SortOrder
    producto_id?: SortOrderInput | SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrderInput | SortOrder
    estado_id?: SortOrderInput | SortOrder
    insumoproduccion?: insumoproduccionOrderByRelationAggregateInput
    estadoproduccion?: estadoproduccionOrderByWithRelationInput
    producto?: productoOrderByWithRelationInput
    productoterminado?: productoterminadoOrderByRelationAggregateInput
  }

  export type ordenproduccionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ordenproduccionWhereInput | ordenproduccionWhereInput[]
    OR?: ordenproduccionWhereInput[]
    NOT?: ordenproduccionWhereInput | ordenproduccionWhereInput[]
    producto_id?: IntNullableFilter<"ordenproduccion"> | number | null
    fecha_inicio?: DateTimeFilter<"ordenproduccion"> | Date | string
    fecha_fin?: DateTimeNullableFilter<"ordenproduccion"> | Date | string | null
    estado_id?: IntNullableFilter<"ordenproduccion"> | number | null
    insumoproduccion?: InsumoproduccionListRelationFilter
    estadoproduccion?: XOR<EstadoproduccionNullableScalarRelationFilter, estadoproduccionWhereInput> | null
    producto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
    productoterminado?: ProductoterminadoListRelationFilter
  }, "id">

  export type ordenproduccionOrderByWithAggregationInput = {
    id?: SortOrder
    producto_id?: SortOrderInput | SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrderInput | SortOrder
    estado_id?: SortOrderInput | SortOrder
    _count?: ordenproduccionCountOrderByAggregateInput
    _avg?: ordenproduccionAvgOrderByAggregateInput
    _max?: ordenproduccionMaxOrderByAggregateInput
    _min?: ordenproduccionMinOrderByAggregateInput
    _sum?: ordenproduccionSumOrderByAggregateInput
  }

  export type ordenproduccionScalarWhereWithAggregatesInput = {
    AND?: ordenproduccionScalarWhereWithAggregatesInput | ordenproduccionScalarWhereWithAggregatesInput[]
    OR?: ordenproduccionScalarWhereWithAggregatesInput[]
    NOT?: ordenproduccionScalarWhereWithAggregatesInput | ordenproduccionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ordenproduccion"> | number
    producto_id?: IntNullableWithAggregatesFilter<"ordenproduccion"> | number | null
    fecha_inicio?: DateTimeWithAggregatesFilter<"ordenproduccion"> | Date | string
    fecha_fin?: DateTimeNullableWithAggregatesFilter<"ordenproduccion"> | Date | string | null
    estado_id?: IntNullableWithAggregatesFilter<"ordenproduccion"> | number | null
  }

  export type permisoWhereInput = {
    AND?: permisoWhereInput | permisoWhereInput[]
    OR?: permisoWhereInput[]
    NOT?: permisoWhereInput | permisoWhereInput[]
    id?: IntFilter<"permiso"> | number
    rol_id?: IntNullableFilter<"permiso"> | number | null
    screen_id?: IntNullableFilter<"permiso"> | number | null
    puede_ver?: BoolNullableFilter<"permiso"> | boolean | null
    puede_crear?: BoolNullableFilter<"permiso"> | boolean | null
    puede_editar?: BoolNullableFilter<"permiso"> | boolean | null
    puede_eliminar?: BoolNullableFilter<"permiso"> | boolean | null
    rol?: XOR<RolNullableScalarRelationFilter, rolWhereInput> | null
    screen?: XOR<ScreenNullableScalarRelationFilter, screenWhereInput> | null
  }

  export type permisoOrderByWithRelationInput = {
    id?: SortOrder
    rol_id?: SortOrderInput | SortOrder
    screen_id?: SortOrderInput | SortOrder
    puede_ver?: SortOrderInput | SortOrder
    puede_crear?: SortOrderInput | SortOrder
    puede_editar?: SortOrderInput | SortOrder
    puede_eliminar?: SortOrderInput | SortOrder
    rol?: rolOrderByWithRelationInput
    screen?: screenOrderByWithRelationInput
  }

  export type permisoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: permisoWhereInput | permisoWhereInput[]
    OR?: permisoWhereInput[]
    NOT?: permisoWhereInput | permisoWhereInput[]
    rol_id?: IntNullableFilter<"permiso"> | number | null
    screen_id?: IntNullableFilter<"permiso"> | number | null
    puede_ver?: BoolNullableFilter<"permiso"> | boolean | null
    puede_crear?: BoolNullableFilter<"permiso"> | boolean | null
    puede_editar?: BoolNullableFilter<"permiso"> | boolean | null
    puede_eliminar?: BoolNullableFilter<"permiso"> | boolean | null
    rol?: XOR<RolNullableScalarRelationFilter, rolWhereInput> | null
    screen?: XOR<ScreenNullableScalarRelationFilter, screenWhereInput> | null
  }, "id">

  export type permisoOrderByWithAggregationInput = {
    id?: SortOrder
    rol_id?: SortOrderInput | SortOrder
    screen_id?: SortOrderInput | SortOrder
    puede_ver?: SortOrderInput | SortOrder
    puede_crear?: SortOrderInput | SortOrder
    puede_editar?: SortOrderInput | SortOrder
    puede_eliminar?: SortOrderInput | SortOrder
    _count?: permisoCountOrderByAggregateInput
    _avg?: permisoAvgOrderByAggregateInput
    _max?: permisoMaxOrderByAggregateInput
    _min?: permisoMinOrderByAggregateInput
    _sum?: permisoSumOrderByAggregateInput
  }

  export type permisoScalarWhereWithAggregatesInput = {
    AND?: permisoScalarWhereWithAggregatesInput | permisoScalarWhereWithAggregatesInput[]
    OR?: permisoScalarWhereWithAggregatesInput[]
    NOT?: permisoScalarWhereWithAggregatesInput | permisoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"permiso"> | number
    rol_id?: IntNullableWithAggregatesFilter<"permiso"> | number | null
    screen_id?: IntNullableWithAggregatesFilter<"permiso"> | number | null
    puede_ver?: BoolNullableWithAggregatesFilter<"permiso"> | boolean | null
    puede_crear?: BoolNullableWithAggregatesFilter<"permiso"> | boolean | null
    puede_editar?: BoolNullableWithAggregatesFilter<"permiso"> | boolean | null
    puede_eliminar?: BoolNullableWithAggregatesFilter<"permiso"> | boolean | null
  }

  export type productoWhereInput = {
    AND?: productoWhereInput | productoWhereInput[]
    OR?: productoWhereInput[]
    NOT?: productoWhereInput | productoWhereInput[]
    id?: IntFilter<"producto"> | number
    nombre?: StringFilter<"producto"> | string
    descripcion?: StringNullableFilter<"producto"> | string | null
    es_combo?: BoolNullableFilter<"producto"> | boolean | null
    stock_minimo?: IntNullableFilter<"producto"> | number | null
    codigobarra?: CodigobarraListRelationFilter
    detalleordencompra?: DetalleordencompraListRelationFilter
    detalleventa?: DetalleventaListRelationFilter
    insumoproduccion?: InsumoproduccionListRelationFilter
    listaprecio?: ListaprecioListRelationFilter
    ordenproduccion?: OrdenproduccionListRelationFilter
    productocombo_productocombo_combo_idToproducto?: ProductocomboListRelationFilter
    productocombo_productocombo_producto_idToproducto?: ProductocomboListRelationFilter
  }

  export type productoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    es_combo?: SortOrderInput | SortOrder
    stock_minimo?: SortOrderInput | SortOrder
    codigobarra?: codigobarraOrderByRelationAggregateInput
    detalleordencompra?: detalleordencompraOrderByRelationAggregateInput
    detalleventa?: detalleventaOrderByRelationAggregateInput
    insumoproduccion?: insumoproduccionOrderByRelationAggregateInput
    listaprecio?: listaprecioOrderByRelationAggregateInput
    ordenproduccion?: ordenproduccionOrderByRelationAggregateInput
    productocombo_productocombo_combo_idToproducto?: productocomboOrderByRelationAggregateInput
    productocombo_productocombo_producto_idToproducto?: productocomboOrderByRelationAggregateInput
  }

  export type productoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: productoWhereInput | productoWhereInput[]
    OR?: productoWhereInput[]
    NOT?: productoWhereInput | productoWhereInput[]
    nombre?: StringFilter<"producto"> | string
    descripcion?: StringNullableFilter<"producto"> | string | null
    es_combo?: BoolNullableFilter<"producto"> | boolean | null
    stock_minimo?: IntNullableFilter<"producto"> | number | null
    codigobarra?: CodigobarraListRelationFilter
    detalleordencompra?: DetalleordencompraListRelationFilter
    detalleventa?: DetalleventaListRelationFilter
    insumoproduccion?: InsumoproduccionListRelationFilter
    listaprecio?: ListaprecioListRelationFilter
    ordenproduccion?: OrdenproduccionListRelationFilter
    productocombo_productocombo_combo_idToproducto?: ProductocomboListRelationFilter
    productocombo_productocombo_producto_idToproducto?: ProductocomboListRelationFilter
  }, "id">

  export type productoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    es_combo?: SortOrderInput | SortOrder
    stock_minimo?: SortOrderInput | SortOrder
    _count?: productoCountOrderByAggregateInput
    _avg?: productoAvgOrderByAggregateInput
    _max?: productoMaxOrderByAggregateInput
    _min?: productoMinOrderByAggregateInput
    _sum?: productoSumOrderByAggregateInput
  }

  export type productoScalarWhereWithAggregatesInput = {
    AND?: productoScalarWhereWithAggregatesInput | productoScalarWhereWithAggregatesInput[]
    OR?: productoScalarWhereWithAggregatesInput[]
    NOT?: productoScalarWhereWithAggregatesInput | productoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"producto"> | number
    nombre?: StringWithAggregatesFilter<"producto"> | string
    descripcion?: StringNullableWithAggregatesFilter<"producto"> | string | null
    es_combo?: BoolNullableWithAggregatesFilter<"producto"> | boolean | null
    stock_minimo?: IntNullableWithAggregatesFilter<"producto"> | number | null
  }

  export type productocomboWhereInput = {
    AND?: productocomboWhereInput | productocomboWhereInput[]
    OR?: productocomboWhereInput[]
    NOT?: productocomboWhereInput | productocomboWhereInput[]
    id?: IntFilter<"productocombo"> | number
    combo_id?: IntNullableFilter<"productocombo"> | number | null
    producto_id?: IntNullableFilter<"productocombo"> | number | null
    cantidad?: IntFilter<"productocombo"> | number
    producto_productocombo_combo_idToproducto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
    producto_productocombo_producto_idToproducto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
  }

  export type productocomboOrderByWithRelationInput = {
    id?: SortOrder
    combo_id?: SortOrderInput | SortOrder
    producto_id?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    producto_productocombo_combo_idToproducto?: productoOrderByWithRelationInput
    producto_productocombo_producto_idToproducto?: productoOrderByWithRelationInput
  }

  export type productocomboWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: productocomboWhereInput | productocomboWhereInput[]
    OR?: productocomboWhereInput[]
    NOT?: productocomboWhereInput | productocomboWhereInput[]
    combo_id?: IntNullableFilter<"productocombo"> | number | null
    producto_id?: IntNullableFilter<"productocombo"> | number | null
    cantidad?: IntFilter<"productocombo"> | number
    producto_productocombo_combo_idToproducto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
    producto_productocombo_producto_idToproducto?: XOR<ProductoNullableScalarRelationFilter, productoWhereInput> | null
  }, "id">

  export type productocomboOrderByWithAggregationInput = {
    id?: SortOrder
    combo_id?: SortOrderInput | SortOrder
    producto_id?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    _count?: productocomboCountOrderByAggregateInput
    _avg?: productocomboAvgOrderByAggregateInput
    _max?: productocomboMaxOrderByAggregateInput
    _min?: productocomboMinOrderByAggregateInput
    _sum?: productocomboSumOrderByAggregateInput
  }

  export type productocomboScalarWhereWithAggregatesInput = {
    AND?: productocomboScalarWhereWithAggregatesInput | productocomboScalarWhereWithAggregatesInput[]
    OR?: productocomboScalarWhereWithAggregatesInput[]
    NOT?: productocomboScalarWhereWithAggregatesInput | productocomboScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"productocombo"> | number
    combo_id?: IntNullableWithAggregatesFilter<"productocombo"> | number | null
    producto_id?: IntNullableWithAggregatesFilter<"productocombo"> | number | null
    cantidad?: IntWithAggregatesFilter<"productocombo"> | number
  }

  export type productoterminadoWhereInput = {
    AND?: productoterminadoWhereInput | productoterminadoWhereInput[]
    OR?: productoterminadoWhereInput[]
    NOT?: productoterminadoWhereInput | productoterminadoWhereInput[]
    id?: IntFilter<"productoterminado"> | number
    orden_id?: IntNullableFilter<"productoterminado"> | number | null
    lote_id?: IntNullableFilter<"productoterminado"> | number | null
    cantidad?: IntFilter<"productoterminado"> | number
    lote?: XOR<LoteNullableScalarRelationFilter, loteWhereInput> | null
    ordenproduccion?: XOR<OrdenproduccionNullableScalarRelationFilter, ordenproduccionWhereInput> | null
  }

  export type productoterminadoOrderByWithRelationInput = {
    id?: SortOrder
    orden_id?: SortOrderInput | SortOrder
    lote_id?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    lote?: loteOrderByWithRelationInput
    ordenproduccion?: ordenproduccionOrderByWithRelationInput
  }

  export type productoterminadoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: productoterminadoWhereInput | productoterminadoWhereInput[]
    OR?: productoterminadoWhereInput[]
    NOT?: productoterminadoWhereInput | productoterminadoWhereInput[]
    orden_id?: IntNullableFilter<"productoterminado"> | number | null
    lote_id?: IntNullableFilter<"productoterminado"> | number | null
    cantidad?: IntFilter<"productoterminado"> | number
    lote?: XOR<LoteNullableScalarRelationFilter, loteWhereInput> | null
    ordenproduccion?: XOR<OrdenproduccionNullableScalarRelationFilter, ordenproduccionWhereInput> | null
  }, "id">

  export type productoterminadoOrderByWithAggregationInput = {
    id?: SortOrder
    orden_id?: SortOrderInput | SortOrder
    lote_id?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    _count?: productoterminadoCountOrderByAggregateInput
    _avg?: productoterminadoAvgOrderByAggregateInput
    _max?: productoterminadoMaxOrderByAggregateInput
    _min?: productoterminadoMinOrderByAggregateInput
    _sum?: productoterminadoSumOrderByAggregateInput
  }

  export type productoterminadoScalarWhereWithAggregatesInput = {
    AND?: productoterminadoScalarWhereWithAggregatesInput | productoterminadoScalarWhereWithAggregatesInput[]
    OR?: productoterminadoScalarWhereWithAggregatesInput[]
    NOT?: productoterminadoScalarWhereWithAggregatesInput | productoterminadoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"productoterminado"> | number
    orden_id?: IntNullableWithAggregatesFilter<"productoterminado"> | number | null
    lote_id?: IntNullableWithAggregatesFilter<"productoterminado"> | number | null
    cantidad?: IntWithAggregatesFilter<"productoterminado"> | number
  }

  export type proveedorWhereInput = {
    AND?: proveedorWhereInput | proveedorWhereInput[]
    OR?: proveedorWhereInput[]
    NOT?: proveedorWhereInput | proveedorWhereInput[]
    id?: IntFilter<"proveedor"> | number
    nombre?: StringFilter<"proveedor"> | string
    nit?: StringFilter<"proveedor"> | string
    contacto?: StringNullableFilter<"proveedor"> | string | null
    telefono?: StringNullableFilter<"proveedor"> | string | null
    correo?: StringNullableFilter<"proveedor"> | string | null
    direccion?: StringNullableFilter<"proveedor"> | string | null
    tipo?: StringNullableFilter<"proveedor"> | string | null
    compra?: CompraListRelationFilter
    ordencompra?: OrdencompraListRelationFilter
  }

  export type proveedorOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    nit?: SortOrder
    contacto?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    correo?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    tipo?: SortOrderInput | SortOrder
    compra?: compraOrderByRelationAggregateInput
    ordencompra?: ordencompraOrderByRelationAggregateInput
  }

  export type proveedorWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nit?: string
    AND?: proveedorWhereInput | proveedorWhereInput[]
    OR?: proveedorWhereInput[]
    NOT?: proveedorWhereInput | proveedorWhereInput[]
    nombre?: StringFilter<"proveedor"> | string
    contacto?: StringNullableFilter<"proveedor"> | string | null
    telefono?: StringNullableFilter<"proveedor"> | string | null
    correo?: StringNullableFilter<"proveedor"> | string | null
    direccion?: StringNullableFilter<"proveedor"> | string | null
    tipo?: StringNullableFilter<"proveedor"> | string | null
    compra?: CompraListRelationFilter
    ordencompra?: OrdencompraListRelationFilter
  }, "id" | "nit">

  export type proveedorOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    nit?: SortOrder
    contacto?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    correo?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    tipo?: SortOrderInput | SortOrder
    _count?: proveedorCountOrderByAggregateInput
    _avg?: proveedorAvgOrderByAggregateInput
    _max?: proveedorMaxOrderByAggregateInput
    _min?: proveedorMinOrderByAggregateInput
    _sum?: proveedorSumOrderByAggregateInput
  }

  export type proveedorScalarWhereWithAggregatesInput = {
    AND?: proveedorScalarWhereWithAggregatesInput | proveedorScalarWhereWithAggregatesInput[]
    OR?: proveedorScalarWhereWithAggregatesInput[]
    NOT?: proveedorScalarWhereWithAggregatesInput | proveedorScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"proveedor"> | number
    nombre?: StringWithAggregatesFilter<"proveedor"> | string
    nit?: StringWithAggregatesFilter<"proveedor"> | string
    contacto?: StringNullableWithAggregatesFilter<"proveedor"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"proveedor"> | string | null
    correo?: StringNullableWithAggregatesFilter<"proveedor"> | string | null
    direccion?: StringNullableWithAggregatesFilter<"proveedor"> | string | null
    tipo?: StringNullableWithAggregatesFilter<"proveedor"> | string | null
  }

  export type rolWhereInput = {
    AND?: rolWhereInput | rolWhereInput[]
    OR?: rolWhereInput[]
    NOT?: rolWhereInput | rolWhereInput[]
    id?: IntFilter<"rol"> | number
    nombre?: StringFilter<"rol"> | string
    permiso?: PermisoListRelationFilter
    usuario?: UsuarioListRelationFilter
  }

  export type rolOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    permiso?: permisoOrderByRelationAggregateInput
    usuario?: usuarioOrderByRelationAggregateInput
  }

  export type rolWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: rolWhereInput | rolWhereInput[]
    OR?: rolWhereInput[]
    NOT?: rolWhereInput | rolWhereInput[]
    permiso?: PermisoListRelationFilter
    usuario?: UsuarioListRelationFilter
  }, "id" | "nombre">

  export type rolOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: rolCountOrderByAggregateInput
    _avg?: rolAvgOrderByAggregateInput
    _max?: rolMaxOrderByAggregateInput
    _min?: rolMinOrderByAggregateInput
    _sum?: rolSumOrderByAggregateInput
  }

  export type rolScalarWhereWithAggregatesInput = {
    AND?: rolScalarWhereWithAggregatesInput | rolScalarWhereWithAggregatesInput[]
    OR?: rolScalarWhereWithAggregatesInput[]
    NOT?: rolScalarWhereWithAggregatesInput | rolScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"rol"> | number
    nombre?: StringWithAggregatesFilter<"rol"> | string
  }

  export type screenWhereInput = {
    AND?: screenWhereInput | screenWhereInput[]
    OR?: screenWhereInput[]
    NOT?: screenWhereInput | screenWhereInput[]
    id?: IntFilter<"screen"> | number
    nombre?: StringFilter<"screen"> | string
    descripcion?: StringNullableFilter<"screen"> | string | null
    permiso?: PermisoListRelationFilter
  }

  export type screenOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    permiso?: permisoOrderByRelationAggregateInput
  }

  export type screenWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: screenWhereInput | screenWhereInput[]
    OR?: screenWhereInput[]
    NOT?: screenWhereInput | screenWhereInput[]
    descripcion?: StringNullableFilter<"screen"> | string | null
    permiso?: PermisoListRelationFilter
  }, "id" | "nombre">

  export type screenOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: screenCountOrderByAggregateInput
    _avg?: screenAvgOrderByAggregateInput
    _max?: screenMaxOrderByAggregateInput
    _min?: screenMinOrderByAggregateInput
    _sum?: screenSumOrderByAggregateInput
  }

  export type screenScalarWhereWithAggregatesInput = {
    AND?: screenScalarWhereWithAggregatesInput | screenScalarWhereWithAggregatesInput[]
    OR?: screenScalarWhereWithAggregatesInput[]
    NOT?: screenScalarWhereWithAggregatesInput | screenScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"screen"> | number
    nombre?: StringWithAggregatesFilter<"screen"> | string
    descripcion?: StringNullableWithAggregatesFilter<"screen"> | string | null
  }

  export type sucursalWhereInput = {
    AND?: sucursalWhereInput | sucursalWhereInput[]
    OR?: sucursalWhereInput[]
    NOT?: sucursalWhereInput | sucursalWhereInput[]
    id?: IntFilter<"sucursal"> | number
    nombre?: StringFilter<"sucursal"> | string
    direccion?: StringNullableFilter<"sucursal"> | string | null
    listaprecio?: ListaprecioListRelationFilter
  }

  export type sucursalOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrderInput | SortOrder
    listaprecio?: listaprecioOrderByRelationAggregateInput
  }

  export type sucursalWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sucursalWhereInput | sucursalWhereInput[]
    OR?: sucursalWhereInput[]
    NOT?: sucursalWhereInput | sucursalWhereInput[]
    nombre?: StringFilter<"sucursal"> | string
    direccion?: StringNullableFilter<"sucursal"> | string | null
    listaprecio?: ListaprecioListRelationFilter
  }, "id">

  export type sucursalOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrderInput | SortOrder
    _count?: sucursalCountOrderByAggregateInput
    _avg?: sucursalAvgOrderByAggregateInput
    _max?: sucursalMaxOrderByAggregateInput
    _min?: sucursalMinOrderByAggregateInput
    _sum?: sucursalSumOrderByAggregateInput
  }

  export type sucursalScalarWhereWithAggregatesInput = {
    AND?: sucursalScalarWhereWithAggregatesInput | sucursalScalarWhereWithAggregatesInput[]
    OR?: sucursalScalarWhereWithAggregatesInput[]
    NOT?: sucursalScalarWhereWithAggregatesInput | sucursalScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sucursal"> | number
    nombre?: StringWithAggregatesFilter<"sucursal"> | string
    direccion?: StringNullableWithAggregatesFilter<"sucursal"> | string | null
  }

  export type tipocuentaWhereInput = {
    AND?: tipocuentaWhereInput | tipocuentaWhereInput[]
    OR?: tipocuentaWhereInput[]
    NOT?: tipocuentaWhereInput | tipocuentaWhereInput[]
    id?: IntFilter<"tipocuenta"> | number
    nombre?: StringFilter<"tipocuenta"> | string
    cuentafinanciera?: CuentafinancieraListRelationFilter
  }

  export type tipocuentaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    cuentafinanciera?: cuentafinancieraOrderByRelationAggregateInput
  }

  export type tipocuentaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: tipocuentaWhereInput | tipocuentaWhereInput[]
    OR?: tipocuentaWhereInput[]
    NOT?: tipocuentaWhereInput | tipocuentaWhereInput[]
    cuentafinanciera?: CuentafinancieraListRelationFilter
  }, "id" | "nombre">

  export type tipocuentaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: tipocuentaCountOrderByAggregateInput
    _avg?: tipocuentaAvgOrderByAggregateInput
    _max?: tipocuentaMaxOrderByAggregateInput
    _min?: tipocuentaMinOrderByAggregateInput
    _sum?: tipocuentaSumOrderByAggregateInput
  }

  export type tipocuentaScalarWhereWithAggregatesInput = {
    AND?: tipocuentaScalarWhereWithAggregatesInput | tipocuentaScalarWhereWithAggregatesInput[]
    OR?: tipocuentaScalarWhereWithAggregatesInput[]
    NOT?: tipocuentaScalarWhereWithAggregatesInput | tipocuentaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tipocuenta"> | number
    nombre?: StringWithAggregatesFilter<"tipocuenta"> | string
  }

  export type tipolistaprecioWhereInput = {
    AND?: tipolistaprecioWhereInput | tipolistaprecioWhereInput[]
    OR?: tipolistaprecioWhereInput[]
    NOT?: tipolistaprecioWhereInput | tipolistaprecioWhereInput[]
    id?: IntFilter<"tipolistaprecio"> | number
    nombre?: StringFilter<"tipolistaprecio"> | string
    detalleventa?: DetalleventaListRelationFilter
    listaprecio?: ListaprecioListRelationFilter
  }

  export type tipolistaprecioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    detalleventa?: detalleventaOrderByRelationAggregateInput
    listaprecio?: listaprecioOrderByRelationAggregateInput
  }

  export type tipolistaprecioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: tipolistaprecioWhereInput | tipolistaprecioWhereInput[]
    OR?: tipolistaprecioWhereInput[]
    NOT?: tipolistaprecioWhereInput | tipolistaprecioWhereInput[]
    detalleventa?: DetalleventaListRelationFilter
    listaprecio?: ListaprecioListRelationFilter
  }, "id" | "nombre">

  export type tipolistaprecioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: tipolistaprecioCountOrderByAggregateInput
    _avg?: tipolistaprecioAvgOrderByAggregateInput
    _max?: tipolistaprecioMaxOrderByAggregateInput
    _min?: tipolistaprecioMinOrderByAggregateInput
    _sum?: tipolistaprecioSumOrderByAggregateInput
  }

  export type tipolistaprecioScalarWhereWithAggregatesInput = {
    AND?: tipolistaprecioScalarWhereWithAggregatesInput | tipolistaprecioScalarWhereWithAggregatesInput[]
    OR?: tipolistaprecioScalarWhereWithAggregatesInput[]
    NOT?: tipolistaprecioScalarWhereWithAggregatesInput | tipolistaprecioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tipolistaprecio"> | number
    nombre?: StringWithAggregatesFilter<"tipolistaprecio"> | string
  }

  export type tipotransaccionWhereInput = {
    AND?: tipotransaccionWhereInput | tipotransaccionWhereInput[]
    OR?: tipotransaccionWhereInput[]
    NOT?: tipotransaccionWhereInput | tipotransaccionWhereInput[]
    id?: IntFilter<"tipotransaccion"> | number
    nombre?: StringFilter<"tipotransaccion"> | string
    transaccionfinanciera?: TransaccionfinancieraListRelationFilter
  }

  export type tipotransaccionOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    transaccionfinanciera?: transaccionfinancieraOrderByRelationAggregateInput
  }

  export type tipotransaccionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: tipotransaccionWhereInput | tipotransaccionWhereInput[]
    OR?: tipotransaccionWhereInput[]
    NOT?: tipotransaccionWhereInput | tipotransaccionWhereInput[]
    transaccionfinanciera?: TransaccionfinancieraListRelationFilter
  }, "id" | "nombre">

  export type tipotransaccionOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: tipotransaccionCountOrderByAggregateInput
    _avg?: tipotransaccionAvgOrderByAggregateInput
    _max?: tipotransaccionMaxOrderByAggregateInput
    _min?: tipotransaccionMinOrderByAggregateInput
    _sum?: tipotransaccionSumOrderByAggregateInput
  }

  export type tipotransaccionScalarWhereWithAggregatesInput = {
    AND?: tipotransaccionScalarWhereWithAggregatesInput | tipotransaccionScalarWhereWithAggregatesInput[]
    OR?: tipotransaccionScalarWhereWithAggregatesInput[]
    NOT?: tipotransaccionScalarWhereWithAggregatesInput | tipotransaccionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tipotransaccion"> | number
    nombre?: StringWithAggregatesFilter<"tipotransaccion"> | string
  }

  export type tipoventaWhereInput = {
    AND?: tipoventaWhereInput | tipoventaWhereInput[]
    OR?: tipoventaWhereInput[]
    NOT?: tipoventaWhereInput | tipoventaWhereInput[]
    id?: IntFilter<"tipoventa"> | number
    nombre?: StringFilter<"tipoventa"> | string
    detalleventa?: DetalleventaListRelationFilter
  }

  export type tipoventaOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    detalleventa?: detalleventaOrderByRelationAggregateInput
  }

  export type tipoventaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: tipoventaWhereInput | tipoventaWhereInput[]
    OR?: tipoventaWhereInput[]
    NOT?: tipoventaWhereInput | tipoventaWhereInput[]
    detalleventa?: DetalleventaListRelationFilter
  }, "id" | "nombre">

  export type tipoventaOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: tipoventaCountOrderByAggregateInput
    _avg?: tipoventaAvgOrderByAggregateInput
    _max?: tipoventaMaxOrderByAggregateInput
    _min?: tipoventaMinOrderByAggregateInput
    _sum?: tipoventaSumOrderByAggregateInput
  }

  export type tipoventaScalarWhereWithAggregatesInput = {
    AND?: tipoventaScalarWhereWithAggregatesInput | tipoventaScalarWhereWithAggregatesInput[]
    OR?: tipoventaScalarWhereWithAggregatesInput[]
    NOT?: tipoventaScalarWhereWithAggregatesInput | tipoventaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tipoventa"> | number
    nombre?: StringWithAggregatesFilter<"tipoventa"> | string
  }

  export type transaccionfinancieraWhereInput = {
    AND?: transaccionfinancieraWhereInput | transaccionfinancieraWhereInput[]
    OR?: transaccionfinancieraWhereInput[]
    NOT?: transaccionfinancieraWhereInput | transaccionfinancieraWhereInput[]
    id?: IntFilter<"transaccionfinanciera"> | number
    cuenta_id?: IntNullableFilter<"transaccionfinanciera"> | number | null
    fecha?: DateTimeFilter<"transaccionfinanciera"> | Date | string
    tipo_id?: IntNullableFilter<"transaccionfinanciera"> | number | null
    monto?: DecimalFilter<"transaccionfinanciera"> | Decimal | DecimalJsLike | number | string
    descripcion?: StringNullableFilter<"transaccionfinanciera"> | string | null
    cuentafinanciera?: XOR<CuentafinancieraNullableScalarRelationFilter, cuentafinancieraWhereInput> | null
    tipotransaccion?: XOR<TipotransaccionNullableScalarRelationFilter, tipotransaccionWhereInput> | null
  }

  export type transaccionfinancieraOrderByWithRelationInput = {
    id?: SortOrder
    cuenta_id?: SortOrderInput | SortOrder
    fecha?: SortOrder
    tipo_id?: SortOrderInput | SortOrder
    monto?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    cuentafinanciera?: cuentafinancieraOrderByWithRelationInput
    tipotransaccion?: tipotransaccionOrderByWithRelationInput
  }

  export type transaccionfinancieraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: transaccionfinancieraWhereInput | transaccionfinancieraWhereInput[]
    OR?: transaccionfinancieraWhereInput[]
    NOT?: transaccionfinancieraWhereInput | transaccionfinancieraWhereInput[]
    cuenta_id?: IntNullableFilter<"transaccionfinanciera"> | number | null
    fecha?: DateTimeFilter<"transaccionfinanciera"> | Date | string
    tipo_id?: IntNullableFilter<"transaccionfinanciera"> | number | null
    monto?: DecimalFilter<"transaccionfinanciera"> | Decimal | DecimalJsLike | number | string
    descripcion?: StringNullableFilter<"transaccionfinanciera"> | string | null
    cuentafinanciera?: XOR<CuentafinancieraNullableScalarRelationFilter, cuentafinancieraWhereInput> | null
    tipotransaccion?: XOR<TipotransaccionNullableScalarRelationFilter, tipotransaccionWhereInput> | null
  }, "id">

  export type transaccionfinancieraOrderByWithAggregationInput = {
    id?: SortOrder
    cuenta_id?: SortOrderInput | SortOrder
    fecha?: SortOrder
    tipo_id?: SortOrderInput | SortOrder
    monto?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: transaccionfinancieraCountOrderByAggregateInput
    _avg?: transaccionfinancieraAvgOrderByAggregateInput
    _max?: transaccionfinancieraMaxOrderByAggregateInput
    _min?: transaccionfinancieraMinOrderByAggregateInput
    _sum?: transaccionfinancieraSumOrderByAggregateInput
  }

  export type transaccionfinancieraScalarWhereWithAggregatesInput = {
    AND?: transaccionfinancieraScalarWhereWithAggregatesInput | transaccionfinancieraScalarWhereWithAggregatesInput[]
    OR?: transaccionfinancieraScalarWhereWithAggregatesInput[]
    NOT?: transaccionfinancieraScalarWhereWithAggregatesInput | transaccionfinancieraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"transaccionfinanciera"> | number
    cuenta_id?: IntNullableWithAggregatesFilter<"transaccionfinanciera"> | number | null
    fecha?: DateTimeWithAggregatesFilter<"transaccionfinanciera"> | Date | string
    tipo_id?: IntNullableWithAggregatesFilter<"transaccionfinanciera"> | number | null
    monto?: DecimalWithAggregatesFilter<"transaccionfinanciera"> | Decimal | DecimalJsLike | number | string
    descripcion?: StringNullableWithAggregatesFilter<"transaccionfinanciera"> | string | null
  }

  export type usuarioWhereInput = {
    AND?: usuarioWhereInput | usuarioWhereInput[]
    OR?: usuarioWhereInput[]
    NOT?: usuarioWhereInput | usuarioWhereInput[]
    id?: IntFilter<"usuario"> | number
    nombre?: StringFilter<"usuario"> | string
    correo?: StringFilter<"usuario"> | string
    contrasena?: StringFilter<"usuario"> | string
    rol_id?: IntNullableFilter<"usuario"> | number | null
    rol?: XOR<RolNullableScalarRelationFilter, rolWhereInput> | null
    venta?: VentaListRelationFilter
  }

  export type usuarioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    rol_id?: SortOrderInput | SortOrder
    rol?: rolOrderByWithRelationInput
    venta?: ventaOrderByRelationAggregateInput
  }

  export type usuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    correo?: string
    AND?: usuarioWhereInput | usuarioWhereInput[]
    OR?: usuarioWhereInput[]
    NOT?: usuarioWhereInput | usuarioWhereInput[]
    nombre?: StringFilter<"usuario"> | string
    contrasena?: StringFilter<"usuario"> | string
    rol_id?: IntNullableFilter<"usuario"> | number | null
    rol?: XOR<RolNullableScalarRelationFilter, rolWhereInput> | null
    venta?: VentaListRelationFilter
  }, "id" | "correo">

  export type usuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    rol_id?: SortOrderInput | SortOrder
    _count?: usuarioCountOrderByAggregateInput
    _avg?: usuarioAvgOrderByAggregateInput
    _max?: usuarioMaxOrderByAggregateInput
    _min?: usuarioMinOrderByAggregateInput
    _sum?: usuarioSumOrderByAggregateInput
  }

  export type usuarioScalarWhereWithAggregatesInput = {
    AND?: usuarioScalarWhereWithAggregatesInput | usuarioScalarWhereWithAggregatesInput[]
    OR?: usuarioScalarWhereWithAggregatesInput[]
    NOT?: usuarioScalarWhereWithAggregatesInput | usuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"usuario"> | number
    nombre?: StringWithAggregatesFilter<"usuario"> | string
    correo?: StringWithAggregatesFilter<"usuario"> | string
    contrasena?: StringWithAggregatesFilter<"usuario"> | string
    rol_id?: IntNullableWithAggregatesFilter<"usuario"> | number | null
  }

  export type ventaWhereInput = {
    AND?: ventaWhereInput | ventaWhereInput[]
    OR?: ventaWhereInput[]
    NOT?: ventaWhereInput | ventaWhereInput[]
    id?: IntFilter<"venta"> | number
    usuario_id?: IntNullableFilter<"venta"> | number | null
    fecha?: DateTimeFilter<"venta"> | Date | string
    estado_id?: IntNullableFilter<"venta"> | number | null
    total?: DecimalFilter<"venta"> | Decimal | DecimalJsLike | number | string
    detalleventa?: DetalleventaListRelationFilter
    estadoventa?: XOR<EstadoventaNullableScalarRelationFilter, estadoventaWhereInput> | null
    usuario?: XOR<UsuarioNullableScalarRelationFilter, usuarioWhereInput> | null
  }

  export type ventaOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrderInput | SortOrder
    fecha?: SortOrder
    estado_id?: SortOrderInput | SortOrder
    total?: SortOrder
    detalleventa?: detalleventaOrderByRelationAggregateInput
    estadoventa?: estadoventaOrderByWithRelationInput
    usuario?: usuarioOrderByWithRelationInput
  }

  export type ventaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ventaWhereInput | ventaWhereInput[]
    OR?: ventaWhereInput[]
    NOT?: ventaWhereInput | ventaWhereInput[]
    usuario_id?: IntNullableFilter<"venta"> | number | null
    fecha?: DateTimeFilter<"venta"> | Date | string
    estado_id?: IntNullableFilter<"venta"> | number | null
    total?: DecimalFilter<"venta"> | Decimal | DecimalJsLike | number | string
    detalleventa?: DetalleventaListRelationFilter
    estadoventa?: XOR<EstadoventaNullableScalarRelationFilter, estadoventaWhereInput> | null
    usuario?: XOR<UsuarioNullableScalarRelationFilter, usuarioWhereInput> | null
  }, "id">

  export type ventaOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrderInput | SortOrder
    fecha?: SortOrder
    estado_id?: SortOrderInput | SortOrder
    total?: SortOrder
    _count?: ventaCountOrderByAggregateInput
    _avg?: ventaAvgOrderByAggregateInput
    _max?: ventaMaxOrderByAggregateInput
    _min?: ventaMinOrderByAggregateInput
    _sum?: ventaSumOrderByAggregateInput
  }

  export type ventaScalarWhereWithAggregatesInput = {
    AND?: ventaScalarWhereWithAggregatesInput | ventaScalarWhereWithAggregatesInput[]
    OR?: ventaScalarWhereWithAggregatesInput[]
    NOT?: ventaScalarWhereWithAggregatesInput | ventaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"venta"> | number
    usuario_id?: IntNullableWithAggregatesFilter<"venta"> | number | null
    fecha?: DateTimeWithAggregatesFilter<"venta"> | Date | string
    estado_id?: IntNullableWithAggregatesFilter<"venta"> | number | null
    total?: DecimalWithAggregatesFilter<"venta"> | Decimal | DecimalJsLike | number | string
  }

  export type codigobarraCreateInput = {
    codigo: string
    producto?: productoCreateNestedOneWithoutCodigobarraInput
    detalleventa?: detalleventaCreateNestedManyWithoutCodigobarraInput
    lote?: loteCreateNestedManyWithoutCodigobarraInput
  }

  export type codigobarraUncheckedCreateInput = {
    id?: number
    producto_id?: number | null
    codigo: string
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutCodigobarraInput
    lote?: loteUncheckedCreateNestedManyWithoutCodigobarraInput
  }

  export type codigobarraUpdateInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    producto?: productoUpdateOneWithoutCodigobarraNestedInput
    detalleventa?: detalleventaUpdateManyWithoutCodigobarraNestedInput
    lote?: loteUpdateManyWithoutCodigobarraNestedInput
  }

  export type codigobarraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    codigo?: StringFieldUpdateOperationsInput | string
    detalleventa?: detalleventaUncheckedUpdateManyWithoutCodigobarraNestedInput
    lote?: loteUncheckedUpdateManyWithoutCodigobarraNestedInput
  }

  export type codigobarraCreateManyInput = {
    id?: number
    producto_id?: number | null
    codigo: string
  }

  export type codigobarraUpdateManyMutationInput = {
    codigo?: StringFieldUpdateOperationsInput | string
  }

  export type codigobarraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    codigo?: StringFieldUpdateOperationsInput | string
  }

  export type compraCreateInput = {
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
    proveedor?: proveedorCreateNestedOneWithoutCompraInput
    detallecompra?: detallecompraCreateNestedManyWithoutCompraInput
    ordencompracompra?: ordencompracompraCreateNestedManyWithoutCompraInput
  }

  export type compraUncheckedCreateInput = {
    id?: number
    proveedor_id?: number | null
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
    detallecompra?: detallecompraUncheckedCreateNestedManyWithoutCompraInput
    ordencompracompra?: ordencompracompraUncheckedCreateNestedManyWithoutCompraInput
  }

  export type compraUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedor?: proveedorUpdateOneWithoutCompraNestedInput
    detallecompra?: detallecompraUpdateManyWithoutCompraNestedInput
    ordencompracompra?: ordencompracompraUpdateManyWithoutCompraNestedInput
  }

  export type compraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    detallecompra?: detallecompraUncheckedUpdateManyWithoutCompraNestedInput
    ordencompracompra?: ordencompracompraUncheckedUpdateManyWithoutCompraNestedInput
  }

  export type compraCreateManyInput = {
    id?: number
    proveedor_id?: number | null
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
  }

  export type compraUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type compraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type cuentafinancieraCreateInput = {
    nombre: string
    saldo?: Decimal | DecimalJsLike | number | string | null
    tipocuenta?: tipocuentaCreateNestedOneWithoutCuentafinancieraInput
    transaccionfinanciera?: transaccionfinancieraCreateNestedManyWithoutCuentafinancieraInput
  }

  export type cuentafinancieraUncheckedCreateInput = {
    id?: number
    nombre: string
    tipo_id?: number | null
    saldo?: Decimal | DecimalJsLike | number | string | null
    transaccionfinanciera?: transaccionfinancieraUncheckedCreateNestedManyWithoutCuentafinancieraInput
  }

  export type cuentafinancieraUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    saldo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipocuenta?: tipocuentaUpdateOneWithoutCuentafinancieraNestedInput
    transaccionfinanciera?: transaccionfinancieraUpdateManyWithoutCuentafinancieraNestedInput
  }

  export type cuentafinancieraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_id?: NullableIntFieldUpdateOperationsInput | number | null
    saldo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transaccionfinanciera?: transaccionfinancieraUncheckedUpdateManyWithoutCuentafinancieraNestedInput
  }

  export type cuentafinancieraCreateManyInput = {
    id?: number
    nombre: string
    tipo_id?: number | null
    saldo?: Decimal | DecimalJsLike | number | string | null
  }

  export type cuentafinancieraUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    saldo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type cuentafinancieraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_id?: NullableIntFieldUpdateOperationsInput | number | null
    saldo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type detallecompraCreateInput = {
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    compra?: compraCreateNestedOneWithoutDetallecompraInput
    lote?: loteCreateNestedOneWithoutDetallecompraInput
  }

  export type detallecompraUncheckedCreateInput = {
    id?: number
    compra_id?: number | null
    lote_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type detallecompraUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    compra?: compraUpdateOneWithoutDetallecompraNestedInput
    lote?: loteUpdateOneWithoutDetallecompraNestedInput
  }

  export type detallecompraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    compra_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type detallecompraCreateManyInput = {
    id?: number
    compra_id?: number | null
    lote_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type detallecompraUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type detallecompraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    compra_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type detalleordencompraCreateInput = {
    cantidad_solicitada: number
    precio_estimado?: Decimal | DecimalJsLike | number | string | null
    ordencompra?: ordencompraCreateNestedOneWithoutDetalleordencompraInput
    producto?: productoCreateNestedOneWithoutDetalleordencompraInput
  }

  export type detalleordencompraUncheckedCreateInput = {
    id?: number
    orden_id?: number | null
    producto_id?: number | null
    cantidad_solicitada: number
    precio_estimado?: Decimal | DecimalJsLike | number | string | null
  }

  export type detalleordencompraUpdateInput = {
    cantidad_solicitada?: IntFieldUpdateOperationsInput | number
    precio_estimado?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ordencompra?: ordencompraUpdateOneWithoutDetalleordencompraNestedInput
    producto?: productoUpdateOneWithoutDetalleordencompraNestedInput
  }

  export type detalleordencompraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad_solicitada?: IntFieldUpdateOperationsInput | number
    precio_estimado?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type detalleordencompraCreateManyInput = {
    id?: number
    orden_id?: number | null
    producto_id?: number | null
    cantidad_solicitada: number
    precio_estimado?: Decimal | DecimalJsLike | number | string | null
  }

  export type detalleordencompraUpdateManyMutationInput = {
    cantidad_solicitada?: IntFieldUpdateOperationsInput | number
    precio_estimado?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type detalleordencompraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad_solicitada?: IntFieldUpdateOperationsInput | number
    precio_estimado?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type detalleventaCreateInput = {
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    codigobarra?: codigobarraCreateNestedOneWithoutDetalleventaInput
    producto?: productoCreateNestedOneWithoutDetalleventaInput
    tipolistaprecio?: tipolistaprecioCreateNestedOneWithoutDetalleventaInput
    tipoventa?: tipoventaCreateNestedOneWithoutDetalleventaInput
    venta?: ventaCreateNestedOneWithoutDetalleventaInput
  }

  export type detalleventaUncheckedCreateInput = {
    id?: number
    venta_id?: number | null
    codigo_barra_id?: number | null
    producto_id?: number | null
    tipo_venta_id?: number | null
    tipo_lista_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type detalleventaUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigobarra?: codigobarraUpdateOneWithoutDetalleventaNestedInput
    producto?: productoUpdateOneWithoutDetalleventaNestedInput
    tipolistaprecio?: tipolistaprecioUpdateOneWithoutDetalleventaNestedInput
    tipoventa?: tipoventaUpdateOneWithoutDetalleventaNestedInput
    venta?: ventaUpdateOneWithoutDetalleventaNestedInput
  }

  export type detalleventaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    codigo_barra_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type detalleventaCreateManyInput = {
    id?: number
    venta_id?: number | null
    codigo_barra_id?: number | null
    producto_id?: number | null
    tipo_venta_id?: number | null
    tipo_lista_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type detalleventaUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type detalleventaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    codigo_barra_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type estadoordencompraCreateInput = {
    nombre: string
    ordencompra?: ordencompraCreateNestedManyWithoutEstadoordencompraInput
  }

  export type estadoordencompraUncheckedCreateInput = {
    id?: number
    nombre: string
    ordencompra?: ordencompraUncheckedCreateNestedManyWithoutEstadoordencompraInput
  }

  export type estadoordencompraUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ordencompra?: ordencompraUpdateManyWithoutEstadoordencompraNestedInput
  }

  export type estadoordencompraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    ordencompra?: ordencompraUncheckedUpdateManyWithoutEstadoordencompraNestedInput
  }

  export type estadoordencompraCreateManyInput = {
    id?: number
    nombre: string
  }

  export type estadoordencompraUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type estadoordencompraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type estadoproduccionCreateInput = {
    nombre: string
    ordenproduccion?: ordenproduccionCreateNestedManyWithoutEstadoproduccionInput
  }

  export type estadoproduccionUncheckedCreateInput = {
    id?: number
    nombre: string
    ordenproduccion?: ordenproduccionUncheckedCreateNestedManyWithoutEstadoproduccionInput
  }

  export type estadoproduccionUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    ordenproduccion?: ordenproduccionUpdateManyWithoutEstadoproduccionNestedInput
  }

  export type estadoproduccionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    ordenproduccion?: ordenproduccionUncheckedUpdateManyWithoutEstadoproduccionNestedInput
  }

  export type estadoproduccionCreateManyInput = {
    id?: number
    nombre: string
  }

  export type estadoproduccionUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type estadoproduccionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type estadoventaCreateInput = {
    nombre: string
    venta?: ventaCreateNestedManyWithoutEstadoventaInput
  }

  export type estadoventaUncheckedCreateInput = {
    id?: number
    nombre: string
    venta?: ventaUncheckedCreateNestedManyWithoutEstadoventaInput
  }

  export type estadoventaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    venta?: ventaUpdateManyWithoutEstadoventaNestedInput
  }

  export type estadoventaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    venta?: ventaUncheckedUpdateManyWithoutEstadoventaNestedInput
  }

  export type estadoventaCreateManyInput = {
    id?: number
    nombre: string
  }

  export type estadoventaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type estadoventaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type insumoproduccionCreateInput = {
    cantidad: number
    ordenproduccion?: ordenproduccionCreateNestedOneWithoutInsumoproduccionInput
    producto?: productoCreateNestedOneWithoutInsumoproduccionInput
  }

  export type insumoproduccionUncheckedCreateInput = {
    id?: number
    orden_id?: number | null
    producto_id?: number | null
    cantidad: number
  }

  export type insumoproduccionUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    ordenproduccion?: ordenproduccionUpdateOneWithoutInsumoproduccionNestedInput
    producto?: productoUpdateOneWithoutInsumoproduccionNestedInput
  }

  export type insumoproduccionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type insumoproduccionCreateManyInput = {
    id?: number
    orden_id?: number | null
    producto_id?: number | null
    cantidad: number
  }

  export type insumoproduccionUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type insumoproduccionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type listaprecioCreateInput = {
    precio: Decimal | DecimalJsLike | number | string
    producto?: productoCreateNestedOneWithoutListaprecioInput
    sucursal?: sucursalCreateNestedOneWithoutListaprecioInput
    tipolistaprecio?: tipolistaprecioCreateNestedOneWithoutListaprecioInput
  }

  export type listaprecioUncheckedCreateInput = {
    id?: number
    producto_id?: number | null
    sucursal_id?: number | null
    tipo_lista_id?: number | null
    precio: Decimal | DecimalJsLike | number | string
  }

  export type listaprecioUpdateInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    producto?: productoUpdateOneWithoutListaprecioNestedInput
    sucursal?: sucursalUpdateOneWithoutListaprecioNestedInput
    tipolistaprecio?: tipolistaprecioUpdateOneWithoutListaprecioNestedInput
  }

  export type listaprecioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    sucursal_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type listaprecioCreateManyInput = {
    id?: number
    producto_id?: number | null
    sucursal_id?: number | null
    tipo_lista_id?: number | null
    precio: Decimal | DecimalJsLike | number | string
  }

  export type listaprecioUpdateManyMutationInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type listaprecioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    sucursal_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type loteCreateInput = {
    fecha_vencimiento?: Date | string | null
    cantidad: number
    ubicacion?: string | null
    detallecompra?: detallecompraCreateNestedManyWithoutLoteInput
    codigobarra?: codigobarraCreateNestedOneWithoutLoteInput
    productoterminado?: productoterminadoCreateNestedManyWithoutLoteInput
  }

  export type loteUncheckedCreateInput = {
    id?: number
    codigo_barra_id?: number | null
    fecha_vencimiento?: Date | string | null
    cantidad: number
    ubicacion?: string | null
    detallecompra?: detallecompraUncheckedCreateNestedManyWithoutLoteInput
    productoterminado?: productoterminadoUncheckedCreateNestedManyWithoutLoteInput
  }

  export type loteUpdateInput = {
    fecha_vencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidad?: IntFieldUpdateOperationsInput | number
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    detallecompra?: detallecompraUpdateManyWithoutLoteNestedInput
    codigobarra?: codigobarraUpdateOneWithoutLoteNestedInput
    productoterminado?: productoterminadoUpdateManyWithoutLoteNestedInput
  }

  export type loteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo_barra_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_vencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidad?: IntFieldUpdateOperationsInput | number
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    detallecompra?: detallecompraUncheckedUpdateManyWithoutLoteNestedInput
    productoterminado?: productoterminadoUncheckedUpdateManyWithoutLoteNestedInput
  }

  export type loteCreateManyInput = {
    id?: number
    codigo_barra_id?: number | null
    fecha_vencimiento?: Date | string | null
    cantidad: number
    ubicacion?: string | null
  }

  export type loteUpdateManyMutationInput = {
    fecha_vencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidad?: IntFieldUpdateOperationsInput | number
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type loteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo_barra_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_vencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidad?: IntFieldUpdateOperationsInput | number
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ordencompraCreateInput = {
    fecha: Date | string
    observaciones?: string | null
    detalleordencompra?: detalleordencompraCreateNestedManyWithoutOrdencompraInput
    estadoordencompra?: estadoordencompraCreateNestedOneWithoutOrdencompraInput
    proveedor?: proveedorCreateNestedOneWithoutOrdencompraInput
    ordencompracompra?: ordencompracompraCreateNestedManyWithoutOrdencompraInput
  }

  export type ordencompraUncheckedCreateInput = {
    id?: number
    proveedor_id?: number | null
    fecha: Date | string
    estado_id?: number | null
    observaciones?: string | null
    detalleordencompra?: detalleordencompraUncheckedCreateNestedManyWithoutOrdencompraInput
    ordencompracompra?: ordencompracompraUncheckedCreateNestedManyWithoutOrdencompraInput
  }

  export type ordencompraUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    detalleordencompra?: detalleordencompraUpdateManyWithoutOrdencompraNestedInput
    estadoordencompra?: estadoordencompraUpdateOneWithoutOrdencompraNestedInput
    proveedor?: proveedorUpdateOneWithoutOrdencompraNestedInput
    ordencompracompra?: ordencompracompraUpdateManyWithoutOrdencompraNestedInput
  }

  export type ordencompraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    detalleordencompra?: detalleordencompraUncheckedUpdateManyWithoutOrdencompraNestedInput
    ordencompracompra?: ordencompracompraUncheckedUpdateManyWithoutOrdencompraNestedInput
  }

  export type ordencompraCreateManyInput = {
    id?: number
    proveedor_id?: number | null
    fecha: Date | string
    estado_id?: number | null
    observaciones?: string | null
  }

  export type ordencompraUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ordencompraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ordencompracompraCreateInput = {
    compra?: compraCreateNestedOneWithoutOrdencompracompraInput
    ordencompra?: ordencompraCreateNestedOneWithoutOrdencompracompraInput
  }

  export type ordencompracompraUncheckedCreateInput = {
    id?: number
    orden_id?: number | null
    compra_id?: number | null
  }

  export type ordencompracompraUpdateInput = {
    compra?: compraUpdateOneWithoutOrdencompracompraNestedInput
    ordencompra?: ordencompraUpdateOneWithoutOrdencompracompraNestedInput
  }

  export type ordencompracompraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
    compra_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ordencompracompraCreateManyInput = {
    id?: number
    orden_id?: number | null
    compra_id?: number | null
  }

  export type ordencompracompraUpdateManyMutationInput = {

  }

  export type ordencompracompraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
    compra_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ordenproduccionCreateInput = {
    fecha_inicio: Date | string
    fecha_fin?: Date | string | null
    insumoproduccion?: insumoproduccionCreateNestedManyWithoutOrdenproduccionInput
    estadoproduccion?: estadoproduccionCreateNestedOneWithoutOrdenproduccionInput
    producto?: productoCreateNestedOneWithoutOrdenproduccionInput
    productoterminado?: productoterminadoCreateNestedManyWithoutOrdenproduccionInput
  }

  export type ordenproduccionUncheckedCreateInput = {
    id?: number
    producto_id?: number | null
    fecha_inicio: Date | string
    fecha_fin?: Date | string | null
    estado_id?: number | null
    insumoproduccion?: insumoproduccionUncheckedCreateNestedManyWithoutOrdenproduccionInput
    productoterminado?: productoterminadoUncheckedCreateNestedManyWithoutOrdenproduccionInput
  }

  export type ordenproduccionUpdateInput = {
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumoproduccion?: insumoproduccionUpdateManyWithoutOrdenproduccionNestedInput
    estadoproduccion?: estadoproduccionUpdateOneWithoutOrdenproduccionNestedInput
    producto?: productoUpdateOneWithoutOrdenproduccionNestedInput
    productoterminado?: productoterminadoUpdateManyWithoutOrdenproduccionNestedInput
  }

  export type ordenproduccionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    insumoproduccion?: insumoproduccionUncheckedUpdateManyWithoutOrdenproduccionNestedInput
    productoterminado?: productoterminadoUncheckedUpdateManyWithoutOrdenproduccionNestedInput
  }

  export type ordenproduccionCreateManyInput = {
    id?: number
    producto_id?: number | null
    fecha_inicio: Date | string
    fecha_fin?: Date | string | null
    estado_id?: number | null
  }

  export type ordenproduccionUpdateManyMutationInput = {
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ordenproduccionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type permisoCreateInput = {
    puede_ver?: boolean | null
    puede_crear?: boolean | null
    puede_editar?: boolean | null
    puede_eliminar?: boolean | null
    rol?: rolCreateNestedOneWithoutPermisoInput
    screen?: screenCreateNestedOneWithoutPermisoInput
  }

  export type permisoUncheckedCreateInput = {
    id?: number
    rol_id?: number | null
    screen_id?: number | null
    puede_ver?: boolean | null
    puede_crear?: boolean | null
    puede_editar?: boolean | null
    puede_eliminar?: boolean | null
  }

  export type permisoUpdateInput = {
    puede_ver?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_crear?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_editar?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_eliminar?: NullableBoolFieldUpdateOperationsInput | boolean | null
    rol?: rolUpdateOneWithoutPermisoNestedInput
    screen?: screenUpdateOneWithoutPermisoNestedInput
  }

  export type permisoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    screen_id?: NullableIntFieldUpdateOperationsInput | number | null
    puede_ver?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_crear?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_editar?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_eliminar?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type permisoCreateManyInput = {
    id?: number
    rol_id?: number | null
    screen_id?: number | null
    puede_ver?: boolean | null
    puede_crear?: boolean | null
    puede_editar?: boolean | null
    puede_eliminar?: boolean | null
  }

  export type permisoUpdateManyMutationInput = {
    puede_ver?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_crear?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_editar?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_eliminar?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type permisoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    screen_id?: NullableIntFieldUpdateOperationsInput | number | null
    puede_ver?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_crear?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_editar?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_eliminar?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type productoCreateInput = {
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraCreateNestedManyWithoutProductoInput
    detalleordencompra?: detalleordencompraCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraUncheckedCreateNestedManyWithoutProductoInput
    detalleordencompra?: detalleordencompraUncheckedCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionUncheckedCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioUncheckedCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionUncheckedCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUpdateManyWithoutProductoNestedInput
    detalleordencompra?: detalleordencompraUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type productoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUncheckedUpdateManyWithoutProductoNestedInput
    detalleordencompra?: detalleordencompraUncheckedUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUncheckedUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUncheckedUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUncheckedUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUncheckedUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type productoCreateManyInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
  }

  export type productoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type productoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type productocomboCreateInput = {
    cantidad: number
    producto_productocombo_combo_idToproducto?: productoCreateNestedOneWithoutProductocombo_productocombo_combo_idToproductoInput
    producto_productocombo_producto_idToproducto?: productoCreateNestedOneWithoutProductocombo_productocombo_producto_idToproductoInput
  }

  export type productocomboUncheckedCreateInput = {
    id?: number
    combo_id?: number | null
    producto_id?: number | null
    cantidad: number
  }

  export type productocomboUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    producto_productocombo_combo_idToproducto?: productoUpdateOneWithoutProductocombo_productocombo_combo_idToproductoNestedInput
    producto_productocombo_producto_idToproducto?: productoUpdateOneWithoutProductocombo_productocombo_producto_idToproductoNestedInput
  }

  export type productocomboUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    combo_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type productocomboCreateManyInput = {
    id?: number
    combo_id?: number | null
    producto_id?: number | null
    cantidad: number
  }

  export type productocomboUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type productocomboUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    combo_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type productoterminadoCreateInput = {
    cantidad: number
    lote?: loteCreateNestedOneWithoutProductoterminadoInput
    ordenproduccion?: ordenproduccionCreateNestedOneWithoutProductoterminadoInput
  }

  export type productoterminadoUncheckedCreateInput = {
    id?: number
    orden_id?: number | null
    lote_id?: number | null
    cantidad: number
  }

  export type productoterminadoUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    lote?: loteUpdateOneWithoutProductoterminadoNestedInput
    ordenproduccion?: ordenproduccionUpdateOneWithoutProductoterminadoNestedInput
  }

  export type productoterminadoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type productoterminadoCreateManyInput = {
    id?: number
    orden_id?: number | null
    lote_id?: number | null
    cantidad: number
  }

  export type productoterminadoUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type productoterminadoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type proveedorCreateInput = {
    nombre: string
    nit: string
    contacto?: string | null
    telefono?: string | null
    correo?: string | null
    direccion?: string | null
    tipo?: string | null
    compra?: compraCreateNestedManyWithoutProveedorInput
    ordencompra?: ordencompraCreateNestedManyWithoutProveedorInput
  }

  export type proveedorUncheckedCreateInput = {
    id?: number
    nombre: string
    nit: string
    contacto?: string | null
    telefono?: string | null
    correo?: string | null
    direccion?: string | null
    tipo?: string | null
    compra?: compraUncheckedCreateNestedManyWithoutProveedorInput
    ordencompra?: ordencompraUncheckedCreateNestedManyWithoutProveedorInput
  }

  export type proveedorUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    nit?: StringFieldUpdateOperationsInput | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    compra?: compraUpdateManyWithoutProveedorNestedInput
    ordencompra?: ordencompraUpdateManyWithoutProveedorNestedInput
  }

  export type proveedorUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    nit?: StringFieldUpdateOperationsInput | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    compra?: compraUncheckedUpdateManyWithoutProveedorNestedInput
    ordencompra?: ordencompraUncheckedUpdateManyWithoutProveedorNestedInput
  }

  export type proveedorCreateManyInput = {
    id?: number
    nombre: string
    nit: string
    contacto?: string | null
    telefono?: string | null
    correo?: string | null
    direccion?: string | null
    tipo?: string | null
  }

  export type proveedorUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    nit?: StringFieldUpdateOperationsInput | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type proveedorUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    nit?: StringFieldUpdateOperationsInput | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type rolCreateInput = {
    nombre: string
    permiso?: permisoCreateNestedManyWithoutRolInput
    usuario?: usuarioCreateNestedManyWithoutRolInput
  }

  export type rolUncheckedCreateInput = {
    id?: number
    nombre: string
    permiso?: permisoUncheckedCreateNestedManyWithoutRolInput
    usuario?: usuarioUncheckedCreateNestedManyWithoutRolInput
  }

  export type rolUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    permiso?: permisoUpdateManyWithoutRolNestedInput
    usuario?: usuarioUpdateManyWithoutRolNestedInput
  }

  export type rolUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    permiso?: permisoUncheckedUpdateManyWithoutRolNestedInput
    usuario?: usuarioUncheckedUpdateManyWithoutRolNestedInput
  }

  export type rolCreateManyInput = {
    id?: number
    nombre: string
  }

  export type rolUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type rolUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type screenCreateInput = {
    nombre: string
    descripcion?: string | null
    permiso?: permisoCreateNestedManyWithoutScreenInput
  }

  export type screenUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    permiso?: permisoUncheckedCreateNestedManyWithoutScreenInput
  }

  export type screenUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    permiso?: permisoUpdateManyWithoutScreenNestedInput
  }

  export type screenUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    permiso?: permisoUncheckedUpdateManyWithoutScreenNestedInput
  }

  export type screenCreateManyInput = {
    id?: number
    nombre: string
    descripcion?: string | null
  }

  export type screenUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type screenUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sucursalCreateInput = {
    nombre: string
    direccion?: string | null
    listaprecio?: listaprecioCreateNestedManyWithoutSucursalInput
  }

  export type sucursalUncheckedCreateInput = {
    id?: number
    nombre: string
    direccion?: string | null
    listaprecio?: listaprecioUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type sucursalUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    listaprecio?: listaprecioUpdateManyWithoutSucursalNestedInput
  }

  export type sucursalUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    listaprecio?: listaprecioUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type sucursalCreateManyInput = {
    id?: number
    nombre: string
    direccion?: string | null
  }

  export type sucursalUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sucursalUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipocuentaCreateInput = {
    nombre: string
    cuentafinanciera?: cuentafinancieraCreateNestedManyWithoutTipocuentaInput
  }

  export type tipocuentaUncheckedCreateInput = {
    id?: number
    nombre: string
    cuentafinanciera?: cuentafinancieraUncheckedCreateNestedManyWithoutTipocuentaInput
  }

  export type tipocuentaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cuentafinanciera?: cuentafinancieraUpdateManyWithoutTipocuentaNestedInput
  }

  export type tipocuentaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cuentafinanciera?: cuentafinancieraUncheckedUpdateManyWithoutTipocuentaNestedInput
  }

  export type tipocuentaCreateManyInput = {
    id?: number
    nombre: string
  }

  export type tipocuentaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type tipocuentaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type tipolistaprecioCreateInput = {
    nombre: string
    detalleventa?: detalleventaCreateNestedManyWithoutTipolistaprecioInput
    listaprecio?: listaprecioCreateNestedManyWithoutTipolistaprecioInput
  }

  export type tipolistaprecioUncheckedCreateInput = {
    id?: number
    nombre: string
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutTipolistaprecioInput
    listaprecio?: listaprecioUncheckedCreateNestedManyWithoutTipolistaprecioInput
  }

  export type tipolistaprecioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    detalleventa?: detalleventaUpdateManyWithoutTipolistaprecioNestedInput
    listaprecio?: listaprecioUpdateManyWithoutTipolistaprecioNestedInput
  }

  export type tipolistaprecioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    detalleventa?: detalleventaUncheckedUpdateManyWithoutTipolistaprecioNestedInput
    listaprecio?: listaprecioUncheckedUpdateManyWithoutTipolistaprecioNestedInput
  }

  export type tipolistaprecioCreateManyInput = {
    id?: number
    nombre: string
  }

  export type tipolistaprecioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type tipolistaprecioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type tipotransaccionCreateInput = {
    nombre: string
    transaccionfinanciera?: transaccionfinancieraCreateNestedManyWithoutTipotransaccionInput
  }

  export type tipotransaccionUncheckedCreateInput = {
    id?: number
    nombre: string
    transaccionfinanciera?: transaccionfinancieraUncheckedCreateNestedManyWithoutTipotransaccionInput
  }

  export type tipotransaccionUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    transaccionfinanciera?: transaccionfinancieraUpdateManyWithoutTipotransaccionNestedInput
  }

  export type tipotransaccionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    transaccionfinanciera?: transaccionfinancieraUncheckedUpdateManyWithoutTipotransaccionNestedInput
  }

  export type tipotransaccionCreateManyInput = {
    id?: number
    nombre: string
  }

  export type tipotransaccionUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type tipotransaccionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type tipoventaCreateInput = {
    nombre: string
    detalleventa?: detalleventaCreateNestedManyWithoutTipoventaInput
  }

  export type tipoventaUncheckedCreateInput = {
    id?: number
    nombre: string
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutTipoventaInput
  }

  export type tipoventaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    detalleventa?: detalleventaUpdateManyWithoutTipoventaNestedInput
  }

  export type tipoventaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    detalleventa?: detalleventaUncheckedUpdateManyWithoutTipoventaNestedInput
  }

  export type tipoventaCreateManyInput = {
    id?: number
    nombre: string
  }

  export type tipoventaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type tipoventaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type transaccionfinancieraCreateInput = {
    fecha: Date | string
    monto: Decimal | DecimalJsLike | number | string
    descripcion?: string | null
    cuentafinanciera?: cuentafinancieraCreateNestedOneWithoutTransaccionfinancieraInput
    tipotransaccion?: tipotransaccionCreateNestedOneWithoutTransaccionfinancieraInput
  }

  export type transaccionfinancieraUncheckedCreateInput = {
    id?: number
    cuenta_id?: number | null
    fecha: Date | string
    tipo_id?: number | null
    monto: Decimal | DecimalJsLike | number | string
    descripcion?: string | null
  }

  export type transaccionfinancieraUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    cuentafinanciera?: cuentafinancieraUpdateOneWithoutTransaccionfinancieraNestedInput
    tipotransaccion?: tipotransaccionUpdateOneWithoutTransaccionfinancieraNestedInput
  }

  export type transaccionfinancieraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    cuenta_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_id?: NullableIntFieldUpdateOperationsInput | number | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type transaccionfinancieraCreateManyInput = {
    id?: number
    cuenta_id?: number | null
    fecha: Date | string
    tipo_id?: number | null
    monto: Decimal | DecimalJsLike | number | string
    descripcion?: string | null
  }

  export type transaccionfinancieraUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type transaccionfinancieraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    cuenta_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_id?: NullableIntFieldUpdateOperationsInput | number | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usuarioCreateInput = {
    nombre: string
    correo: string
    contrasena: string
    rol?: rolCreateNestedOneWithoutUsuarioInput
    venta?: ventaCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateInput = {
    id?: number
    nombre: string
    correo: string
    contrasena: string
    rol_id?: number | null
    venta?: ventaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rol?: rolUpdateOneWithoutUsuarioNestedInput
    venta?: ventaUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    venta?: ventaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioCreateManyInput = {
    id?: number
    nombre: string
    correo: string
    contrasena: string
    rol_id?: number | null
  }

  export type usuarioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
  }

  export type usuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ventaCreateInput = {
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
    detalleventa?: detalleventaCreateNestedManyWithoutVentaInput
    estadoventa?: estadoventaCreateNestedOneWithoutVentaInput
    usuario?: usuarioCreateNestedOneWithoutVentaInput
  }

  export type ventaUncheckedCreateInput = {
    id?: number
    usuario_id?: number | null
    fecha: Date | string
    estado_id?: number | null
    total: Decimal | DecimalJsLike | number | string
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutVentaInput
  }

  export type ventaUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    detalleventa?: detalleventaUpdateManyWithoutVentaNestedInput
    estadoventa?: estadoventaUpdateOneWithoutVentaNestedInput
    usuario?: usuarioUpdateOneWithoutVentaNestedInput
  }

  export type ventaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    detalleventa?: detalleventaUncheckedUpdateManyWithoutVentaNestedInput
  }

  export type ventaCreateManyInput = {
    id?: number
    usuario_id?: number | null
    fecha: Date | string
    estado_id?: number | null
    total: Decimal | DecimalJsLike | number | string
  }

  export type ventaUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ventaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type ProductoNullableScalarRelationFilter = {
    is?: productoWhereInput | null
    isNot?: productoWhereInput | null
  }

  export type DetalleventaListRelationFilter = {
    every?: detalleventaWhereInput
    some?: detalleventaWhereInput
    none?: detalleventaWhereInput
  }

  export type LoteListRelationFilter = {
    every?: loteWhereInput
    some?: loteWhereInput
    none?: loteWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type detalleventaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type loteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type codigobarraCountOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    codigo?: SortOrder
  }

  export type codigobarraAvgOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
  }

  export type codigobarraMaxOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    codigo?: SortOrder
  }

  export type codigobarraMinOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    codigo?: SortOrder
  }

  export type codigobarraSumOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type ProveedorNullableScalarRelationFilter = {
    is?: proveedorWhereInput | null
    isNot?: proveedorWhereInput | null
  }

  export type DetallecompraListRelationFilter = {
    every?: detallecompraWhereInput
    some?: detallecompraWhereInput
    none?: detallecompraWhereInput
  }

  export type OrdencompracompraListRelationFilter = {
    every?: ordencompracompraWhereInput
    some?: ordencompracompraWhereInput
    none?: ordencompracompraWhereInput
  }

  export type detallecompraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ordencompracompraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type compraCountOrderByAggregateInput = {
    id?: SortOrder
    proveedor_id?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
  }

  export type compraAvgOrderByAggregateInput = {
    id?: SortOrder
    proveedor_id?: SortOrder
    total?: SortOrder
  }

  export type compraMaxOrderByAggregateInput = {
    id?: SortOrder
    proveedor_id?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
  }

  export type compraMinOrderByAggregateInput = {
    id?: SortOrder
    proveedor_id?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
  }

  export type compraSumOrderByAggregateInput = {
    id?: SortOrder
    proveedor_id?: SortOrder
    total?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type TipocuentaNullableScalarRelationFilter = {
    is?: tipocuentaWhereInput | null
    isNot?: tipocuentaWhereInput | null
  }

  export type TransaccionfinancieraListRelationFilter = {
    every?: transaccionfinancieraWhereInput
    some?: transaccionfinancieraWhereInput
    none?: transaccionfinancieraWhereInput
  }

  export type transaccionfinancieraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cuentafinancieraCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_id?: SortOrder
    saldo?: SortOrder
  }

  export type cuentafinancieraAvgOrderByAggregateInput = {
    id?: SortOrder
    tipo_id?: SortOrder
    saldo?: SortOrder
  }

  export type cuentafinancieraMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_id?: SortOrder
    saldo?: SortOrder
  }

  export type cuentafinancieraMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_id?: SortOrder
    saldo?: SortOrder
  }

  export type cuentafinancieraSumOrderByAggregateInput = {
    id?: SortOrder
    tipo_id?: SortOrder
    saldo?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type CompraNullableScalarRelationFilter = {
    is?: compraWhereInput | null
    isNot?: compraWhereInput | null
  }

  export type LoteNullableScalarRelationFilter = {
    is?: loteWhereInput | null
    isNot?: loteWhereInput | null
  }

  export type detallecompraCountOrderByAggregateInput = {
    id?: SortOrder
    compra_id?: SortOrder
    lote_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detallecompraAvgOrderByAggregateInput = {
    id?: SortOrder
    compra_id?: SortOrder
    lote_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detallecompraMaxOrderByAggregateInput = {
    id?: SortOrder
    compra_id?: SortOrder
    lote_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detallecompraMinOrderByAggregateInput = {
    id?: SortOrder
    compra_id?: SortOrder
    lote_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detallecompraSumOrderByAggregateInput = {
    id?: SortOrder
    compra_id?: SortOrder
    lote_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type OrdencompraNullableScalarRelationFilter = {
    is?: ordencompraWhereInput | null
    isNot?: ordencompraWhereInput | null
  }

  export type detalleordencompraCountOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    producto_id?: SortOrder
    cantidad_solicitada?: SortOrder
    precio_estimado?: SortOrder
  }

  export type detalleordencompraAvgOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    producto_id?: SortOrder
    cantidad_solicitada?: SortOrder
    precio_estimado?: SortOrder
  }

  export type detalleordencompraMaxOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    producto_id?: SortOrder
    cantidad_solicitada?: SortOrder
    precio_estimado?: SortOrder
  }

  export type detalleordencompraMinOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    producto_id?: SortOrder
    cantidad_solicitada?: SortOrder
    precio_estimado?: SortOrder
  }

  export type detalleordencompraSumOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    producto_id?: SortOrder
    cantidad_solicitada?: SortOrder
    precio_estimado?: SortOrder
  }

  export type CodigobarraNullableScalarRelationFilter = {
    is?: codigobarraWhereInput | null
    isNot?: codigobarraWhereInput | null
  }

  export type TipolistaprecioNullableScalarRelationFilter = {
    is?: tipolistaprecioWhereInput | null
    isNot?: tipolistaprecioWhereInput | null
  }

  export type TipoventaNullableScalarRelationFilter = {
    is?: tipoventaWhereInput | null
    isNot?: tipoventaWhereInput | null
  }

  export type VentaNullableScalarRelationFilter = {
    is?: ventaWhereInput | null
    isNot?: ventaWhereInput | null
  }

  export type detalleventaCountOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    codigo_barra_id?: SortOrder
    producto_id?: SortOrder
    tipo_venta_id?: SortOrder
    tipo_lista_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalleventaAvgOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    codigo_barra_id?: SortOrder
    producto_id?: SortOrder
    tipo_venta_id?: SortOrder
    tipo_lista_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalleventaMaxOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    codigo_barra_id?: SortOrder
    producto_id?: SortOrder
    tipo_venta_id?: SortOrder
    tipo_lista_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalleventaMinOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    codigo_barra_id?: SortOrder
    producto_id?: SortOrder
    tipo_venta_id?: SortOrder
    tipo_lista_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalleventaSumOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    codigo_barra_id?: SortOrder
    producto_id?: SortOrder
    tipo_venta_id?: SortOrder
    tipo_lista_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type OrdencompraListRelationFilter = {
    every?: ordencompraWhereInput
    some?: ordencompraWhereInput
    none?: ordencompraWhereInput
  }

  export type ordencompraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type estadoordencompraCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type estadoordencompraAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type estadoordencompraMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type estadoordencompraMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type estadoordencompraSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type OrdenproduccionListRelationFilter = {
    every?: ordenproduccionWhereInput
    some?: ordenproduccionWhereInput
    none?: ordenproduccionWhereInput
  }

  export type ordenproduccionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type estadoproduccionCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type estadoproduccionAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type estadoproduccionMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type estadoproduccionMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type estadoproduccionSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type VentaListRelationFilter = {
    every?: ventaWhereInput
    some?: ventaWhereInput
    none?: ventaWhereInput
  }

  export type ventaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type estadoventaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type estadoventaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type estadoventaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type estadoventaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type estadoventaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type OrdenproduccionNullableScalarRelationFilter = {
    is?: ordenproduccionWhereInput | null
    isNot?: ordenproduccionWhereInput | null
  }

  export type insumoproduccionCountOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
  }

  export type insumoproduccionAvgOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
  }

  export type insumoproduccionMaxOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
  }

  export type insumoproduccionMinOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
  }

  export type insumoproduccionSumOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
  }

  export type SucursalNullableScalarRelationFilter = {
    is?: sucursalWhereInput | null
    isNot?: sucursalWhereInput | null
  }

  export type listaprecioCountOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    sucursal_id?: SortOrder
    tipo_lista_id?: SortOrder
    precio?: SortOrder
  }

  export type listaprecioAvgOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    sucursal_id?: SortOrder
    tipo_lista_id?: SortOrder
    precio?: SortOrder
  }

  export type listaprecioMaxOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    sucursal_id?: SortOrder
    tipo_lista_id?: SortOrder
    precio?: SortOrder
  }

  export type listaprecioMinOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    sucursal_id?: SortOrder
    tipo_lista_id?: SortOrder
    precio?: SortOrder
  }

  export type listaprecioSumOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    sucursal_id?: SortOrder
    tipo_lista_id?: SortOrder
    precio?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type ProductoterminadoListRelationFilter = {
    every?: productoterminadoWhereInput
    some?: productoterminadoWhereInput
    none?: productoterminadoWhereInput
  }

  export type productoterminadoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type loteCountOrderByAggregateInput = {
    id?: SortOrder
    codigo_barra_id?: SortOrder
    fecha_vencimiento?: SortOrder
    cantidad?: SortOrder
    ubicacion?: SortOrder
  }

  export type loteAvgOrderByAggregateInput = {
    id?: SortOrder
    codigo_barra_id?: SortOrder
    cantidad?: SortOrder
  }

  export type loteMaxOrderByAggregateInput = {
    id?: SortOrder
    codigo_barra_id?: SortOrder
    fecha_vencimiento?: SortOrder
    cantidad?: SortOrder
    ubicacion?: SortOrder
  }

  export type loteMinOrderByAggregateInput = {
    id?: SortOrder
    codigo_barra_id?: SortOrder
    fecha_vencimiento?: SortOrder
    cantidad?: SortOrder
    ubicacion?: SortOrder
  }

  export type loteSumOrderByAggregateInput = {
    id?: SortOrder
    codigo_barra_id?: SortOrder
    cantidad?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DetalleordencompraListRelationFilter = {
    every?: detalleordencompraWhereInput
    some?: detalleordencompraWhereInput
    none?: detalleordencompraWhereInput
  }

  export type EstadoordencompraNullableScalarRelationFilter = {
    is?: estadoordencompraWhereInput | null
    isNot?: estadoordencompraWhereInput | null
  }

  export type detalleordencompraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ordencompraCountOrderByAggregateInput = {
    id?: SortOrder
    proveedor_id?: SortOrder
    fecha?: SortOrder
    estado_id?: SortOrder
    observaciones?: SortOrder
  }

  export type ordencompraAvgOrderByAggregateInput = {
    id?: SortOrder
    proveedor_id?: SortOrder
    estado_id?: SortOrder
  }

  export type ordencompraMaxOrderByAggregateInput = {
    id?: SortOrder
    proveedor_id?: SortOrder
    fecha?: SortOrder
    estado_id?: SortOrder
    observaciones?: SortOrder
  }

  export type ordencompraMinOrderByAggregateInput = {
    id?: SortOrder
    proveedor_id?: SortOrder
    fecha?: SortOrder
    estado_id?: SortOrder
    observaciones?: SortOrder
  }

  export type ordencompraSumOrderByAggregateInput = {
    id?: SortOrder
    proveedor_id?: SortOrder
    estado_id?: SortOrder
  }

  export type ordencompracompraCountOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    compra_id?: SortOrder
  }

  export type ordencompracompraAvgOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    compra_id?: SortOrder
  }

  export type ordencompracompraMaxOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    compra_id?: SortOrder
  }

  export type ordencompracompraMinOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    compra_id?: SortOrder
  }

  export type ordencompracompraSumOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    compra_id?: SortOrder
  }

  export type InsumoproduccionListRelationFilter = {
    every?: insumoproduccionWhereInput
    some?: insumoproduccionWhereInput
    none?: insumoproduccionWhereInput
  }

  export type EstadoproduccionNullableScalarRelationFilter = {
    is?: estadoproduccionWhereInput | null
    isNot?: estadoproduccionWhereInput | null
  }

  export type insumoproduccionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ordenproduccionCountOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    estado_id?: SortOrder
  }

  export type ordenproduccionAvgOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    estado_id?: SortOrder
  }

  export type ordenproduccionMaxOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    estado_id?: SortOrder
  }

  export type ordenproduccionMinOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    estado_id?: SortOrder
  }

  export type ordenproduccionSumOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    estado_id?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type RolNullableScalarRelationFilter = {
    is?: rolWhereInput | null
    isNot?: rolWhereInput | null
  }

  export type ScreenNullableScalarRelationFilter = {
    is?: screenWhereInput | null
    isNot?: screenWhereInput | null
  }

  export type permisoCountOrderByAggregateInput = {
    id?: SortOrder
    rol_id?: SortOrder
    screen_id?: SortOrder
    puede_ver?: SortOrder
    puede_crear?: SortOrder
    puede_editar?: SortOrder
    puede_eliminar?: SortOrder
  }

  export type permisoAvgOrderByAggregateInput = {
    id?: SortOrder
    rol_id?: SortOrder
    screen_id?: SortOrder
  }

  export type permisoMaxOrderByAggregateInput = {
    id?: SortOrder
    rol_id?: SortOrder
    screen_id?: SortOrder
    puede_ver?: SortOrder
    puede_crear?: SortOrder
    puede_editar?: SortOrder
    puede_eliminar?: SortOrder
  }

  export type permisoMinOrderByAggregateInput = {
    id?: SortOrder
    rol_id?: SortOrder
    screen_id?: SortOrder
    puede_ver?: SortOrder
    puede_crear?: SortOrder
    puede_editar?: SortOrder
    puede_eliminar?: SortOrder
  }

  export type permisoSumOrderByAggregateInput = {
    id?: SortOrder
    rol_id?: SortOrder
    screen_id?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type CodigobarraListRelationFilter = {
    every?: codigobarraWhereInput
    some?: codigobarraWhereInput
    none?: codigobarraWhereInput
  }

  export type ListaprecioListRelationFilter = {
    every?: listaprecioWhereInput
    some?: listaprecioWhereInput
    none?: listaprecioWhereInput
  }

  export type ProductocomboListRelationFilter = {
    every?: productocomboWhereInput
    some?: productocomboWhereInput
    none?: productocomboWhereInput
  }

  export type codigobarraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type listaprecioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type productocomboOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type productoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    es_combo?: SortOrder
    stock_minimo?: SortOrder
  }

  export type productoAvgOrderByAggregateInput = {
    id?: SortOrder
    stock_minimo?: SortOrder
  }

  export type productoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    es_combo?: SortOrder
    stock_minimo?: SortOrder
  }

  export type productoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    es_combo?: SortOrder
    stock_minimo?: SortOrder
  }

  export type productoSumOrderByAggregateInput = {
    id?: SortOrder
    stock_minimo?: SortOrder
  }

  export type productocomboCountOrderByAggregateInput = {
    id?: SortOrder
    combo_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
  }

  export type productocomboAvgOrderByAggregateInput = {
    id?: SortOrder
    combo_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
  }

  export type productocomboMaxOrderByAggregateInput = {
    id?: SortOrder
    combo_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
  }

  export type productocomboMinOrderByAggregateInput = {
    id?: SortOrder
    combo_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
  }

  export type productocomboSumOrderByAggregateInput = {
    id?: SortOrder
    combo_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
  }

  export type productoterminadoCountOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    lote_id?: SortOrder
    cantidad?: SortOrder
  }

  export type productoterminadoAvgOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    lote_id?: SortOrder
    cantidad?: SortOrder
  }

  export type productoterminadoMaxOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    lote_id?: SortOrder
    cantidad?: SortOrder
  }

  export type productoterminadoMinOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    lote_id?: SortOrder
    cantidad?: SortOrder
  }

  export type productoterminadoSumOrderByAggregateInput = {
    id?: SortOrder
    orden_id?: SortOrder
    lote_id?: SortOrder
    cantidad?: SortOrder
  }

  export type CompraListRelationFilter = {
    every?: compraWhereInput
    some?: compraWhereInput
    none?: compraWhereInput
  }

  export type compraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type proveedorCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    nit?: SortOrder
    contacto?: SortOrder
    telefono?: SortOrder
    correo?: SortOrder
    direccion?: SortOrder
    tipo?: SortOrder
  }

  export type proveedorAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type proveedorMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    nit?: SortOrder
    contacto?: SortOrder
    telefono?: SortOrder
    correo?: SortOrder
    direccion?: SortOrder
    tipo?: SortOrder
  }

  export type proveedorMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    nit?: SortOrder
    contacto?: SortOrder
    telefono?: SortOrder
    correo?: SortOrder
    direccion?: SortOrder
    tipo?: SortOrder
  }

  export type proveedorSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PermisoListRelationFilter = {
    every?: permisoWhereInput
    some?: permisoWhereInput
    none?: permisoWhereInput
  }

  export type UsuarioListRelationFilter = {
    every?: usuarioWhereInput
    some?: usuarioWhereInput
    none?: usuarioWhereInput
  }

  export type permisoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type rolCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type rolAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type rolMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type rolMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type rolSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type screenCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type screenAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type screenMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type screenMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type screenSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type sucursalCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
  }

  export type sucursalAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type sucursalMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
  }

  export type sucursalMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
  }

  export type sucursalSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CuentafinancieraListRelationFilter = {
    every?: cuentafinancieraWhereInput
    some?: cuentafinancieraWhereInput
    none?: cuentafinancieraWhereInput
  }

  export type cuentafinancieraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tipocuentaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type tipocuentaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipocuentaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type tipocuentaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type tipocuentaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipolistaprecioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type tipolistaprecioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipolistaprecioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type tipolistaprecioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type tipolistaprecioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipotransaccionCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type tipotransaccionAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipotransaccionMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type tipotransaccionMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type tipotransaccionSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipoventaCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type tipoventaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tipoventaMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type tipoventaMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type tipoventaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CuentafinancieraNullableScalarRelationFilter = {
    is?: cuentafinancieraWhereInput | null
    isNot?: cuentafinancieraWhereInput | null
  }

  export type TipotransaccionNullableScalarRelationFilter = {
    is?: tipotransaccionWhereInput | null
    isNot?: tipotransaccionWhereInput | null
  }

  export type transaccionfinancieraCountOrderByAggregateInput = {
    id?: SortOrder
    cuenta_id?: SortOrder
    fecha?: SortOrder
    tipo_id?: SortOrder
    monto?: SortOrder
    descripcion?: SortOrder
  }

  export type transaccionfinancieraAvgOrderByAggregateInput = {
    id?: SortOrder
    cuenta_id?: SortOrder
    tipo_id?: SortOrder
    monto?: SortOrder
  }

  export type transaccionfinancieraMaxOrderByAggregateInput = {
    id?: SortOrder
    cuenta_id?: SortOrder
    fecha?: SortOrder
    tipo_id?: SortOrder
    monto?: SortOrder
    descripcion?: SortOrder
  }

  export type transaccionfinancieraMinOrderByAggregateInput = {
    id?: SortOrder
    cuenta_id?: SortOrder
    fecha?: SortOrder
    tipo_id?: SortOrder
    monto?: SortOrder
    descripcion?: SortOrder
  }

  export type transaccionfinancieraSumOrderByAggregateInput = {
    id?: SortOrder
    cuenta_id?: SortOrder
    tipo_id?: SortOrder
    monto?: SortOrder
  }

  export type usuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    rol_id?: SortOrder
  }

  export type usuarioAvgOrderByAggregateInput = {
    id?: SortOrder
    rol_id?: SortOrder
  }

  export type usuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    rol_id?: SortOrder
  }

  export type usuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contrasena?: SortOrder
    rol_id?: SortOrder
  }

  export type usuarioSumOrderByAggregateInput = {
    id?: SortOrder
    rol_id?: SortOrder
  }

  export type EstadoventaNullableScalarRelationFilter = {
    is?: estadoventaWhereInput | null
    isNot?: estadoventaWhereInput | null
  }

  export type UsuarioNullableScalarRelationFilter = {
    is?: usuarioWhereInput | null
    isNot?: usuarioWhereInput | null
  }

  export type ventaCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    fecha?: SortOrder
    estado_id?: SortOrder
    total?: SortOrder
  }

  export type ventaAvgOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    estado_id?: SortOrder
    total?: SortOrder
  }

  export type ventaMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    fecha?: SortOrder
    estado_id?: SortOrder
    total?: SortOrder
  }

  export type ventaMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    fecha?: SortOrder
    estado_id?: SortOrder
    total?: SortOrder
  }

  export type ventaSumOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    estado_id?: SortOrder
    total?: SortOrder
  }

  export type productoCreateNestedOneWithoutCodigobarraInput = {
    create?: XOR<productoCreateWithoutCodigobarraInput, productoUncheckedCreateWithoutCodigobarraInput>
    connectOrCreate?: productoCreateOrConnectWithoutCodigobarraInput
    connect?: productoWhereUniqueInput
  }

  export type detalleventaCreateNestedManyWithoutCodigobarraInput = {
    create?: XOR<detalleventaCreateWithoutCodigobarraInput, detalleventaUncheckedCreateWithoutCodigobarraInput> | detalleventaCreateWithoutCodigobarraInput[] | detalleventaUncheckedCreateWithoutCodigobarraInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutCodigobarraInput | detalleventaCreateOrConnectWithoutCodigobarraInput[]
    createMany?: detalleventaCreateManyCodigobarraInputEnvelope
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
  }

  export type loteCreateNestedManyWithoutCodigobarraInput = {
    create?: XOR<loteCreateWithoutCodigobarraInput, loteUncheckedCreateWithoutCodigobarraInput> | loteCreateWithoutCodigobarraInput[] | loteUncheckedCreateWithoutCodigobarraInput[]
    connectOrCreate?: loteCreateOrConnectWithoutCodigobarraInput | loteCreateOrConnectWithoutCodigobarraInput[]
    createMany?: loteCreateManyCodigobarraInputEnvelope
    connect?: loteWhereUniqueInput | loteWhereUniqueInput[]
  }

  export type detalleventaUncheckedCreateNestedManyWithoutCodigobarraInput = {
    create?: XOR<detalleventaCreateWithoutCodigobarraInput, detalleventaUncheckedCreateWithoutCodigobarraInput> | detalleventaCreateWithoutCodigobarraInput[] | detalleventaUncheckedCreateWithoutCodigobarraInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutCodigobarraInput | detalleventaCreateOrConnectWithoutCodigobarraInput[]
    createMany?: detalleventaCreateManyCodigobarraInputEnvelope
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
  }

  export type loteUncheckedCreateNestedManyWithoutCodigobarraInput = {
    create?: XOR<loteCreateWithoutCodigobarraInput, loteUncheckedCreateWithoutCodigobarraInput> | loteCreateWithoutCodigobarraInput[] | loteUncheckedCreateWithoutCodigobarraInput[]
    connectOrCreate?: loteCreateOrConnectWithoutCodigobarraInput | loteCreateOrConnectWithoutCodigobarraInput[]
    createMany?: loteCreateManyCodigobarraInputEnvelope
    connect?: loteWhereUniqueInput | loteWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type productoUpdateOneWithoutCodigobarraNestedInput = {
    create?: XOR<productoCreateWithoutCodigobarraInput, productoUncheckedCreateWithoutCodigobarraInput>
    connectOrCreate?: productoCreateOrConnectWithoutCodigobarraInput
    upsert?: productoUpsertWithoutCodigobarraInput
    disconnect?: productoWhereInput | boolean
    delete?: productoWhereInput | boolean
    connect?: productoWhereUniqueInput
    update?: XOR<XOR<productoUpdateToOneWithWhereWithoutCodigobarraInput, productoUpdateWithoutCodigobarraInput>, productoUncheckedUpdateWithoutCodigobarraInput>
  }

  export type detalleventaUpdateManyWithoutCodigobarraNestedInput = {
    create?: XOR<detalleventaCreateWithoutCodigobarraInput, detalleventaUncheckedCreateWithoutCodigobarraInput> | detalleventaCreateWithoutCodigobarraInput[] | detalleventaUncheckedCreateWithoutCodigobarraInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutCodigobarraInput | detalleventaCreateOrConnectWithoutCodigobarraInput[]
    upsert?: detalleventaUpsertWithWhereUniqueWithoutCodigobarraInput | detalleventaUpsertWithWhereUniqueWithoutCodigobarraInput[]
    createMany?: detalleventaCreateManyCodigobarraInputEnvelope
    set?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    disconnect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    delete?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    update?: detalleventaUpdateWithWhereUniqueWithoutCodigobarraInput | detalleventaUpdateWithWhereUniqueWithoutCodigobarraInput[]
    updateMany?: detalleventaUpdateManyWithWhereWithoutCodigobarraInput | detalleventaUpdateManyWithWhereWithoutCodigobarraInput[]
    deleteMany?: detalleventaScalarWhereInput | detalleventaScalarWhereInput[]
  }

  export type loteUpdateManyWithoutCodigobarraNestedInput = {
    create?: XOR<loteCreateWithoutCodigobarraInput, loteUncheckedCreateWithoutCodigobarraInput> | loteCreateWithoutCodigobarraInput[] | loteUncheckedCreateWithoutCodigobarraInput[]
    connectOrCreate?: loteCreateOrConnectWithoutCodigobarraInput | loteCreateOrConnectWithoutCodigobarraInput[]
    upsert?: loteUpsertWithWhereUniqueWithoutCodigobarraInput | loteUpsertWithWhereUniqueWithoutCodigobarraInput[]
    createMany?: loteCreateManyCodigobarraInputEnvelope
    set?: loteWhereUniqueInput | loteWhereUniqueInput[]
    disconnect?: loteWhereUniqueInput | loteWhereUniqueInput[]
    delete?: loteWhereUniqueInput | loteWhereUniqueInput[]
    connect?: loteWhereUniqueInput | loteWhereUniqueInput[]
    update?: loteUpdateWithWhereUniqueWithoutCodigobarraInput | loteUpdateWithWhereUniqueWithoutCodigobarraInput[]
    updateMany?: loteUpdateManyWithWhereWithoutCodigobarraInput | loteUpdateManyWithWhereWithoutCodigobarraInput[]
    deleteMany?: loteScalarWhereInput | loteScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type detalleventaUncheckedUpdateManyWithoutCodigobarraNestedInput = {
    create?: XOR<detalleventaCreateWithoutCodigobarraInput, detalleventaUncheckedCreateWithoutCodigobarraInput> | detalleventaCreateWithoutCodigobarraInput[] | detalleventaUncheckedCreateWithoutCodigobarraInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutCodigobarraInput | detalleventaCreateOrConnectWithoutCodigobarraInput[]
    upsert?: detalleventaUpsertWithWhereUniqueWithoutCodigobarraInput | detalleventaUpsertWithWhereUniqueWithoutCodigobarraInput[]
    createMany?: detalleventaCreateManyCodigobarraInputEnvelope
    set?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    disconnect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    delete?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    update?: detalleventaUpdateWithWhereUniqueWithoutCodigobarraInput | detalleventaUpdateWithWhereUniqueWithoutCodigobarraInput[]
    updateMany?: detalleventaUpdateManyWithWhereWithoutCodigobarraInput | detalleventaUpdateManyWithWhereWithoutCodigobarraInput[]
    deleteMany?: detalleventaScalarWhereInput | detalleventaScalarWhereInput[]
  }

  export type loteUncheckedUpdateManyWithoutCodigobarraNestedInput = {
    create?: XOR<loteCreateWithoutCodigobarraInput, loteUncheckedCreateWithoutCodigobarraInput> | loteCreateWithoutCodigobarraInput[] | loteUncheckedCreateWithoutCodigobarraInput[]
    connectOrCreate?: loteCreateOrConnectWithoutCodigobarraInput | loteCreateOrConnectWithoutCodigobarraInput[]
    upsert?: loteUpsertWithWhereUniqueWithoutCodigobarraInput | loteUpsertWithWhereUniqueWithoutCodigobarraInput[]
    createMany?: loteCreateManyCodigobarraInputEnvelope
    set?: loteWhereUniqueInput | loteWhereUniqueInput[]
    disconnect?: loteWhereUniqueInput | loteWhereUniqueInput[]
    delete?: loteWhereUniqueInput | loteWhereUniqueInput[]
    connect?: loteWhereUniqueInput | loteWhereUniqueInput[]
    update?: loteUpdateWithWhereUniqueWithoutCodigobarraInput | loteUpdateWithWhereUniqueWithoutCodigobarraInput[]
    updateMany?: loteUpdateManyWithWhereWithoutCodigobarraInput | loteUpdateManyWithWhereWithoutCodigobarraInput[]
    deleteMany?: loteScalarWhereInput | loteScalarWhereInput[]
  }

  export type proveedorCreateNestedOneWithoutCompraInput = {
    create?: XOR<proveedorCreateWithoutCompraInput, proveedorUncheckedCreateWithoutCompraInput>
    connectOrCreate?: proveedorCreateOrConnectWithoutCompraInput
    connect?: proveedorWhereUniqueInput
  }

  export type detallecompraCreateNestedManyWithoutCompraInput = {
    create?: XOR<detallecompraCreateWithoutCompraInput, detallecompraUncheckedCreateWithoutCompraInput> | detallecompraCreateWithoutCompraInput[] | detallecompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: detallecompraCreateOrConnectWithoutCompraInput | detallecompraCreateOrConnectWithoutCompraInput[]
    createMany?: detallecompraCreateManyCompraInputEnvelope
    connect?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
  }

  export type ordencompracompraCreateNestedManyWithoutCompraInput = {
    create?: XOR<ordencompracompraCreateWithoutCompraInput, ordencompracompraUncheckedCreateWithoutCompraInput> | ordencompracompraCreateWithoutCompraInput[] | ordencompracompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: ordencompracompraCreateOrConnectWithoutCompraInput | ordencompracompraCreateOrConnectWithoutCompraInput[]
    createMany?: ordencompracompraCreateManyCompraInputEnvelope
    connect?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
  }

  export type detallecompraUncheckedCreateNestedManyWithoutCompraInput = {
    create?: XOR<detallecompraCreateWithoutCompraInput, detallecompraUncheckedCreateWithoutCompraInput> | detallecompraCreateWithoutCompraInput[] | detallecompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: detallecompraCreateOrConnectWithoutCompraInput | detallecompraCreateOrConnectWithoutCompraInput[]
    createMany?: detallecompraCreateManyCompraInputEnvelope
    connect?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
  }

  export type ordencompracompraUncheckedCreateNestedManyWithoutCompraInput = {
    create?: XOR<ordencompracompraCreateWithoutCompraInput, ordencompracompraUncheckedCreateWithoutCompraInput> | ordencompracompraCreateWithoutCompraInput[] | ordencompracompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: ordencompracompraCreateOrConnectWithoutCompraInput | ordencompracompraCreateOrConnectWithoutCompraInput[]
    createMany?: ordencompracompraCreateManyCompraInputEnvelope
    connect?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type proveedorUpdateOneWithoutCompraNestedInput = {
    create?: XOR<proveedorCreateWithoutCompraInput, proveedorUncheckedCreateWithoutCompraInput>
    connectOrCreate?: proveedorCreateOrConnectWithoutCompraInput
    upsert?: proveedorUpsertWithoutCompraInput
    disconnect?: proveedorWhereInput | boolean
    delete?: proveedorWhereInput | boolean
    connect?: proveedorWhereUniqueInput
    update?: XOR<XOR<proveedorUpdateToOneWithWhereWithoutCompraInput, proveedorUpdateWithoutCompraInput>, proveedorUncheckedUpdateWithoutCompraInput>
  }

  export type detallecompraUpdateManyWithoutCompraNestedInput = {
    create?: XOR<detallecompraCreateWithoutCompraInput, detallecompraUncheckedCreateWithoutCompraInput> | detallecompraCreateWithoutCompraInput[] | detallecompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: detallecompraCreateOrConnectWithoutCompraInput | detallecompraCreateOrConnectWithoutCompraInput[]
    upsert?: detallecompraUpsertWithWhereUniqueWithoutCompraInput | detallecompraUpsertWithWhereUniqueWithoutCompraInput[]
    createMany?: detallecompraCreateManyCompraInputEnvelope
    set?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    disconnect?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    delete?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    connect?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    update?: detallecompraUpdateWithWhereUniqueWithoutCompraInput | detallecompraUpdateWithWhereUniqueWithoutCompraInput[]
    updateMany?: detallecompraUpdateManyWithWhereWithoutCompraInput | detallecompraUpdateManyWithWhereWithoutCompraInput[]
    deleteMany?: detallecompraScalarWhereInput | detallecompraScalarWhereInput[]
  }

  export type ordencompracompraUpdateManyWithoutCompraNestedInput = {
    create?: XOR<ordencompracompraCreateWithoutCompraInput, ordencompracompraUncheckedCreateWithoutCompraInput> | ordencompracompraCreateWithoutCompraInput[] | ordencompracompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: ordencompracompraCreateOrConnectWithoutCompraInput | ordencompracompraCreateOrConnectWithoutCompraInput[]
    upsert?: ordencompracompraUpsertWithWhereUniqueWithoutCompraInput | ordencompracompraUpsertWithWhereUniqueWithoutCompraInput[]
    createMany?: ordencompracompraCreateManyCompraInputEnvelope
    set?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    disconnect?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    delete?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    connect?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    update?: ordencompracompraUpdateWithWhereUniqueWithoutCompraInput | ordencompracompraUpdateWithWhereUniqueWithoutCompraInput[]
    updateMany?: ordencompracompraUpdateManyWithWhereWithoutCompraInput | ordencompracompraUpdateManyWithWhereWithoutCompraInput[]
    deleteMany?: ordencompracompraScalarWhereInput | ordencompracompraScalarWhereInput[]
  }

  export type detallecompraUncheckedUpdateManyWithoutCompraNestedInput = {
    create?: XOR<detallecompraCreateWithoutCompraInput, detallecompraUncheckedCreateWithoutCompraInput> | detallecompraCreateWithoutCompraInput[] | detallecompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: detallecompraCreateOrConnectWithoutCompraInput | detallecompraCreateOrConnectWithoutCompraInput[]
    upsert?: detallecompraUpsertWithWhereUniqueWithoutCompraInput | detallecompraUpsertWithWhereUniqueWithoutCompraInput[]
    createMany?: detallecompraCreateManyCompraInputEnvelope
    set?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    disconnect?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    delete?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    connect?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    update?: detallecompraUpdateWithWhereUniqueWithoutCompraInput | detallecompraUpdateWithWhereUniqueWithoutCompraInput[]
    updateMany?: detallecompraUpdateManyWithWhereWithoutCompraInput | detallecompraUpdateManyWithWhereWithoutCompraInput[]
    deleteMany?: detallecompraScalarWhereInput | detallecompraScalarWhereInput[]
  }

  export type ordencompracompraUncheckedUpdateManyWithoutCompraNestedInput = {
    create?: XOR<ordencompracompraCreateWithoutCompraInput, ordencompracompraUncheckedCreateWithoutCompraInput> | ordencompracompraCreateWithoutCompraInput[] | ordencompracompraUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: ordencompracompraCreateOrConnectWithoutCompraInput | ordencompracompraCreateOrConnectWithoutCompraInput[]
    upsert?: ordencompracompraUpsertWithWhereUniqueWithoutCompraInput | ordencompracompraUpsertWithWhereUniqueWithoutCompraInput[]
    createMany?: ordencompracompraCreateManyCompraInputEnvelope
    set?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    disconnect?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    delete?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    connect?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    update?: ordencompracompraUpdateWithWhereUniqueWithoutCompraInput | ordencompracompraUpdateWithWhereUniqueWithoutCompraInput[]
    updateMany?: ordencompracompraUpdateManyWithWhereWithoutCompraInput | ordencompracompraUpdateManyWithWhereWithoutCompraInput[]
    deleteMany?: ordencompracompraScalarWhereInput | ordencompracompraScalarWhereInput[]
  }

  export type tipocuentaCreateNestedOneWithoutCuentafinancieraInput = {
    create?: XOR<tipocuentaCreateWithoutCuentafinancieraInput, tipocuentaUncheckedCreateWithoutCuentafinancieraInput>
    connectOrCreate?: tipocuentaCreateOrConnectWithoutCuentafinancieraInput
    connect?: tipocuentaWhereUniqueInput
  }

  export type transaccionfinancieraCreateNestedManyWithoutCuentafinancieraInput = {
    create?: XOR<transaccionfinancieraCreateWithoutCuentafinancieraInput, transaccionfinancieraUncheckedCreateWithoutCuentafinancieraInput> | transaccionfinancieraCreateWithoutCuentafinancieraInput[] | transaccionfinancieraUncheckedCreateWithoutCuentafinancieraInput[]
    connectOrCreate?: transaccionfinancieraCreateOrConnectWithoutCuentafinancieraInput | transaccionfinancieraCreateOrConnectWithoutCuentafinancieraInput[]
    createMany?: transaccionfinancieraCreateManyCuentafinancieraInputEnvelope
    connect?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
  }

  export type transaccionfinancieraUncheckedCreateNestedManyWithoutCuentafinancieraInput = {
    create?: XOR<transaccionfinancieraCreateWithoutCuentafinancieraInput, transaccionfinancieraUncheckedCreateWithoutCuentafinancieraInput> | transaccionfinancieraCreateWithoutCuentafinancieraInput[] | transaccionfinancieraUncheckedCreateWithoutCuentafinancieraInput[]
    connectOrCreate?: transaccionfinancieraCreateOrConnectWithoutCuentafinancieraInput | transaccionfinancieraCreateOrConnectWithoutCuentafinancieraInput[]
    createMany?: transaccionfinancieraCreateManyCuentafinancieraInputEnvelope
    connect?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type tipocuentaUpdateOneWithoutCuentafinancieraNestedInput = {
    create?: XOR<tipocuentaCreateWithoutCuentafinancieraInput, tipocuentaUncheckedCreateWithoutCuentafinancieraInput>
    connectOrCreate?: tipocuentaCreateOrConnectWithoutCuentafinancieraInput
    upsert?: tipocuentaUpsertWithoutCuentafinancieraInput
    disconnect?: tipocuentaWhereInput | boolean
    delete?: tipocuentaWhereInput | boolean
    connect?: tipocuentaWhereUniqueInput
    update?: XOR<XOR<tipocuentaUpdateToOneWithWhereWithoutCuentafinancieraInput, tipocuentaUpdateWithoutCuentafinancieraInput>, tipocuentaUncheckedUpdateWithoutCuentafinancieraInput>
  }

  export type transaccionfinancieraUpdateManyWithoutCuentafinancieraNestedInput = {
    create?: XOR<transaccionfinancieraCreateWithoutCuentafinancieraInput, transaccionfinancieraUncheckedCreateWithoutCuentafinancieraInput> | transaccionfinancieraCreateWithoutCuentafinancieraInput[] | transaccionfinancieraUncheckedCreateWithoutCuentafinancieraInput[]
    connectOrCreate?: transaccionfinancieraCreateOrConnectWithoutCuentafinancieraInput | transaccionfinancieraCreateOrConnectWithoutCuentafinancieraInput[]
    upsert?: transaccionfinancieraUpsertWithWhereUniqueWithoutCuentafinancieraInput | transaccionfinancieraUpsertWithWhereUniqueWithoutCuentafinancieraInput[]
    createMany?: transaccionfinancieraCreateManyCuentafinancieraInputEnvelope
    set?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    disconnect?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    delete?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    connect?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    update?: transaccionfinancieraUpdateWithWhereUniqueWithoutCuentafinancieraInput | transaccionfinancieraUpdateWithWhereUniqueWithoutCuentafinancieraInput[]
    updateMany?: transaccionfinancieraUpdateManyWithWhereWithoutCuentafinancieraInput | transaccionfinancieraUpdateManyWithWhereWithoutCuentafinancieraInput[]
    deleteMany?: transaccionfinancieraScalarWhereInput | transaccionfinancieraScalarWhereInput[]
  }

  export type transaccionfinancieraUncheckedUpdateManyWithoutCuentafinancieraNestedInput = {
    create?: XOR<transaccionfinancieraCreateWithoutCuentafinancieraInput, transaccionfinancieraUncheckedCreateWithoutCuentafinancieraInput> | transaccionfinancieraCreateWithoutCuentafinancieraInput[] | transaccionfinancieraUncheckedCreateWithoutCuentafinancieraInput[]
    connectOrCreate?: transaccionfinancieraCreateOrConnectWithoutCuentafinancieraInput | transaccionfinancieraCreateOrConnectWithoutCuentafinancieraInput[]
    upsert?: transaccionfinancieraUpsertWithWhereUniqueWithoutCuentafinancieraInput | transaccionfinancieraUpsertWithWhereUniqueWithoutCuentafinancieraInput[]
    createMany?: transaccionfinancieraCreateManyCuentafinancieraInputEnvelope
    set?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    disconnect?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    delete?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    connect?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    update?: transaccionfinancieraUpdateWithWhereUniqueWithoutCuentafinancieraInput | transaccionfinancieraUpdateWithWhereUniqueWithoutCuentafinancieraInput[]
    updateMany?: transaccionfinancieraUpdateManyWithWhereWithoutCuentafinancieraInput | transaccionfinancieraUpdateManyWithWhereWithoutCuentafinancieraInput[]
    deleteMany?: transaccionfinancieraScalarWhereInput | transaccionfinancieraScalarWhereInput[]
  }

  export type compraCreateNestedOneWithoutDetallecompraInput = {
    create?: XOR<compraCreateWithoutDetallecompraInput, compraUncheckedCreateWithoutDetallecompraInput>
    connectOrCreate?: compraCreateOrConnectWithoutDetallecompraInput
    connect?: compraWhereUniqueInput
  }

  export type loteCreateNestedOneWithoutDetallecompraInput = {
    create?: XOR<loteCreateWithoutDetallecompraInput, loteUncheckedCreateWithoutDetallecompraInput>
    connectOrCreate?: loteCreateOrConnectWithoutDetallecompraInput
    connect?: loteWhereUniqueInput
  }

  export type compraUpdateOneWithoutDetallecompraNestedInput = {
    create?: XOR<compraCreateWithoutDetallecompraInput, compraUncheckedCreateWithoutDetallecompraInput>
    connectOrCreate?: compraCreateOrConnectWithoutDetallecompraInput
    upsert?: compraUpsertWithoutDetallecompraInput
    disconnect?: compraWhereInput | boolean
    delete?: compraWhereInput | boolean
    connect?: compraWhereUniqueInput
    update?: XOR<XOR<compraUpdateToOneWithWhereWithoutDetallecompraInput, compraUpdateWithoutDetallecompraInput>, compraUncheckedUpdateWithoutDetallecompraInput>
  }

  export type loteUpdateOneWithoutDetallecompraNestedInput = {
    create?: XOR<loteCreateWithoutDetallecompraInput, loteUncheckedCreateWithoutDetallecompraInput>
    connectOrCreate?: loteCreateOrConnectWithoutDetallecompraInput
    upsert?: loteUpsertWithoutDetallecompraInput
    disconnect?: loteWhereInput | boolean
    delete?: loteWhereInput | boolean
    connect?: loteWhereUniqueInput
    update?: XOR<XOR<loteUpdateToOneWithWhereWithoutDetallecompraInput, loteUpdateWithoutDetallecompraInput>, loteUncheckedUpdateWithoutDetallecompraInput>
  }

  export type ordencompraCreateNestedOneWithoutDetalleordencompraInput = {
    create?: XOR<ordencompraCreateWithoutDetalleordencompraInput, ordencompraUncheckedCreateWithoutDetalleordencompraInput>
    connectOrCreate?: ordencompraCreateOrConnectWithoutDetalleordencompraInput
    connect?: ordencompraWhereUniqueInput
  }

  export type productoCreateNestedOneWithoutDetalleordencompraInput = {
    create?: XOR<productoCreateWithoutDetalleordencompraInput, productoUncheckedCreateWithoutDetalleordencompraInput>
    connectOrCreate?: productoCreateOrConnectWithoutDetalleordencompraInput
    connect?: productoWhereUniqueInput
  }

  export type ordencompraUpdateOneWithoutDetalleordencompraNestedInput = {
    create?: XOR<ordencompraCreateWithoutDetalleordencompraInput, ordencompraUncheckedCreateWithoutDetalleordencompraInput>
    connectOrCreate?: ordencompraCreateOrConnectWithoutDetalleordencompraInput
    upsert?: ordencompraUpsertWithoutDetalleordencompraInput
    disconnect?: ordencompraWhereInput | boolean
    delete?: ordencompraWhereInput | boolean
    connect?: ordencompraWhereUniqueInput
    update?: XOR<XOR<ordencompraUpdateToOneWithWhereWithoutDetalleordencompraInput, ordencompraUpdateWithoutDetalleordencompraInput>, ordencompraUncheckedUpdateWithoutDetalleordencompraInput>
  }

  export type productoUpdateOneWithoutDetalleordencompraNestedInput = {
    create?: XOR<productoCreateWithoutDetalleordencompraInput, productoUncheckedCreateWithoutDetalleordencompraInput>
    connectOrCreate?: productoCreateOrConnectWithoutDetalleordencompraInput
    upsert?: productoUpsertWithoutDetalleordencompraInput
    disconnect?: productoWhereInput | boolean
    delete?: productoWhereInput | boolean
    connect?: productoWhereUniqueInput
    update?: XOR<XOR<productoUpdateToOneWithWhereWithoutDetalleordencompraInput, productoUpdateWithoutDetalleordencompraInput>, productoUncheckedUpdateWithoutDetalleordencompraInput>
  }

  export type codigobarraCreateNestedOneWithoutDetalleventaInput = {
    create?: XOR<codigobarraCreateWithoutDetalleventaInput, codigobarraUncheckedCreateWithoutDetalleventaInput>
    connectOrCreate?: codigobarraCreateOrConnectWithoutDetalleventaInput
    connect?: codigobarraWhereUniqueInput
  }

  export type productoCreateNestedOneWithoutDetalleventaInput = {
    create?: XOR<productoCreateWithoutDetalleventaInput, productoUncheckedCreateWithoutDetalleventaInput>
    connectOrCreate?: productoCreateOrConnectWithoutDetalleventaInput
    connect?: productoWhereUniqueInput
  }

  export type tipolistaprecioCreateNestedOneWithoutDetalleventaInput = {
    create?: XOR<tipolistaprecioCreateWithoutDetalleventaInput, tipolistaprecioUncheckedCreateWithoutDetalleventaInput>
    connectOrCreate?: tipolistaprecioCreateOrConnectWithoutDetalleventaInput
    connect?: tipolistaprecioWhereUniqueInput
  }

  export type tipoventaCreateNestedOneWithoutDetalleventaInput = {
    create?: XOR<tipoventaCreateWithoutDetalleventaInput, tipoventaUncheckedCreateWithoutDetalleventaInput>
    connectOrCreate?: tipoventaCreateOrConnectWithoutDetalleventaInput
    connect?: tipoventaWhereUniqueInput
  }

  export type ventaCreateNestedOneWithoutDetalleventaInput = {
    create?: XOR<ventaCreateWithoutDetalleventaInput, ventaUncheckedCreateWithoutDetalleventaInput>
    connectOrCreate?: ventaCreateOrConnectWithoutDetalleventaInput
    connect?: ventaWhereUniqueInput
  }

  export type codigobarraUpdateOneWithoutDetalleventaNestedInput = {
    create?: XOR<codigobarraCreateWithoutDetalleventaInput, codigobarraUncheckedCreateWithoutDetalleventaInput>
    connectOrCreate?: codigobarraCreateOrConnectWithoutDetalleventaInput
    upsert?: codigobarraUpsertWithoutDetalleventaInput
    disconnect?: codigobarraWhereInput | boolean
    delete?: codigobarraWhereInput | boolean
    connect?: codigobarraWhereUniqueInput
    update?: XOR<XOR<codigobarraUpdateToOneWithWhereWithoutDetalleventaInput, codigobarraUpdateWithoutDetalleventaInput>, codigobarraUncheckedUpdateWithoutDetalleventaInput>
  }

  export type productoUpdateOneWithoutDetalleventaNestedInput = {
    create?: XOR<productoCreateWithoutDetalleventaInput, productoUncheckedCreateWithoutDetalleventaInput>
    connectOrCreate?: productoCreateOrConnectWithoutDetalleventaInput
    upsert?: productoUpsertWithoutDetalleventaInput
    disconnect?: productoWhereInput | boolean
    delete?: productoWhereInput | boolean
    connect?: productoWhereUniqueInput
    update?: XOR<XOR<productoUpdateToOneWithWhereWithoutDetalleventaInput, productoUpdateWithoutDetalleventaInput>, productoUncheckedUpdateWithoutDetalleventaInput>
  }

  export type tipolistaprecioUpdateOneWithoutDetalleventaNestedInput = {
    create?: XOR<tipolistaprecioCreateWithoutDetalleventaInput, tipolistaprecioUncheckedCreateWithoutDetalleventaInput>
    connectOrCreate?: tipolistaprecioCreateOrConnectWithoutDetalleventaInput
    upsert?: tipolistaprecioUpsertWithoutDetalleventaInput
    disconnect?: tipolistaprecioWhereInput | boolean
    delete?: tipolistaprecioWhereInput | boolean
    connect?: tipolistaprecioWhereUniqueInput
    update?: XOR<XOR<tipolistaprecioUpdateToOneWithWhereWithoutDetalleventaInput, tipolistaprecioUpdateWithoutDetalleventaInput>, tipolistaprecioUncheckedUpdateWithoutDetalleventaInput>
  }

  export type tipoventaUpdateOneWithoutDetalleventaNestedInput = {
    create?: XOR<tipoventaCreateWithoutDetalleventaInput, tipoventaUncheckedCreateWithoutDetalleventaInput>
    connectOrCreate?: tipoventaCreateOrConnectWithoutDetalleventaInput
    upsert?: tipoventaUpsertWithoutDetalleventaInput
    disconnect?: tipoventaWhereInput | boolean
    delete?: tipoventaWhereInput | boolean
    connect?: tipoventaWhereUniqueInput
    update?: XOR<XOR<tipoventaUpdateToOneWithWhereWithoutDetalleventaInput, tipoventaUpdateWithoutDetalleventaInput>, tipoventaUncheckedUpdateWithoutDetalleventaInput>
  }

  export type ventaUpdateOneWithoutDetalleventaNestedInput = {
    create?: XOR<ventaCreateWithoutDetalleventaInput, ventaUncheckedCreateWithoutDetalleventaInput>
    connectOrCreate?: ventaCreateOrConnectWithoutDetalleventaInput
    upsert?: ventaUpsertWithoutDetalleventaInput
    disconnect?: ventaWhereInput | boolean
    delete?: ventaWhereInput | boolean
    connect?: ventaWhereUniqueInput
    update?: XOR<XOR<ventaUpdateToOneWithWhereWithoutDetalleventaInput, ventaUpdateWithoutDetalleventaInput>, ventaUncheckedUpdateWithoutDetalleventaInput>
  }

  export type ordencompraCreateNestedManyWithoutEstadoordencompraInput = {
    create?: XOR<ordencompraCreateWithoutEstadoordencompraInput, ordencompraUncheckedCreateWithoutEstadoordencompraInput> | ordencompraCreateWithoutEstadoordencompraInput[] | ordencompraUncheckedCreateWithoutEstadoordencompraInput[]
    connectOrCreate?: ordencompraCreateOrConnectWithoutEstadoordencompraInput | ordencompraCreateOrConnectWithoutEstadoordencompraInput[]
    createMany?: ordencompraCreateManyEstadoordencompraInputEnvelope
    connect?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
  }

  export type ordencompraUncheckedCreateNestedManyWithoutEstadoordencompraInput = {
    create?: XOR<ordencompraCreateWithoutEstadoordencompraInput, ordencompraUncheckedCreateWithoutEstadoordencompraInput> | ordencompraCreateWithoutEstadoordencompraInput[] | ordencompraUncheckedCreateWithoutEstadoordencompraInput[]
    connectOrCreate?: ordencompraCreateOrConnectWithoutEstadoordencompraInput | ordencompraCreateOrConnectWithoutEstadoordencompraInput[]
    createMany?: ordencompraCreateManyEstadoordencompraInputEnvelope
    connect?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
  }

  export type ordencompraUpdateManyWithoutEstadoordencompraNestedInput = {
    create?: XOR<ordencompraCreateWithoutEstadoordencompraInput, ordencompraUncheckedCreateWithoutEstadoordencompraInput> | ordencompraCreateWithoutEstadoordencompraInput[] | ordencompraUncheckedCreateWithoutEstadoordencompraInput[]
    connectOrCreate?: ordencompraCreateOrConnectWithoutEstadoordencompraInput | ordencompraCreateOrConnectWithoutEstadoordencompraInput[]
    upsert?: ordencompraUpsertWithWhereUniqueWithoutEstadoordencompraInput | ordencompraUpsertWithWhereUniqueWithoutEstadoordencompraInput[]
    createMany?: ordencompraCreateManyEstadoordencompraInputEnvelope
    set?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    disconnect?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    delete?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    connect?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    update?: ordencompraUpdateWithWhereUniqueWithoutEstadoordencompraInput | ordencompraUpdateWithWhereUniqueWithoutEstadoordencompraInput[]
    updateMany?: ordencompraUpdateManyWithWhereWithoutEstadoordencompraInput | ordencompraUpdateManyWithWhereWithoutEstadoordencompraInput[]
    deleteMany?: ordencompraScalarWhereInput | ordencompraScalarWhereInput[]
  }

  export type ordencompraUncheckedUpdateManyWithoutEstadoordencompraNestedInput = {
    create?: XOR<ordencompraCreateWithoutEstadoordencompraInput, ordencompraUncheckedCreateWithoutEstadoordencompraInput> | ordencompraCreateWithoutEstadoordencompraInput[] | ordencompraUncheckedCreateWithoutEstadoordencompraInput[]
    connectOrCreate?: ordencompraCreateOrConnectWithoutEstadoordencompraInput | ordencompraCreateOrConnectWithoutEstadoordencompraInput[]
    upsert?: ordencompraUpsertWithWhereUniqueWithoutEstadoordencompraInput | ordencompraUpsertWithWhereUniqueWithoutEstadoordencompraInput[]
    createMany?: ordencompraCreateManyEstadoordencompraInputEnvelope
    set?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    disconnect?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    delete?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    connect?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    update?: ordencompraUpdateWithWhereUniqueWithoutEstadoordencompraInput | ordencompraUpdateWithWhereUniqueWithoutEstadoordencompraInput[]
    updateMany?: ordencompraUpdateManyWithWhereWithoutEstadoordencompraInput | ordencompraUpdateManyWithWhereWithoutEstadoordencompraInput[]
    deleteMany?: ordencompraScalarWhereInput | ordencompraScalarWhereInput[]
  }

  export type ordenproduccionCreateNestedManyWithoutEstadoproduccionInput = {
    create?: XOR<ordenproduccionCreateWithoutEstadoproduccionInput, ordenproduccionUncheckedCreateWithoutEstadoproduccionInput> | ordenproduccionCreateWithoutEstadoproduccionInput[] | ordenproduccionUncheckedCreateWithoutEstadoproduccionInput[]
    connectOrCreate?: ordenproduccionCreateOrConnectWithoutEstadoproduccionInput | ordenproduccionCreateOrConnectWithoutEstadoproduccionInput[]
    createMany?: ordenproduccionCreateManyEstadoproduccionInputEnvelope
    connect?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
  }

  export type ordenproduccionUncheckedCreateNestedManyWithoutEstadoproduccionInput = {
    create?: XOR<ordenproduccionCreateWithoutEstadoproduccionInput, ordenproduccionUncheckedCreateWithoutEstadoproduccionInput> | ordenproduccionCreateWithoutEstadoproduccionInput[] | ordenproduccionUncheckedCreateWithoutEstadoproduccionInput[]
    connectOrCreate?: ordenproduccionCreateOrConnectWithoutEstadoproduccionInput | ordenproduccionCreateOrConnectWithoutEstadoproduccionInput[]
    createMany?: ordenproduccionCreateManyEstadoproduccionInputEnvelope
    connect?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
  }

  export type ordenproduccionUpdateManyWithoutEstadoproduccionNestedInput = {
    create?: XOR<ordenproduccionCreateWithoutEstadoproduccionInput, ordenproduccionUncheckedCreateWithoutEstadoproduccionInput> | ordenproduccionCreateWithoutEstadoproduccionInput[] | ordenproduccionUncheckedCreateWithoutEstadoproduccionInput[]
    connectOrCreate?: ordenproduccionCreateOrConnectWithoutEstadoproduccionInput | ordenproduccionCreateOrConnectWithoutEstadoproduccionInput[]
    upsert?: ordenproduccionUpsertWithWhereUniqueWithoutEstadoproduccionInput | ordenproduccionUpsertWithWhereUniqueWithoutEstadoproduccionInput[]
    createMany?: ordenproduccionCreateManyEstadoproduccionInputEnvelope
    set?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    disconnect?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    delete?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    connect?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    update?: ordenproduccionUpdateWithWhereUniqueWithoutEstadoproduccionInput | ordenproduccionUpdateWithWhereUniqueWithoutEstadoproduccionInput[]
    updateMany?: ordenproduccionUpdateManyWithWhereWithoutEstadoproduccionInput | ordenproduccionUpdateManyWithWhereWithoutEstadoproduccionInput[]
    deleteMany?: ordenproduccionScalarWhereInput | ordenproduccionScalarWhereInput[]
  }

  export type ordenproduccionUncheckedUpdateManyWithoutEstadoproduccionNestedInput = {
    create?: XOR<ordenproduccionCreateWithoutEstadoproduccionInput, ordenproduccionUncheckedCreateWithoutEstadoproduccionInput> | ordenproduccionCreateWithoutEstadoproduccionInput[] | ordenproduccionUncheckedCreateWithoutEstadoproduccionInput[]
    connectOrCreate?: ordenproduccionCreateOrConnectWithoutEstadoproduccionInput | ordenproduccionCreateOrConnectWithoutEstadoproduccionInput[]
    upsert?: ordenproduccionUpsertWithWhereUniqueWithoutEstadoproduccionInput | ordenproduccionUpsertWithWhereUniqueWithoutEstadoproduccionInput[]
    createMany?: ordenproduccionCreateManyEstadoproduccionInputEnvelope
    set?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    disconnect?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    delete?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    connect?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    update?: ordenproduccionUpdateWithWhereUniqueWithoutEstadoproduccionInput | ordenproduccionUpdateWithWhereUniqueWithoutEstadoproduccionInput[]
    updateMany?: ordenproduccionUpdateManyWithWhereWithoutEstadoproduccionInput | ordenproduccionUpdateManyWithWhereWithoutEstadoproduccionInput[]
    deleteMany?: ordenproduccionScalarWhereInput | ordenproduccionScalarWhereInput[]
  }

  export type ventaCreateNestedManyWithoutEstadoventaInput = {
    create?: XOR<ventaCreateWithoutEstadoventaInput, ventaUncheckedCreateWithoutEstadoventaInput> | ventaCreateWithoutEstadoventaInput[] | ventaUncheckedCreateWithoutEstadoventaInput[]
    connectOrCreate?: ventaCreateOrConnectWithoutEstadoventaInput | ventaCreateOrConnectWithoutEstadoventaInput[]
    createMany?: ventaCreateManyEstadoventaInputEnvelope
    connect?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
  }

  export type ventaUncheckedCreateNestedManyWithoutEstadoventaInput = {
    create?: XOR<ventaCreateWithoutEstadoventaInput, ventaUncheckedCreateWithoutEstadoventaInput> | ventaCreateWithoutEstadoventaInput[] | ventaUncheckedCreateWithoutEstadoventaInput[]
    connectOrCreate?: ventaCreateOrConnectWithoutEstadoventaInput | ventaCreateOrConnectWithoutEstadoventaInput[]
    createMany?: ventaCreateManyEstadoventaInputEnvelope
    connect?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
  }

  export type ventaUpdateManyWithoutEstadoventaNestedInput = {
    create?: XOR<ventaCreateWithoutEstadoventaInput, ventaUncheckedCreateWithoutEstadoventaInput> | ventaCreateWithoutEstadoventaInput[] | ventaUncheckedCreateWithoutEstadoventaInput[]
    connectOrCreate?: ventaCreateOrConnectWithoutEstadoventaInput | ventaCreateOrConnectWithoutEstadoventaInput[]
    upsert?: ventaUpsertWithWhereUniqueWithoutEstadoventaInput | ventaUpsertWithWhereUniqueWithoutEstadoventaInput[]
    createMany?: ventaCreateManyEstadoventaInputEnvelope
    set?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    disconnect?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    delete?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    connect?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    update?: ventaUpdateWithWhereUniqueWithoutEstadoventaInput | ventaUpdateWithWhereUniqueWithoutEstadoventaInput[]
    updateMany?: ventaUpdateManyWithWhereWithoutEstadoventaInput | ventaUpdateManyWithWhereWithoutEstadoventaInput[]
    deleteMany?: ventaScalarWhereInput | ventaScalarWhereInput[]
  }

  export type ventaUncheckedUpdateManyWithoutEstadoventaNestedInput = {
    create?: XOR<ventaCreateWithoutEstadoventaInput, ventaUncheckedCreateWithoutEstadoventaInput> | ventaCreateWithoutEstadoventaInput[] | ventaUncheckedCreateWithoutEstadoventaInput[]
    connectOrCreate?: ventaCreateOrConnectWithoutEstadoventaInput | ventaCreateOrConnectWithoutEstadoventaInput[]
    upsert?: ventaUpsertWithWhereUniqueWithoutEstadoventaInput | ventaUpsertWithWhereUniqueWithoutEstadoventaInput[]
    createMany?: ventaCreateManyEstadoventaInputEnvelope
    set?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    disconnect?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    delete?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    connect?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    update?: ventaUpdateWithWhereUniqueWithoutEstadoventaInput | ventaUpdateWithWhereUniqueWithoutEstadoventaInput[]
    updateMany?: ventaUpdateManyWithWhereWithoutEstadoventaInput | ventaUpdateManyWithWhereWithoutEstadoventaInput[]
    deleteMany?: ventaScalarWhereInput | ventaScalarWhereInput[]
  }

  export type ordenproduccionCreateNestedOneWithoutInsumoproduccionInput = {
    create?: XOR<ordenproduccionCreateWithoutInsumoproduccionInput, ordenproduccionUncheckedCreateWithoutInsumoproduccionInput>
    connectOrCreate?: ordenproduccionCreateOrConnectWithoutInsumoproduccionInput
    connect?: ordenproduccionWhereUniqueInput
  }

  export type productoCreateNestedOneWithoutInsumoproduccionInput = {
    create?: XOR<productoCreateWithoutInsumoproduccionInput, productoUncheckedCreateWithoutInsumoproduccionInput>
    connectOrCreate?: productoCreateOrConnectWithoutInsumoproduccionInput
    connect?: productoWhereUniqueInput
  }

  export type ordenproduccionUpdateOneWithoutInsumoproduccionNestedInput = {
    create?: XOR<ordenproduccionCreateWithoutInsumoproduccionInput, ordenproduccionUncheckedCreateWithoutInsumoproduccionInput>
    connectOrCreate?: ordenproduccionCreateOrConnectWithoutInsumoproduccionInput
    upsert?: ordenproduccionUpsertWithoutInsumoproduccionInput
    disconnect?: ordenproduccionWhereInput | boolean
    delete?: ordenproduccionWhereInput | boolean
    connect?: ordenproduccionWhereUniqueInput
    update?: XOR<XOR<ordenproduccionUpdateToOneWithWhereWithoutInsumoproduccionInput, ordenproduccionUpdateWithoutInsumoproduccionInput>, ordenproduccionUncheckedUpdateWithoutInsumoproduccionInput>
  }

  export type productoUpdateOneWithoutInsumoproduccionNestedInput = {
    create?: XOR<productoCreateWithoutInsumoproduccionInput, productoUncheckedCreateWithoutInsumoproduccionInput>
    connectOrCreate?: productoCreateOrConnectWithoutInsumoproduccionInput
    upsert?: productoUpsertWithoutInsumoproduccionInput
    disconnect?: productoWhereInput | boolean
    delete?: productoWhereInput | boolean
    connect?: productoWhereUniqueInput
    update?: XOR<XOR<productoUpdateToOneWithWhereWithoutInsumoproduccionInput, productoUpdateWithoutInsumoproduccionInput>, productoUncheckedUpdateWithoutInsumoproduccionInput>
  }

  export type productoCreateNestedOneWithoutListaprecioInput = {
    create?: XOR<productoCreateWithoutListaprecioInput, productoUncheckedCreateWithoutListaprecioInput>
    connectOrCreate?: productoCreateOrConnectWithoutListaprecioInput
    connect?: productoWhereUniqueInput
  }

  export type sucursalCreateNestedOneWithoutListaprecioInput = {
    create?: XOR<sucursalCreateWithoutListaprecioInput, sucursalUncheckedCreateWithoutListaprecioInput>
    connectOrCreate?: sucursalCreateOrConnectWithoutListaprecioInput
    connect?: sucursalWhereUniqueInput
  }

  export type tipolistaprecioCreateNestedOneWithoutListaprecioInput = {
    create?: XOR<tipolistaprecioCreateWithoutListaprecioInput, tipolistaprecioUncheckedCreateWithoutListaprecioInput>
    connectOrCreate?: tipolistaprecioCreateOrConnectWithoutListaprecioInput
    connect?: tipolistaprecioWhereUniqueInput
  }

  export type productoUpdateOneWithoutListaprecioNestedInput = {
    create?: XOR<productoCreateWithoutListaprecioInput, productoUncheckedCreateWithoutListaprecioInput>
    connectOrCreate?: productoCreateOrConnectWithoutListaprecioInput
    upsert?: productoUpsertWithoutListaprecioInput
    disconnect?: productoWhereInput | boolean
    delete?: productoWhereInput | boolean
    connect?: productoWhereUniqueInput
    update?: XOR<XOR<productoUpdateToOneWithWhereWithoutListaprecioInput, productoUpdateWithoutListaprecioInput>, productoUncheckedUpdateWithoutListaprecioInput>
  }

  export type sucursalUpdateOneWithoutListaprecioNestedInput = {
    create?: XOR<sucursalCreateWithoutListaprecioInput, sucursalUncheckedCreateWithoutListaprecioInput>
    connectOrCreate?: sucursalCreateOrConnectWithoutListaprecioInput
    upsert?: sucursalUpsertWithoutListaprecioInput
    disconnect?: sucursalWhereInput | boolean
    delete?: sucursalWhereInput | boolean
    connect?: sucursalWhereUniqueInput
    update?: XOR<XOR<sucursalUpdateToOneWithWhereWithoutListaprecioInput, sucursalUpdateWithoutListaprecioInput>, sucursalUncheckedUpdateWithoutListaprecioInput>
  }

  export type tipolistaprecioUpdateOneWithoutListaprecioNestedInput = {
    create?: XOR<tipolistaprecioCreateWithoutListaprecioInput, tipolistaprecioUncheckedCreateWithoutListaprecioInput>
    connectOrCreate?: tipolistaprecioCreateOrConnectWithoutListaprecioInput
    upsert?: tipolistaprecioUpsertWithoutListaprecioInput
    disconnect?: tipolistaprecioWhereInput | boolean
    delete?: tipolistaprecioWhereInput | boolean
    connect?: tipolistaprecioWhereUniqueInput
    update?: XOR<XOR<tipolistaprecioUpdateToOneWithWhereWithoutListaprecioInput, tipolistaprecioUpdateWithoutListaprecioInput>, tipolistaprecioUncheckedUpdateWithoutListaprecioInput>
  }

  export type detallecompraCreateNestedManyWithoutLoteInput = {
    create?: XOR<detallecompraCreateWithoutLoteInput, detallecompraUncheckedCreateWithoutLoteInput> | detallecompraCreateWithoutLoteInput[] | detallecompraUncheckedCreateWithoutLoteInput[]
    connectOrCreate?: detallecompraCreateOrConnectWithoutLoteInput | detallecompraCreateOrConnectWithoutLoteInput[]
    createMany?: detallecompraCreateManyLoteInputEnvelope
    connect?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
  }

  export type codigobarraCreateNestedOneWithoutLoteInput = {
    create?: XOR<codigobarraCreateWithoutLoteInput, codigobarraUncheckedCreateWithoutLoteInput>
    connectOrCreate?: codigobarraCreateOrConnectWithoutLoteInput
    connect?: codigobarraWhereUniqueInput
  }

  export type productoterminadoCreateNestedManyWithoutLoteInput = {
    create?: XOR<productoterminadoCreateWithoutLoteInput, productoterminadoUncheckedCreateWithoutLoteInput> | productoterminadoCreateWithoutLoteInput[] | productoterminadoUncheckedCreateWithoutLoteInput[]
    connectOrCreate?: productoterminadoCreateOrConnectWithoutLoteInput | productoterminadoCreateOrConnectWithoutLoteInput[]
    createMany?: productoterminadoCreateManyLoteInputEnvelope
    connect?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
  }

  export type detallecompraUncheckedCreateNestedManyWithoutLoteInput = {
    create?: XOR<detallecompraCreateWithoutLoteInput, detallecompraUncheckedCreateWithoutLoteInput> | detallecompraCreateWithoutLoteInput[] | detallecompraUncheckedCreateWithoutLoteInput[]
    connectOrCreate?: detallecompraCreateOrConnectWithoutLoteInput | detallecompraCreateOrConnectWithoutLoteInput[]
    createMany?: detallecompraCreateManyLoteInputEnvelope
    connect?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
  }

  export type productoterminadoUncheckedCreateNestedManyWithoutLoteInput = {
    create?: XOR<productoterminadoCreateWithoutLoteInput, productoterminadoUncheckedCreateWithoutLoteInput> | productoterminadoCreateWithoutLoteInput[] | productoterminadoUncheckedCreateWithoutLoteInput[]
    connectOrCreate?: productoterminadoCreateOrConnectWithoutLoteInput | productoterminadoCreateOrConnectWithoutLoteInput[]
    createMany?: productoterminadoCreateManyLoteInputEnvelope
    connect?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type detallecompraUpdateManyWithoutLoteNestedInput = {
    create?: XOR<detallecompraCreateWithoutLoteInput, detallecompraUncheckedCreateWithoutLoteInput> | detallecompraCreateWithoutLoteInput[] | detallecompraUncheckedCreateWithoutLoteInput[]
    connectOrCreate?: detallecompraCreateOrConnectWithoutLoteInput | detallecompraCreateOrConnectWithoutLoteInput[]
    upsert?: detallecompraUpsertWithWhereUniqueWithoutLoteInput | detallecompraUpsertWithWhereUniqueWithoutLoteInput[]
    createMany?: detallecompraCreateManyLoteInputEnvelope
    set?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    disconnect?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    delete?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    connect?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    update?: detallecompraUpdateWithWhereUniqueWithoutLoteInput | detallecompraUpdateWithWhereUniqueWithoutLoteInput[]
    updateMany?: detallecompraUpdateManyWithWhereWithoutLoteInput | detallecompraUpdateManyWithWhereWithoutLoteInput[]
    deleteMany?: detallecompraScalarWhereInput | detallecompraScalarWhereInput[]
  }

  export type codigobarraUpdateOneWithoutLoteNestedInput = {
    create?: XOR<codigobarraCreateWithoutLoteInput, codigobarraUncheckedCreateWithoutLoteInput>
    connectOrCreate?: codigobarraCreateOrConnectWithoutLoteInput
    upsert?: codigobarraUpsertWithoutLoteInput
    disconnect?: codigobarraWhereInput | boolean
    delete?: codigobarraWhereInput | boolean
    connect?: codigobarraWhereUniqueInput
    update?: XOR<XOR<codigobarraUpdateToOneWithWhereWithoutLoteInput, codigobarraUpdateWithoutLoteInput>, codigobarraUncheckedUpdateWithoutLoteInput>
  }

  export type productoterminadoUpdateManyWithoutLoteNestedInput = {
    create?: XOR<productoterminadoCreateWithoutLoteInput, productoterminadoUncheckedCreateWithoutLoteInput> | productoterminadoCreateWithoutLoteInput[] | productoterminadoUncheckedCreateWithoutLoteInput[]
    connectOrCreate?: productoterminadoCreateOrConnectWithoutLoteInput | productoterminadoCreateOrConnectWithoutLoteInput[]
    upsert?: productoterminadoUpsertWithWhereUniqueWithoutLoteInput | productoterminadoUpsertWithWhereUniqueWithoutLoteInput[]
    createMany?: productoterminadoCreateManyLoteInputEnvelope
    set?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    disconnect?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    delete?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    connect?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    update?: productoterminadoUpdateWithWhereUniqueWithoutLoteInput | productoterminadoUpdateWithWhereUniqueWithoutLoteInput[]
    updateMany?: productoterminadoUpdateManyWithWhereWithoutLoteInput | productoterminadoUpdateManyWithWhereWithoutLoteInput[]
    deleteMany?: productoterminadoScalarWhereInput | productoterminadoScalarWhereInput[]
  }

  export type detallecompraUncheckedUpdateManyWithoutLoteNestedInput = {
    create?: XOR<detallecompraCreateWithoutLoteInput, detallecompraUncheckedCreateWithoutLoteInput> | detallecompraCreateWithoutLoteInput[] | detallecompraUncheckedCreateWithoutLoteInput[]
    connectOrCreate?: detallecompraCreateOrConnectWithoutLoteInput | detallecompraCreateOrConnectWithoutLoteInput[]
    upsert?: detallecompraUpsertWithWhereUniqueWithoutLoteInput | detallecompraUpsertWithWhereUniqueWithoutLoteInput[]
    createMany?: detallecompraCreateManyLoteInputEnvelope
    set?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    disconnect?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    delete?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    connect?: detallecompraWhereUniqueInput | detallecompraWhereUniqueInput[]
    update?: detallecompraUpdateWithWhereUniqueWithoutLoteInput | detallecompraUpdateWithWhereUniqueWithoutLoteInput[]
    updateMany?: detallecompraUpdateManyWithWhereWithoutLoteInput | detallecompraUpdateManyWithWhereWithoutLoteInput[]
    deleteMany?: detallecompraScalarWhereInput | detallecompraScalarWhereInput[]
  }

  export type productoterminadoUncheckedUpdateManyWithoutLoteNestedInput = {
    create?: XOR<productoterminadoCreateWithoutLoteInput, productoterminadoUncheckedCreateWithoutLoteInput> | productoterminadoCreateWithoutLoteInput[] | productoterminadoUncheckedCreateWithoutLoteInput[]
    connectOrCreate?: productoterminadoCreateOrConnectWithoutLoteInput | productoterminadoCreateOrConnectWithoutLoteInput[]
    upsert?: productoterminadoUpsertWithWhereUniqueWithoutLoteInput | productoterminadoUpsertWithWhereUniqueWithoutLoteInput[]
    createMany?: productoterminadoCreateManyLoteInputEnvelope
    set?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    disconnect?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    delete?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    connect?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    update?: productoterminadoUpdateWithWhereUniqueWithoutLoteInput | productoterminadoUpdateWithWhereUniqueWithoutLoteInput[]
    updateMany?: productoterminadoUpdateManyWithWhereWithoutLoteInput | productoterminadoUpdateManyWithWhereWithoutLoteInput[]
    deleteMany?: productoterminadoScalarWhereInput | productoterminadoScalarWhereInput[]
  }

  export type detalleordencompraCreateNestedManyWithoutOrdencompraInput = {
    create?: XOR<detalleordencompraCreateWithoutOrdencompraInput, detalleordencompraUncheckedCreateWithoutOrdencompraInput> | detalleordencompraCreateWithoutOrdencompraInput[] | detalleordencompraUncheckedCreateWithoutOrdencompraInput[]
    connectOrCreate?: detalleordencompraCreateOrConnectWithoutOrdencompraInput | detalleordencompraCreateOrConnectWithoutOrdencompraInput[]
    createMany?: detalleordencompraCreateManyOrdencompraInputEnvelope
    connect?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
  }

  export type estadoordencompraCreateNestedOneWithoutOrdencompraInput = {
    create?: XOR<estadoordencompraCreateWithoutOrdencompraInput, estadoordencompraUncheckedCreateWithoutOrdencompraInput>
    connectOrCreate?: estadoordencompraCreateOrConnectWithoutOrdencompraInput
    connect?: estadoordencompraWhereUniqueInput
  }

  export type proveedorCreateNestedOneWithoutOrdencompraInput = {
    create?: XOR<proveedorCreateWithoutOrdencompraInput, proveedorUncheckedCreateWithoutOrdencompraInput>
    connectOrCreate?: proveedorCreateOrConnectWithoutOrdencompraInput
    connect?: proveedorWhereUniqueInput
  }

  export type ordencompracompraCreateNestedManyWithoutOrdencompraInput = {
    create?: XOR<ordencompracompraCreateWithoutOrdencompraInput, ordencompracompraUncheckedCreateWithoutOrdencompraInput> | ordencompracompraCreateWithoutOrdencompraInput[] | ordencompracompraUncheckedCreateWithoutOrdencompraInput[]
    connectOrCreate?: ordencompracompraCreateOrConnectWithoutOrdencompraInput | ordencompracompraCreateOrConnectWithoutOrdencompraInput[]
    createMany?: ordencompracompraCreateManyOrdencompraInputEnvelope
    connect?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
  }

  export type detalleordencompraUncheckedCreateNestedManyWithoutOrdencompraInput = {
    create?: XOR<detalleordencompraCreateWithoutOrdencompraInput, detalleordencompraUncheckedCreateWithoutOrdencompraInput> | detalleordencompraCreateWithoutOrdencompraInput[] | detalleordencompraUncheckedCreateWithoutOrdencompraInput[]
    connectOrCreate?: detalleordencompraCreateOrConnectWithoutOrdencompraInput | detalleordencompraCreateOrConnectWithoutOrdencompraInput[]
    createMany?: detalleordencompraCreateManyOrdencompraInputEnvelope
    connect?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
  }

  export type ordencompracompraUncheckedCreateNestedManyWithoutOrdencompraInput = {
    create?: XOR<ordencompracompraCreateWithoutOrdencompraInput, ordencompracompraUncheckedCreateWithoutOrdencompraInput> | ordencompracompraCreateWithoutOrdencompraInput[] | ordencompracompraUncheckedCreateWithoutOrdencompraInput[]
    connectOrCreate?: ordencompracompraCreateOrConnectWithoutOrdencompraInput | ordencompracompraCreateOrConnectWithoutOrdencompraInput[]
    createMany?: ordencompracompraCreateManyOrdencompraInputEnvelope
    connect?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
  }

  export type detalleordencompraUpdateManyWithoutOrdencompraNestedInput = {
    create?: XOR<detalleordencompraCreateWithoutOrdencompraInput, detalleordencompraUncheckedCreateWithoutOrdencompraInput> | detalleordencompraCreateWithoutOrdencompraInput[] | detalleordencompraUncheckedCreateWithoutOrdencompraInput[]
    connectOrCreate?: detalleordencompraCreateOrConnectWithoutOrdencompraInput | detalleordencompraCreateOrConnectWithoutOrdencompraInput[]
    upsert?: detalleordencompraUpsertWithWhereUniqueWithoutOrdencompraInput | detalleordencompraUpsertWithWhereUniqueWithoutOrdencompraInput[]
    createMany?: detalleordencompraCreateManyOrdencompraInputEnvelope
    set?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    disconnect?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    delete?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    connect?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    update?: detalleordencompraUpdateWithWhereUniqueWithoutOrdencompraInput | detalleordencompraUpdateWithWhereUniqueWithoutOrdencompraInput[]
    updateMany?: detalleordencompraUpdateManyWithWhereWithoutOrdencompraInput | detalleordencompraUpdateManyWithWhereWithoutOrdencompraInput[]
    deleteMany?: detalleordencompraScalarWhereInput | detalleordencompraScalarWhereInput[]
  }

  export type estadoordencompraUpdateOneWithoutOrdencompraNestedInput = {
    create?: XOR<estadoordencompraCreateWithoutOrdencompraInput, estadoordencompraUncheckedCreateWithoutOrdencompraInput>
    connectOrCreate?: estadoordencompraCreateOrConnectWithoutOrdencompraInput
    upsert?: estadoordencompraUpsertWithoutOrdencompraInput
    disconnect?: estadoordencompraWhereInput | boolean
    delete?: estadoordencompraWhereInput | boolean
    connect?: estadoordencompraWhereUniqueInput
    update?: XOR<XOR<estadoordencompraUpdateToOneWithWhereWithoutOrdencompraInput, estadoordencompraUpdateWithoutOrdencompraInput>, estadoordencompraUncheckedUpdateWithoutOrdencompraInput>
  }

  export type proveedorUpdateOneWithoutOrdencompraNestedInput = {
    create?: XOR<proveedorCreateWithoutOrdencompraInput, proveedorUncheckedCreateWithoutOrdencompraInput>
    connectOrCreate?: proveedorCreateOrConnectWithoutOrdencompraInput
    upsert?: proveedorUpsertWithoutOrdencompraInput
    disconnect?: proveedorWhereInput | boolean
    delete?: proveedorWhereInput | boolean
    connect?: proveedorWhereUniqueInput
    update?: XOR<XOR<proveedorUpdateToOneWithWhereWithoutOrdencompraInput, proveedorUpdateWithoutOrdencompraInput>, proveedorUncheckedUpdateWithoutOrdencompraInput>
  }

  export type ordencompracompraUpdateManyWithoutOrdencompraNestedInput = {
    create?: XOR<ordencompracompraCreateWithoutOrdencompraInput, ordencompracompraUncheckedCreateWithoutOrdencompraInput> | ordencompracompraCreateWithoutOrdencompraInput[] | ordencompracompraUncheckedCreateWithoutOrdencompraInput[]
    connectOrCreate?: ordencompracompraCreateOrConnectWithoutOrdencompraInput | ordencompracompraCreateOrConnectWithoutOrdencompraInput[]
    upsert?: ordencompracompraUpsertWithWhereUniqueWithoutOrdencompraInput | ordencompracompraUpsertWithWhereUniqueWithoutOrdencompraInput[]
    createMany?: ordencompracompraCreateManyOrdencompraInputEnvelope
    set?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    disconnect?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    delete?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    connect?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    update?: ordencompracompraUpdateWithWhereUniqueWithoutOrdencompraInput | ordencompracompraUpdateWithWhereUniqueWithoutOrdencompraInput[]
    updateMany?: ordencompracompraUpdateManyWithWhereWithoutOrdencompraInput | ordencompracompraUpdateManyWithWhereWithoutOrdencompraInput[]
    deleteMany?: ordencompracompraScalarWhereInput | ordencompracompraScalarWhereInput[]
  }

  export type detalleordencompraUncheckedUpdateManyWithoutOrdencompraNestedInput = {
    create?: XOR<detalleordencompraCreateWithoutOrdencompraInput, detalleordencompraUncheckedCreateWithoutOrdencompraInput> | detalleordencompraCreateWithoutOrdencompraInput[] | detalleordencompraUncheckedCreateWithoutOrdencompraInput[]
    connectOrCreate?: detalleordencompraCreateOrConnectWithoutOrdencompraInput | detalleordencompraCreateOrConnectWithoutOrdencompraInput[]
    upsert?: detalleordencompraUpsertWithWhereUniqueWithoutOrdencompraInput | detalleordencompraUpsertWithWhereUniqueWithoutOrdencompraInput[]
    createMany?: detalleordencompraCreateManyOrdencompraInputEnvelope
    set?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    disconnect?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    delete?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    connect?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    update?: detalleordencompraUpdateWithWhereUniqueWithoutOrdencompraInput | detalleordencompraUpdateWithWhereUniqueWithoutOrdencompraInput[]
    updateMany?: detalleordencompraUpdateManyWithWhereWithoutOrdencompraInput | detalleordencompraUpdateManyWithWhereWithoutOrdencompraInput[]
    deleteMany?: detalleordencompraScalarWhereInput | detalleordencompraScalarWhereInput[]
  }

  export type ordencompracompraUncheckedUpdateManyWithoutOrdencompraNestedInput = {
    create?: XOR<ordencompracompraCreateWithoutOrdencompraInput, ordencompracompraUncheckedCreateWithoutOrdencompraInput> | ordencompracompraCreateWithoutOrdencompraInput[] | ordencompracompraUncheckedCreateWithoutOrdencompraInput[]
    connectOrCreate?: ordencompracompraCreateOrConnectWithoutOrdencompraInput | ordencompracompraCreateOrConnectWithoutOrdencompraInput[]
    upsert?: ordencompracompraUpsertWithWhereUniqueWithoutOrdencompraInput | ordencompracompraUpsertWithWhereUniqueWithoutOrdencompraInput[]
    createMany?: ordencompracompraCreateManyOrdencompraInputEnvelope
    set?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    disconnect?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    delete?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    connect?: ordencompracompraWhereUniqueInput | ordencompracompraWhereUniqueInput[]
    update?: ordencompracompraUpdateWithWhereUniqueWithoutOrdencompraInput | ordencompracompraUpdateWithWhereUniqueWithoutOrdencompraInput[]
    updateMany?: ordencompracompraUpdateManyWithWhereWithoutOrdencompraInput | ordencompracompraUpdateManyWithWhereWithoutOrdencompraInput[]
    deleteMany?: ordencompracompraScalarWhereInput | ordencompracompraScalarWhereInput[]
  }

  export type compraCreateNestedOneWithoutOrdencompracompraInput = {
    create?: XOR<compraCreateWithoutOrdencompracompraInput, compraUncheckedCreateWithoutOrdencompracompraInput>
    connectOrCreate?: compraCreateOrConnectWithoutOrdencompracompraInput
    connect?: compraWhereUniqueInput
  }

  export type ordencompraCreateNestedOneWithoutOrdencompracompraInput = {
    create?: XOR<ordencompraCreateWithoutOrdencompracompraInput, ordencompraUncheckedCreateWithoutOrdencompracompraInput>
    connectOrCreate?: ordencompraCreateOrConnectWithoutOrdencompracompraInput
    connect?: ordencompraWhereUniqueInput
  }

  export type compraUpdateOneWithoutOrdencompracompraNestedInput = {
    create?: XOR<compraCreateWithoutOrdencompracompraInput, compraUncheckedCreateWithoutOrdencompracompraInput>
    connectOrCreate?: compraCreateOrConnectWithoutOrdencompracompraInput
    upsert?: compraUpsertWithoutOrdencompracompraInput
    disconnect?: compraWhereInput | boolean
    delete?: compraWhereInput | boolean
    connect?: compraWhereUniqueInput
    update?: XOR<XOR<compraUpdateToOneWithWhereWithoutOrdencompracompraInput, compraUpdateWithoutOrdencompracompraInput>, compraUncheckedUpdateWithoutOrdencompracompraInput>
  }

  export type ordencompraUpdateOneWithoutOrdencompracompraNestedInput = {
    create?: XOR<ordencompraCreateWithoutOrdencompracompraInput, ordencompraUncheckedCreateWithoutOrdencompracompraInput>
    connectOrCreate?: ordencompraCreateOrConnectWithoutOrdencompracompraInput
    upsert?: ordencompraUpsertWithoutOrdencompracompraInput
    disconnect?: ordencompraWhereInput | boolean
    delete?: ordencompraWhereInput | boolean
    connect?: ordencompraWhereUniqueInput
    update?: XOR<XOR<ordencompraUpdateToOneWithWhereWithoutOrdencompracompraInput, ordencompraUpdateWithoutOrdencompracompraInput>, ordencompraUncheckedUpdateWithoutOrdencompracompraInput>
  }

  export type insumoproduccionCreateNestedManyWithoutOrdenproduccionInput = {
    create?: XOR<insumoproduccionCreateWithoutOrdenproduccionInput, insumoproduccionUncheckedCreateWithoutOrdenproduccionInput> | insumoproduccionCreateWithoutOrdenproduccionInput[] | insumoproduccionUncheckedCreateWithoutOrdenproduccionInput[]
    connectOrCreate?: insumoproduccionCreateOrConnectWithoutOrdenproduccionInput | insumoproduccionCreateOrConnectWithoutOrdenproduccionInput[]
    createMany?: insumoproduccionCreateManyOrdenproduccionInputEnvelope
    connect?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
  }

  export type estadoproduccionCreateNestedOneWithoutOrdenproduccionInput = {
    create?: XOR<estadoproduccionCreateWithoutOrdenproduccionInput, estadoproduccionUncheckedCreateWithoutOrdenproduccionInput>
    connectOrCreate?: estadoproduccionCreateOrConnectWithoutOrdenproduccionInput
    connect?: estadoproduccionWhereUniqueInput
  }

  export type productoCreateNestedOneWithoutOrdenproduccionInput = {
    create?: XOR<productoCreateWithoutOrdenproduccionInput, productoUncheckedCreateWithoutOrdenproduccionInput>
    connectOrCreate?: productoCreateOrConnectWithoutOrdenproduccionInput
    connect?: productoWhereUniqueInput
  }

  export type productoterminadoCreateNestedManyWithoutOrdenproduccionInput = {
    create?: XOR<productoterminadoCreateWithoutOrdenproduccionInput, productoterminadoUncheckedCreateWithoutOrdenproduccionInput> | productoterminadoCreateWithoutOrdenproduccionInput[] | productoterminadoUncheckedCreateWithoutOrdenproduccionInput[]
    connectOrCreate?: productoterminadoCreateOrConnectWithoutOrdenproduccionInput | productoterminadoCreateOrConnectWithoutOrdenproduccionInput[]
    createMany?: productoterminadoCreateManyOrdenproduccionInputEnvelope
    connect?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
  }

  export type insumoproduccionUncheckedCreateNestedManyWithoutOrdenproduccionInput = {
    create?: XOR<insumoproduccionCreateWithoutOrdenproduccionInput, insumoproduccionUncheckedCreateWithoutOrdenproduccionInput> | insumoproduccionCreateWithoutOrdenproduccionInput[] | insumoproduccionUncheckedCreateWithoutOrdenproduccionInput[]
    connectOrCreate?: insumoproduccionCreateOrConnectWithoutOrdenproduccionInput | insumoproduccionCreateOrConnectWithoutOrdenproduccionInput[]
    createMany?: insumoproduccionCreateManyOrdenproduccionInputEnvelope
    connect?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
  }

  export type productoterminadoUncheckedCreateNestedManyWithoutOrdenproduccionInput = {
    create?: XOR<productoterminadoCreateWithoutOrdenproduccionInput, productoterminadoUncheckedCreateWithoutOrdenproduccionInput> | productoterminadoCreateWithoutOrdenproduccionInput[] | productoterminadoUncheckedCreateWithoutOrdenproduccionInput[]
    connectOrCreate?: productoterminadoCreateOrConnectWithoutOrdenproduccionInput | productoterminadoCreateOrConnectWithoutOrdenproduccionInput[]
    createMany?: productoterminadoCreateManyOrdenproduccionInputEnvelope
    connect?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
  }

  export type insumoproduccionUpdateManyWithoutOrdenproduccionNestedInput = {
    create?: XOR<insumoproduccionCreateWithoutOrdenproduccionInput, insumoproduccionUncheckedCreateWithoutOrdenproduccionInput> | insumoproduccionCreateWithoutOrdenproduccionInput[] | insumoproduccionUncheckedCreateWithoutOrdenproduccionInput[]
    connectOrCreate?: insumoproduccionCreateOrConnectWithoutOrdenproduccionInput | insumoproduccionCreateOrConnectWithoutOrdenproduccionInput[]
    upsert?: insumoproduccionUpsertWithWhereUniqueWithoutOrdenproduccionInput | insumoproduccionUpsertWithWhereUniqueWithoutOrdenproduccionInput[]
    createMany?: insumoproduccionCreateManyOrdenproduccionInputEnvelope
    set?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    disconnect?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    delete?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    connect?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    update?: insumoproduccionUpdateWithWhereUniqueWithoutOrdenproduccionInput | insumoproduccionUpdateWithWhereUniqueWithoutOrdenproduccionInput[]
    updateMany?: insumoproduccionUpdateManyWithWhereWithoutOrdenproduccionInput | insumoproduccionUpdateManyWithWhereWithoutOrdenproduccionInput[]
    deleteMany?: insumoproduccionScalarWhereInput | insumoproduccionScalarWhereInput[]
  }

  export type estadoproduccionUpdateOneWithoutOrdenproduccionNestedInput = {
    create?: XOR<estadoproduccionCreateWithoutOrdenproduccionInput, estadoproduccionUncheckedCreateWithoutOrdenproduccionInput>
    connectOrCreate?: estadoproduccionCreateOrConnectWithoutOrdenproduccionInput
    upsert?: estadoproduccionUpsertWithoutOrdenproduccionInput
    disconnect?: estadoproduccionWhereInput | boolean
    delete?: estadoproduccionWhereInput | boolean
    connect?: estadoproduccionWhereUniqueInput
    update?: XOR<XOR<estadoproduccionUpdateToOneWithWhereWithoutOrdenproduccionInput, estadoproduccionUpdateWithoutOrdenproduccionInput>, estadoproduccionUncheckedUpdateWithoutOrdenproduccionInput>
  }

  export type productoUpdateOneWithoutOrdenproduccionNestedInput = {
    create?: XOR<productoCreateWithoutOrdenproduccionInput, productoUncheckedCreateWithoutOrdenproduccionInput>
    connectOrCreate?: productoCreateOrConnectWithoutOrdenproduccionInput
    upsert?: productoUpsertWithoutOrdenproduccionInput
    disconnect?: productoWhereInput | boolean
    delete?: productoWhereInput | boolean
    connect?: productoWhereUniqueInput
    update?: XOR<XOR<productoUpdateToOneWithWhereWithoutOrdenproduccionInput, productoUpdateWithoutOrdenproduccionInput>, productoUncheckedUpdateWithoutOrdenproduccionInput>
  }

  export type productoterminadoUpdateManyWithoutOrdenproduccionNestedInput = {
    create?: XOR<productoterminadoCreateWithoutOrdenproduccionInput, productoterminadoUncheckedCreateWithoutOrdenproduccionInput> | productoterminadoCreateWithoutOrdenproduccionInput[] | productoterminadoUncheckedCreateWithoutOrdenproduccionInput[]
    connectOrCreate?: productoterminadoCreateOrConnectWithoutOrdenproduccionInput | productoterminadoCreateOrConnectWithoutOrdenproduccionInput[]
    upsert?: productoterminadoUpsertWithWhereUniqueWithoutOrdenproduccionInput | productoterminadoUpsertWithWhereUniqueWithoutOrdenproduccionInput[]
    createMany?: productoterminadoCreateManyOrdenproduccionInputEnvelope
    set?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    disconnect?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    delete?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    connect?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    update?: productoterminadoUpdateWithWhereUniqueWithoutOrdenproduccionInput | productoterminadoUpdateWithWhereUniqueWithoutOrdenproduccionInput[]
    updateMany?: productoterminadoUpdateManyWithWhereWithoutOrdenproduccionInput | productoterminadoUpdateManyWithWhereWithoutOrdenproduccionInput[]
    deleteMany?: productoterminadoScalarWhereInput | productoterminadoScalarWhereInput[]
  }

  export type insumoproduccionUncheckedUpdateManyWithoutOrdenproduccionNestedInput = {
    create?: XOR<insumoproduccionCreateWithoutOrdenproduccionInput, insumoproduccionUncheckedCreateWithoutOrdenproduccionInput> | insumoproduccionCreateWithoutOrdenproduccionInput[] | insumoproduccionUncheckedCreateWithoutOrdenproduccionInput[]
    connectOrCreate?: insumoproduccionCreateOrConnectWithoutOrdenproduccionInput | insumoproduccionCreateOrConnectWithoutOrdenproduccionInput[]
    upsert?: insumoproduccionUpsertWithWhereUniqueWithoutOrdenproduccionInput | insumoproduccionUpsertWithWhereUniqueWithoutOrdenproduccionInput[]
    createMany?: insumoproduccionCreateManyOrdenproduccionInputEnvelope
    set?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    disconnect?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    delete?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    connect?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    update?: insumoproduccionUpdateWithWhereUniqueWithoutOrdenproduccionInput | insumoproduccionUpdateWithWhereUniqueWithoutOrdenproduccionInput[]
    updateMany?: insumoproduccionUpdateManyWithWhereWithoutOrdenproduccionInput | insumoproduccionUpdateManyWithWhereWithoutOrdenproduccionInput[]
    deleteMany?: insumoproduccionScalarWhereInput | insumoproduccionScalarWhereInput[]
  }

  export type productoterminadoUncheckedUpdateManyWithoutOrdenproduccionNestedInput = {
    create?: XOR<productoterminadoCreateWithoutOrdenproduccionInput, productoterminadoUncheckedCreateWithoutOrdenproduccionInput> | productoterminadoCreateWithoutOrdenproduccionInput[] | productoterminadoUncheckedCreateWithoutOrdenproduccionInput[]
    connectOrCreate?: productoterminadoCreateOrConnectWithoutOrdenproduccionInput | productoterminadoCreateOrConnectWithoutOrdenproduccionInput[]
    upsert?: productoterminadoUpsertWithWhereUniqueWithoutOrdenproduccionInput | productoterminadoUpsertWithWhereUniqueWithoutOrdenproduccionInput[]
    createMany?: productoterminadoCreateManyOrdenproduccionInputEnvelope
    set?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    disconnect?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    delete?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    connect?: productoterminadoWhereUniqueInput | productoterminadoWhereUniqueInput[]
    update?: productoterminadoUpdateWithWhereUniqueWithoutOrdenproduccionInput | productoterminadoUpdateWithWhereUniqueWithoutOrdenproduccionInput[]
    updateMany?: productoterminadoUpdateManyWithWhereWithoutOrdenproduccionInput | productoterminadoUpdateManyWithWhereWithoutOrdenproduccionInput[]
    deleteMany?: productoterminadoScalarWhereInput | productoterminadoScalarWhereInput[]
  }

  export type rolCreateNestedOneWithoutPermisoInput = {
    create?: XOR<rolCreateWithoutPermisoInput, rolUncheckedCreateWithoutPermisoInput>
    connectOrCreate?: rolCreateOrConnectWithoutPermisoInput
    connect?: rolWhereUniqueInput
  }

  export type screenCreateNestedOneWithoutPermisoInput = {
    create?: XOR<screenCreateWithoutPermisoInput, screenUncheckedCreateWithoutPermisoInput>
    connectOrCreate?: screenCreateOrConnectWithoutPermisoInput
    connect?: screenWhereUniqueInput
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type rolUpdateOneWithoutPermisoNestedInput = {
    create?: XOR<rolCreateWithoutPermisoInput, rolUncheckedCreateWithoutPermisoInput>
    connectOrCreate?: rolCreateOrConnectWithoutPermisoInput
    upsert?: rolUpsertWithoutPermisoInput
    disconnect?: rolWhereInput | boolean
    delete?: rolWhereInput | boolean
    connect?: rolWhereUniqueInput
    update?: XOR<XOR<rolUpdateToOneWithWhereWithoutPermisoInput, rolUpdateWithoutPermisoInput>, rolUncheckedUpdateWithoutPermisoInput>
  }

  export type screenUpdateOneWithoutPermisoNestedInput = {
    create?: XOR<screenCreateWithoutPermisoInput, screenUncheckedCreateWithoutPermisoInput>
    connectOrCreate?: screenCreateOrConnectWithoutPermisoInput
    upsert?: screenUpsertWithoutPermisoInput
    disconnect?: screenWhereInput | boolean
    delete?: screenWhereInput | boolean
    connect?: screenWhereUniqueInput
    update?: XOR<XOR<screenUpdateToOneWithWhereWithoutPermisoInput, screenUpdateWithoutPermisoInput>, screenUncheckedUpdateWithoutPermisoInput>
  }

  export type codigobarraCreateNestedManyWithoutProductoInput = {
    create?: XOR<codigobarraCreateWithoutProductoInput, codigobarraUncheckedCreateWithoutProductoInput> | codigobarraCreateWithoutProductoInput[] | codigobarraUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: codigobarraCreateOrConnectWithoutProductoInput | codigobarraCreateOrConnectWithoutProductoInput[]
    createMany?: codigobarraCreateManyProductoInputEnvelope
    connect?: codigobarraWhereUniqueInput | codigobarraWhereUniqueInput[]
  }

  export type detalleordencompraCreateNestedManyWithoutProductoInput = {
    create?: XOR<detalleordencompraCreateWithoutProductoInput, detalleordencompraUncheckedCreateWithoutProductoInput> | detalleordencompraCreateWithoutProductoInput[] | detalleordencompraUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: detalleordencompraCreateOrConnectWithoutProductoInput | detalleordencompraCreateOrConnectWithoutProductoInput[]
    createMany?: detalleordencompraCreateManyProductoInputEnvelope
    connect?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
  }

  export type detalleventaCreateNestedManyWithoutProductoInput = {
    create?: XOR<detalleventaCreateWithoutProductoInput, detalleventaUncheckedCreateWithoutProductoInput> | detalleventaCreateWithoutProductoInput[] | detalleventaUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutProductoInput | detalleventaCreateOrConnectWithoutProductoInput[]
    createMany?: detalleventaCreateManyProductoInputEnvelope
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
  }

  export type insumoproduccionCreateNestedManyWithoutProductoInput = {
    create?: XOR<insumoproduccionCreateWithoutProductoInput, insumoproduccionUncheckedCreateWithoutProductoInput> | insumoproduccionCreateWithoutProductoInput[] | insumoproduccionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: insumoproduccionCreateOrConnectWithoutProductoInput | insumoproduccionCreateOrConnectWithoutProductoInput[]
    createMany?: insumoproduccionCreateManyProductoInputEnvelope
    connect?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
  }

  export type listaprecioCreateNestedManyWithoutProductoInput = {
    create?: XOR<listaprecioCreateWithoutProductoInput, listaprecioUncheckedCreateWithoutProductoInput> | listaprecioCreateWithoutProductoInput[] | listaprecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: listaprecioCreateOrConnectWithoutProductoInput | listaprecioCreateOrConnectWithoutProductoInput[]
    createMany?: listaprecioCreateManyProductoInputEnvelope
    connect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
  }

  export type ordenproduccionCreateNestedManyWithoutProductoInput = {
    create?: XOR<ordenproduccionCreateWithoutProductoInput, ordenproduccionUncheckedCreateWithoutProductoInput> | ordenproduccionCreateWithoutProductoInput[] | ordenproduccionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ordenproduccionCreateOrConnectWithoutProductoInput | ordenproduccionCreateOrConnectWithoutProductoInput[]
    createMany?: ordenproduccionCreateManyProductoInputEnvelope
    connect?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
  }

  export type productocomboCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput = {
    create?: XOR<productocomboCreateWithoutProducto_productocombo_combo_idToproductoInput, productocomboUncheckedCreateWithoutProducto_productocombo_combo_idToproductoInput> | productocomboCreateWithoutProducto_productocombo_combo_idToproductoInput[] | productocomboUncheckedCreateWithoutProducto_productocombo_combo_idToproductoInput[]
    connectOrCreate?: productocomboCreateOrConnectWithoutProducto_productocombo_combo_idToproductoInput | productocomboCreateOrConnectWithoutProducto_productocombo_combo_idToproductoInput[]
    createMany?: productocomboCreateManyProducto_productocombo_combo_idToproductoInputEnvelope
    connect?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
  }

  export type productocomboCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput = {
    create?: XOR<productocomboCreateWithoutProducto_productocombo_producto_idToproductoInput, productocomboUncheckedCreateWithoutProducto_productocombo_producto_idToproductoInput> | productocomboCreateWithoutProducto_productocombo_producto_idToproductoInput[] | productocomboUncheckedCreateWithoutProducto_productocombo_producto_idToproductoInput[]
    connectOrCreate?: productocomboCreateOrConnectWithoutProducto_productocombo_producto_idToproductoInput | productocomboCreateOrConnectWithoutProducto_productocombo_producto_idToproductoInput[]
    createMany?: productocomboCreateManyProducto_productocombo_producto_idToproductoInputEnvelope
    connect?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
  }

  export type codigobarraUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<codigobarraCreateWithoutProductoInput, codigobarraUncheckedCreateWithoutProductoInput> | codigobarraCreateWithoutProductoInput[] | codigobarraUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: codigobarraCreateOrConnectWithoutProductoInput | codigobarraCreateOrConnectWithoutProductoInput[]
    createMany?: codigobarraCreateManyProductoInputEnvelope
    connect?: codigobarraWhereUniqueInput | codigobarraWhereUniqueInput[]
  }

  export type detalleordencompraUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<detalleordencompraCreateWithoutProductoInput, detalleordencompraUncheckedCreateWithoutProductoInput> | detalleordencompraCreateWithoutProductoInput[] | detalleordencompraUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: detalleordencompraCreateOrConnectWithoutProductoInput | detalleordencompraCreateOrConnectWithoutProductoInput[]
    createMany?: detalleordencompraCreateManyProductoInputEnvelope
    connect?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
  }

  export type detalleventaUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<detalleventaCreateWithoutProductoInput, detalleventaUncheckedCreateWithoutProductoInput> | detalleventaCreateWithoutProductoInput[] | detalleventaUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutProductoInput | detalleventaCreateOrConnectWithoutProductoInput[]
    createMany?: detalleventaCreateManyProductoInputEnvelope
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
  }

  export type insumoproduccionUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<insumoproduccionCreateWithoutProductoInput, insumoproduccionUncheckedCreateWithoutProductoInput> | insumoproduccionCreateWithoutProductoInput[] | insumoproduccionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: insumoproduccionCreateOrConnectWithoutProductoInput | insumoproduccionCreateOrConnectWithoutProductoInput[]
    createMany?: insumoproduccionCreateManyProductoInputEnvelope
    connect?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
  }

  export type listaprecioUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<listaprecioCreateWithoutProductoInput, listaprecioUncheckedCreateWithoutProductoInput> | listaprecioCreateWithoutProductoInput[] | listaprecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: listaprecioCreateOrConnectWithoutProductoInput | listaprecioCreateOrConnectWithoutProductoInput[]
    createMany?: listaprecioCreateManyProductoInputEnvelope
    connect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
  }

  export type ordenproduccionUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<ordenproduccionCreateWithoutProductoInput, ordenproduccionUncheckedCreateWithoutProductoInput> | ordenproduccionCreateWithoutProductoInput[] | ordenproduccionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ordenproduccionCreateOrConnectWithoutProductoInput | ordenproduccionCreateOrConnectWithoutProductoInput[]
    createMany?: ordenproduccionCreateManyProductoInputEnvelope
    connect?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
  }

  export type productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput = {
    create?: XOR<productocomboCreateWithoutProducto_productocombo_combo_idToproductoInput, productocomboUncheckedCreateWithoutProducto_productocombo_combo_idToproductoInput> | productocomboCreateWithoutProducto_productocombo_combo_idToproductoInput[] | productocomboUncheckedCreateWithoutProducto_productocombo_combo_idToproductoInput[]
    connectOrCreate?: productocomboCreateOrConnectWithoutProducto_productocombo_combo_idToproductoInput | productocomboCreateOrConnectWithoutProducto_productocombo_combo_idToproductoInput[]
    createMany?: productocomboCreateManyProducto_productocombo_combo_idToproductoInputEnvelope
    connect?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
  }

  export type productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput = {
    create?: XOR<productocomboCreateWithoutProducto_productocombo_producto_idToproductoInput, productocomboUncheckedCreateWithoutProducto_productocombo_producto_idToproductoInput> | productocomboCreateWithoutProducto_productocombo_producto_idToproductoInput[] | productocomboUncheckedCreateWithoutProducto_productocombo_producto_idToproductoInput[]
    connectOrCreate?: productocomboCreateOrConnectWithoutProducto_productocombo_producto_idToproductoInput | productocomboCreateOrConnectWithoutProducto_productocombo_producto_idToproductoInput[]
    createMany?: productocomboCreateManyProducto_productocombo_producto_idToproductoInputEnvelope
    connect?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
  }

  export type codigobarraUpdateManyWithoutProductoNestedInput = {
    create?: XOR<codigobarraCreateWithoutProductoInput, codigobarraUncheckedCreateWithoutProductoInput> | codigobarraCreateWithoutProductoInput[] | codigobarraUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: codigobarraCreateOrConnectWithoutProductoInput | codigobarraCreateOrConnectWithoutProductoInput[]
    upsert?: codigobarraUpsertWithWhereUniqueWithoutProductoInput | codigobarraUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: codigobarraCreateManyProductoInputEnvelope
    set?: codigobarraWhereUniqueInput | codigobarraWhereUniqueInput[]
    disconnect?: codigobarraWhereUniqueInput | codigobarraWhereUniqueInput[]
    delete?: codigobarraWhereUniqueInput | codigobarraWhereUniqueInput[]
    connect?: codigobarraWhereUniqueInput | codigobarraWhereUniqueInput[]
    update?: codigobarraUpdateWithWhereUniqueWithoutProductoInput | codigobarraUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: codigobarraUpdateManyWithWhereWithoutProductoInput | codigobarraUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: codigobarraScalarWhereInput | codigobarraScalarWhereInput[]
  }

  export type detalleordencompraUpdateManyWithoutProductoNestedInput = {
    create?: XOR<detalleordencompraCreateWithoutProductoInput, detalleordencompraUncheckedCreateWithoutProductoInput> | detalleordencompraCreateWithoutProductoInput[] | detalleordencompraUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: detalleordencompraCreateOrConnectWithoutProductoInput | detalleordencompraCreateOrConnectWithoutProductoInput[]
    upsert?: detalleordencompraUpsertWithWhereUniqueWithoutProductoInput | detalleordencompraUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: detalleordencompraCreateManyProductoInputEnvelope
    set?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    disconnect?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    delete?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    connect?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    update?: detalleordencompraUpdateWithWhereUniqueWithoutProductoInput | detalleordencompraUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: detalleordencompraUpdateManyWithWhereWithoutProductoInput | detalleordencompraUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: detalleordencompraScalarWhereInput | detalleordencompraScalarWhereInput[]
  }

  export type detalleventaUpdateManyWithoutProductoNestedInput = {
    create?: XOR<detalleventaCreateWithoutProductoInput, detalleventaUncheckedCreateWithoutProductoInput> | detalleventaCreateWithoutProductoInput[] | detalleventaUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutProductoInput | detalleventaCreateOrConnectWithoutProductoInput[]
    upsert?: detalleventaUpsertWithWhereUniqueWithoutProductoInput | detalleventaUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: detalleventaCreateManyProductoInputEnvelope
    set?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    disconnect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    delete?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    update?: detalleventaUpdateWithWhereUniqueWithoutProductoInput | detalleventaUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: detalleventaUpdateManyWithWhereWithoutProductoInput | detalleventaUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: detalleventaScalarWhereInput | detalleventaScalarWhereInput[]
  }

  export type insumoproduccionUpdateManyWithoutProductoNestedInput = {
    create?: XOR<insumoproduccionCreateWithoutProductoInput, insumoproduccionUncheckedCreateWithoutProductoInput> | insumoproduccionCreateWithoutProductoInput[] | insumoproduccionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: insumoproduccionCreateOrConnectWithoutProductoInput | insumoproduccionCreateOrConnectWithoutProductoInput[]
    upsert?: insumoproduccionUpsertWithWhereUniqueWithoutProductoInput | insumoproduccionUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: insumoproduccionCreateManyProductoInputEnvelope
    set?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    disconnect?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    delete?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    connect?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    update?: insumoproduccionUpdateWithWhereUniqueWithoutProductoInput | insumoproduccionUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: insumoproduccionUpdateManyWithWhereWithoutProductoInput | insumoproduccionUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: insumoproduccionScalarWhereInput | insumoproduccionScalarWhereInput[]
  }

  export type listaprecioUpdateManyWithoutProductoNestedInput = {
    create?: XOR<listaprecioCreateWithoutProductoInput, listaprecioUncheckedCreateWithoutProductoInput> | listaprecioCreateWithoutProductoInput[] | listaprecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: listaprecioCreateOrConnectWithoutProductoInput | listaprecioCreateOrConnectWithoutProductoInput[]
    upsert?: listaprecioUpsertWithWhereUniqueWithoutProductoInput | listaprecioUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: listaprecioCreateManyProductoInputEnvelope
    set?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    disconnect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    delete?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    connect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    update?: listaprecioUpdateWithWhereUniqueWithoutProductoInput | listaprecioUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: listaprecioUpdateManyWithWhereWithoutProductoInput | listaprecioUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: listaprecioScalarWhereInput | listaprecioScalarWhereInput[]
  }

  export type ordenproduccionUpdateManyWithoutProductoNestedInput = {
    create?: XOR<ordenproduccionCreateWithoutProductoInput, ordenproduccionUncheckedCreateWithoutProductoInput> | ordenproduccionCreateWithoutProductoInput[] | ordenproduccionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ordenproduccionCreateOrConnectWithoutProductoInput | ordenproduccionCreateOrConnectWithoutProductoInput[]
    upsert?: ordenproduccionUpsertWithWhereUniqueWithoutProductoInput | ordenproduccionUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: ordenproduccionCreateManyProductoInputEnvelope
    set?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    disconnect?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    delete?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    connect?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    update?: ordenproduccionUpdateWithWhereUniqueWithoutProductoInput | ordenproduccionUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: ordenproduccionUpdateManyWithWhereWithoutProductoInput | ordenproduccionUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: ordenproduccionScalarWhereInput | ordenproduccionScalarWhereInput[]
  }

  export type productocomboUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput = {
    create?: XOR<productocomboCreateWithoutProducto_productocombo_combo_idToproductoInput, productocomboUncheckedCreateWithoutProducto_productocombo_combo_idToproductoInput> | productocomboCreateWithoutProducto_productocombo_combo_idToproductoInput[] | productocomboUncheckedCreateWithoutProducto_productocombo_combo_idToproductoInput[]
    connectOrCreate?: productocomboCreateOrConnectWithoutProducto_productocombo_combo_idToproductoInput | productocomboCreateOrConnectWithoutProducto_productocombo_combo_idToproductoInput[]
    upsert?: productocomboUpsertWithWhereUniqueWithoutProducto_productocombo_combo_idToproductoInput | productocomboUpsertWithWhereUniqueWithoutProducto_productocombo_combo_idToproductoInput[]
    createMany?: productocomboCreateManyProducto_productocombo_combo_idToproductoInputEnvelope
    set?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    disconnect?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    delete?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    connect?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    update?: productocomboUpdateWithWhereUniqueWithoutProducto_productocombo_combo_idToproductoInput | productocomboUpdateWithWhereUniqueWithoutProducto_productocombo_combo_idToproductoInput[]
    updateMany?: productocomboUpdateManyWithWhereWithoutProducto_productocombo_combo_idToproductoInput | productocomboUpdateManyWithWhereWithoutProducto_productocombo_combo_idToproductoInput[]
    deleteMany?: productocomboScalarWhereInput | productocomboScalarWhereInput[]
  }

  export type productocomboUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput = {
    create?: XOR<productocomboCreateWithoutProducto_productocombo_producto_idToproductoInput, productocomboUncheckedCreateWithoutProducto_productocombo_producto_idToproductoInput> | productocomboCreateWithoutProducto_productocombo_producto_idToproductoInput[] | productocomboUncheckedCreateWithoutProducto_productocombo_producto_idToproductoInput[]
    connectOrCreate?: productocomboCreateOrConnectWithoutProducto_productocombo_producto_idToproductoInput | productocomboCreateOrConnectWithoutProducto_productocombo_producto_idToproductoInput[]
    upsert?: productocomboUpsertWithWhereUniqueWithoutProducto_productocombo_producto_idToproductoInput | productocomboUpsertWithWhereUniqueWithoutProducto_productocombo_producto_idToproductoInput[]
    createMany?: productocomboCreateManyProducto_productocombo_producto_idToproductoInputEnvelope
    set?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    disconnect?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    delete?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    connect?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    update?: productocomboUpdateWithWhereUniqueWithoutProducto_productocombo_producto_idToproductoInput | productocomboUpdateWithWhereUniqueWithoutProducto_productocombo_producto_idToproductoInput[]
    updateMany?: productocomboUpdateManyWithWhereWithoutProducto_productocombo_producto_idToproductoInput | productocomboUpdateManyWithWhereWithoutProducto_productocombo_producto_idToproductoInput[]
    deleteMany?: productocomboScalarWhereInput | productocomboScalarWhereInput[]
  }

  export type codigobarraUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<codigobarraCreateWithoutProductoInput, codigobarraUncheckedCreateWithoutProductoInput> | codigobarraCreateWithoutProductoInput[] | codigobarraUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: codigobarraCreateOrConnectWithoutProductoInput | codigobarraCreateOrConnectWithoutProductoInput[]
    upsert?: codigobarraUpsertWithWhereUniqueWithoutProductoInput | codigobarraUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: codigobarraCreateManyProductoInputEnvelope
    set?: codigobarraWhereUniqueInput | codigobarraWhereUniqueInput[]
    disconnect?: codigobarraWhereUniqueInput | codigobarraWhereUniqueInput[]
    delete?: codigobarraWhereUniqueInput | codigobarraWhereUniqueInput[]
    connect?: codigobarraWhereUniqueInput | codigobarraWhereUniqueInput[]
    update?: codigobarraUpdateWithWhereUniqueWithoutProductoInput | codigobarraUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: codigobarraUpdateManyWithWhereWithoutProductoInput | codigobarraUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: codigobarraScalarWhereInput | codigobarraScalarWhereInput[]
  }

  export type detalleordencompraUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<detalleordencompraCreateWithoutProductoInput, detalleordencompraUncheckedCreateWithoutProductoInput> | detalleordencompraCreateWithoutProductoInput[] | detalleordencompraUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: detalleordencompraCreateOrConnectWithoutProductoInput | detalleordencompraCreateOrConnectWithoutProductoInput[]
    upsert?: detalleordencompraUpsertWithWhereUniqueWithoutProductoInput | detalleordencompraUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: detalleordencompraCreateManyProductoInputEnvelope
    set?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    disconnect?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    delete?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    connect?: detalleordencompraWhereUniqueInput | detalleordencompraWhereUniqueInput[]
    update?: detalleordencompraUpdateWithWhereUniqueWithoutProductoInput | detalleordencompraUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: detalleordencompraUpdateManyWithWhereWithoutProductoInput | detalleordencompraUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: detalleordencompraScalarWhereInput | detalleordencompraScalarWhereInput[]
  }

  export type detalleventaUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<detalleventaCreateWithoutProductoInput, detalleventaUncheckedCreateWithoutProductoInput> | detalleventaCreateWithoutProductoInput[] | detalleventaUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutProductoInput | detalleventaCreateOrConnectWithoutProductoInput[]
    upsert?: detalleventaUpsertWithWhereUniqueWithoutProductoInput | detalleventaUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: detalleventaCreateManyProductoInputEnvelope
    set?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    disconnect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    delete?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    update?: detalleventaUpdateWithWhereUniqueWithoutProductoInput | detalleventaUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: detalleventaUpdateManyWithWhereWithoutProductoInput | detalleventaUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: detalleventaScalarWhereInput | detalleventaScalarWhereInput[]
  }

  export type insumoproduccionUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<insumoproduccionCreateWithoutProductoInput, insumoproduccionUncheckedCreateWithoutProductoInput> | insumoproduccionCreateWithoutProductoInput[] | insumoproduccionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: insumoproduccionCreateOrConnectWithoutProductoInput | insumoproduccionCreateOrConnectWithoutProductoInput[]
    upsert?: insumoproduccionUpsertWithWhereUniqueWithoutProductoInput | insumoproduccionUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: insumoproduccionCreateManyProductoInputEnvelope
    set?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    disconnect?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    delete?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    connect?: insumoproduccionWhereUniqueInput | insumoproduccionWhereUniqueInput[]
    update?: insumoproduccionUpdateWithWhereUniqueWithoutProductoInput | insumoproduccionUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: insumoproduccionUpdateManyWithWhereWithoutProductoInput | insumoproduccionUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: insumoproduccionScalarWhereInput | insumoproduccionScalarWhereInput[]
  }

  export type listaprecioUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<listaprecioCreateWithoutProductoInput, listaprecioUncheckedCreateWithoutProductoInput> | listaprecioCreateWithoutProductoInput[] | listaprecioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: listaprecioCreateOrConnectWithoutProductoInput | listaprecioCreateOrConnectWithoutProductoInput[]
    upsert?: listaprecioUpsertWithWhereUniqueWithoutProductoInput | listaprecioUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: listaprecioCreateManyProductoInputEnvelope
    set?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    disconnect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    delete?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    connect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    update?: listaprecioUpdateWithWhereUniqueWithoutProductoInput | listaprecioUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: listaprecioUpdateManyWithWhereWithoutProductoInput | listaprecioUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: listaprecioScalarWhereInput | listaprecioScalarWhereInput[]
  }

  export type ordenproduccionUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<ordenproduccionCreateWithoutProductoInput, ordenproduccionUncheckedCreateWithoutProductoInput> | ordenproduccionCreateWithoutProductoInput[] | ordenproduccionUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ordenproduccionCreateOrConnectWithoutProductoInput | ordenproduccionCreateOrConnectWithoutProductoInput[]
    upsert?: ordenproduccionUpsertWithWhereUniqueWithoutProductoInput | ordenproduccionUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: ordenproduccionCreateManyProductoInputEnvelope
    set?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    disconnect?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    delete?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    connect?: ordenproduccionWhereUniqueInput | ordenproduccionWhereUniqueInput[]
    update?: ordenproduccionUpdateWithWhereUniqueWithoutProductoInput | ordenproduccionUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: ordenproduccionUpdateManyWithWhereWithoutProductoInput | ordenproduccionUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: ordenproduccionScalarWhereInput | ordenproduccionScalarWhereInput[]
  }

  export type productocomboUncheckedUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput = {
    create?: XOR<productocomboCreateWithoutProducto_productocombo_combo_idToproductoInput, productocomboUncheckedCreateWithoutProducto_productocombo_combo_idToproductoInput> | productocomboCreateWithoutProducto_productocombo_combo_idToproductoInput[] | productocomboUncheckedCreateWithoutProducto_productocombo_combo_idToproductoInput[]
    connectOrCreate?: productocomboCreateOrConnectWithoutProducto_productocombo_combo_idToproductoInput | productocomboCreateOrConnectWithoutProducto_productocombo_combo_idToproductoInput[]
    upsert?: productocomboUpsertWithWhereUniqueWithoutProducto_productocombo_combo_idToproductoInput | productocomboUpsertWithWhereUniqueWithoutProducto_productocombo_combo_idToproductoInput[]
    createMany?: productocomboCreateManyProducto_productocombo_combo_idToproductoInputEnvelope
    set?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    disconnect?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    delete?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    connect?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    update?: productocomboUpdateWithWhereUniqueWithoutProducto_productocombo_combo_idToproductoInput | productocomboUpdateWithWhereUniqueWithoutProducto_productocombo_combo_idToproductoInput[]
    updateMany?: productocomboUpdateManyWithWhereWithoutProducto_productocombo_combo_idToproductoInput | productocomboUpdateManyWithWhereWithoutProducto_productocombo_combo_idToproductoInput[]
    deleteMany?: productocomboScalarWhereInput | productocomboScalarWhereInput[]
  }

  export type productocomboUncheckedUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput = {
    create?: XOR<productocomboCreateWithoutProducto_productocombo_producto_idToproductoInput, productocomboUncheckedCreateWithoutProducto_productocombo_producto_idToproductoInput> | productocomboCreateWithoutProducto_productocombo_producto_idToproductoInput[] | productocomboUncheckedCreateWithoutProducto_productocombo_producto_idToproductoInput[]
    connectOrCreate?: productocomboCreateOrConnectWithoutProducto_productocombo_producto_idToproductoInput | productocomboCreateOrConnectWithoutProducto_productocombo_producto_idToproductoInput[]
    upsert?: productocomboUpsertWithWhereUniqueWithoutProducto_productocombo_producto_idToproductoInput | productocomboUpsertWithWhereUniqueWithoutProducto_productocombo_producto_idToproductoInput[]
    createMany?: productocomboCreateManyProducto_productocombo_producto_idToproductoInputEnvelope
    set?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    disconnect?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    delete?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    connect?: productocomboWhereUniqueInput | productocomboWhereUniqueInput[]
    update?: productocomboUpdateWithWhereUniqueWithoutProducto_productocombo_producto_idToproductoInput | productocomboUpdateWithWhereUniqueWithoutProducto_productocombo_producto_idToproductoInput[]
    updateMany?: productocomboUpdateManyWithWhereWithoutProducto_productocombo_producto_idToproductoInput | productocomboUpdateManyWithWhereWithoutProducto_productocombo_producto_idToproductoInput[]
    deleteMany?: productocomboScalarWhereInput | productocomboScalarWhereInput[]
  }

  export type productoCreateNestedOneWithoutProductocombo_productocombo_combo_idToproductoInput = {
    create?: XOR<productoCreateWithoutProductocombo_productocombo_combo_idToproductoInput, productoUncheckedCreateWithoutProductocombo_productocombo_combo_idToproductoInput>
    connectOrCreate?: productoCreateOrConnectWithoutProductocombo_productocombo_combo_idToproductoInput
    connect?: productoWhereUniqueInput
  }

  export type productoCreateNestedOneWithoutProductocombo_productocombo_producto_idToproductoInput = {
    create?: XOR<productoCreateWithoutProductocombo_productocombo_producto_idToproductoInput, productoUncheckedCreateWithoutProductocombo_productocombo_producto_idToproductoInput>
    connectOrCreate?: productoCreateOrConnectWithoutProductocombo_productocombo_producto_idToproductoInput
    connect?: productoWhereUniqueInput
  }

  export type productoUpdateOneWithoutProductocombo_productocombo_combo_idToproductoNestedInput = {
    create?: XOR<productoCreateWithoutProductocombo_productocombo_combo_idToproductoInput, productoUncheckedCreateWithoutProductocombo_productocombo_combo_idToproductoInput>
    connectOrCreate?: productoCreateOrConnectWithoutProductocombo_productocombo_combo_idToproductoInput
    upsert?: productoUpsertWithoutProductocombo_productocombo_combo_idToproductoInput
    disconnect?: productoWhereInput | boolean
    delete?: productoWhereInput | boolean
    connect?: productoWhereUniqueInput
    update?: XOR<XOR<productoUpdateToOneWithWhereWithoutProductocombo_productocombo_combo_idToproductoInput, productoUpdateWithoutProductocombo_productocombo_combo_idToproductoInput>, productoUncheckedUpdateWithoutProductocombo_productocombo_combo_idToproductoInput>
  }

  export type productoUpdateOneWithoutProductocombo_productocombo_producto_idToproductoNestedInput = {
    create?: XOR<productoCreateWithoutProductocombo_productocombo_producto_idToproductoInput, productoUncheckedCreateWithoutProductocombo_productocombo_producto_idToproductoInput>
    connectOrCreate?: productoCreateOrConnectWithoutProductocombo_productocombo_producto_idToproductoInput
    upsert?: productoUpsertWithoutProductocombo_productocombo_producto_idToproductoInput
    disconnect?: productoWhereInput | boolean
    delete?: productoWhereInput | boolean
    connect?: productoWhereUniqueInput
    update?: XOR<XOR<productoUpdateToOneWithWhereWithoutProductocombo_productocombo_producto_idToproductoInput, productoUpdateWithoutProductocombo_productocombo_producto_idToproductoInput>, productoUncheckedUpdateWithoutProductocombo_productocombo_producto_idToproductoInput>
  }

  export type loteCreateNestedOneWithoutProductoterminadoInput = {
    create?: XOR<loteCreateWithoutProductoterminadoInput, loteUncheckedCreateWithoutProductoterminadoInput>
    connectOrCreate?: loteCreateOrConnectWithoutProductoterminadoInput
    connect?: loteWhereUniqueInput
  }

  export type ordenproduccionCreateNestedOneWithoutProductoterminadoInput = {
    create?: XOR<ordenproduccionCreateWithoutProductoterminadoInput, ordenproduccionUncheckedCreateWithoutProductoterminadoInput>
    connectOrCreate?: ordenproduccionCreateOrConnectWithoutProductoterminadoInput
    connect?: ordenproduccionWhereUniqueInput
  }

  export type loteUpdateOneWithoutProductoterminadoNestedInput = {
    create?: XOR<loteCreateWithoutProductoterminadoInput, loteUncheckedCreateWithoutProductoterminadoInput>
    connectOrCreate?: loteCreateOrConnectWithoutProductoterminadoInput
    upsert?: loteUpsertWithoutProductoterminadoInput
    disconnect?: loteWhereInput | boolean
    delete?: loteWhereInput | boolean
    connect?: loteWhereUniqueInput
    update?: XOR<XOR<loteUpdateToOneWithWhereWithoutProductoterminadoInput, loteUpdateWithoutProductoterminadoInput>, loteUncheckedUpdateWithoutProductoterminadoInput>
  }

  export type ordenproduccionUpdateOneWithoutProductoterminadoNestedInput = {
    create?: XOR<ordenproduccionCreateWithoutProductoterminadoInput, ordenproduccionUncheckedCreateWithoutProductoterminadoInput>
    connectOrCreate?: ordenproduccionCreateOrConnectWithoutProductoterminadoInput
    upsert?: ordenproduccionUpsertWithoutProductoterminadoInput
    disconnect?: ordenproduccionWhereInput | boolean
    delete?: ordenproduccionWhereInput | boolean
    connect?: ordenproduccionWhereUniqueInput
    update?: XOR<XOR<ordenproduccionUpdateToOneWithWhereWithoutProductoterminadoInput, ordenproduccionUpdateWithoutProductoterminadoInput>, ordenproduccionUncheckedUpdateWithoutProductoterminadoInput>
  }

  export type compraCreateNestedManyWithoutProveedorInput = {
    create?: XOR<compraCreateWithoutProveedorInput, compraUncheckedCreateWithoutProveedorInput> | compraCreateWithoutProveedorInput[] | compraUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: compraCreateOrConnectWithoutProveedorInput | compraCreateOrConnectWithoutProveedorInput[]
    createMany?: compraCreateManyProveedorInputEnvelope
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
  }

  export type ordencompraCreateNestedManyWithoutProveedorInput = {
    create?: XOR<ordencompraCreateWithoutProveedorInput, ordencompraUncheckedCreateWithoutProveedorInput> | ordencompraCreateWithoutProveedorInput[] | ordencompraUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ordencompraCreateOrConnectWithoutProveedorInput | ordencompraCreateOrConnectWithoutProveedorInput[]
    createMany?: ordencompraCreateManyProveedorInputEnvelope
    connect?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
  }

  export type compraUncheckedCreateNestedManyWithoutProveedorInput = {
    create?: XOR<compraCreateWithoutProveedorInput, compraUncheckedCreateWithoutProveedorInput> | compraCreateWithoutProveedorInput[] | compraUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: compraCreateOrConnectWithoutProveedorInput | compraCreateOrConnectWithoutProveedorInput[]
    createMany?: compraCreateManyProveedorInputEnvelope
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
  }

  export type ordencompraUncheckedCreateNestedManyWithoutProveedorInput = {
    create?: XOR<ordencompraCreateWithoutProveedorInput, ordencompraUncheckedCreateWithoutProveedorInput> | ordencompraCreateWithoutProveedorInput[] | ordencompraUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ordencompraCreateOrConnectWithoutProveedorInput | ordencompraCreateOrConnectWithoutProveedorInput[]
    createMany?: ordencompraCreateManyProveedorInputEnvelope
    connect?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
  }

  export type compraUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<compraCreateWithoutProveedorInput, compraUncheckedCreateWithoutProveedorInput> | compraCreateWithoutProveedorInput[] | compraUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: compraCreateOrConnectWithoutProveedorInput | compraCreateOrConnectWithoutProveedorInput[]
    upsert?: compraUpsertWithWhereUniqueWithoutProveedorInput | compraUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: compraCreateManyProveedorInputEnvelope
    set?: compraWhereUniqueInput | compraWhereUniqueInput[]
    disconnect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    delete?: compraWhereUniqueInput | compraWhereUniqueInput[]
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    update?: compraUpdateWithWhereUniqueWithoutProveedorInput | compraUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: compraUpdateManyWithWhereWithoutProveedorInput | compraUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: compraScalarWhereInput | compraScalarWhereInput[]
  }

  export type ordencompraUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<ordencompraCreateWithoutProveedorInput, ordencompraUncheckedCreateWithoutProveedorInput> | ordencompraCreateWithoutProveedorInput[] | ordencompraUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ordencompraCreateOrConnectWithoutProveedorInput | ordencompraCreateOrConnectWithoutProveedorInput[]
    upsert?: ordencompraUpsertWithWhereUniqueWithoutProveedorInput | ordencompraUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: ordencompraCreateManyProveedorInputEnvelope
    set?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    disconnect?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    delete?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    connect?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    update?: ordencompraUpdateWithWhereUniqueWithoutProveedorInput | ordencompraUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: ordencompraUpdateManyWithWhereWithoutProveedorInput | ordencompraUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: ordencompraScalarWhereInput | ordencompraScalarWhereInput[]
  }

  export type compraUncheckedUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<compraCreateWithoutProveedorInput, compraUncheckedCreateWithoutProveedorInput> | compraCreateWithoutProveedorInput[] | compraUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: compraCreateOrConnectWithoutProveedorInput | compraCreateOrConnectWithoutProveedorInput[]
    upsert?: compraUpsertWithWhereUniqueWithoutProveedorInput | compraUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: compraCreateManyProveedorInputEnvelope
    set?: compraWhereUniqueInput | compraWhereUniqueInput[]
    disconnect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    delete?: compraWhereUniqueInput | compraWhereUniqueInput[]
    connect?: compraWhereUniqueInput | compraWhereUniqueInput[]
    update?: compraUpdateWithWhereUniqueWithoutProveedorInput | compraUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: compraUpdateManyWithWhereWithoutProveedorInput | compraUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: compraScalarWhereInput | compraScalarWhereInput[]
  }

  export type ordencompraUncheckedUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<ordencompraCreateWithoutProveedorInput, ordencompraUncheckedCreateWithoutProveedorInput> | ordencompraCreateWithoutProveedorInput[] | ordencompraUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ordencompraCreateOrConnectWithoutProveedorInput | ordencompraCreateOrConnectWithoutProveedorInput[]
    upsert?: ordencompraUpsertWithWhereUniqueWithoutProveedorInput | ordencompraUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: ordencompraCreateManyProveedorInputEnvelope
    set?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    disconnect?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    delete?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    connect?: ordencompraWhereUniqueInput | ordencompraWhereUniqueInput[]
    update?: ordencompraUpdateWithWhereUniqueWithoutProveedorInput | ordencompraUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: ordencompraUpdateManyWithWhereWithoutProveedorInput | ordencompraUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: ordencompraScalarWhereInput | ordencompraScalarWhereInput[]
  }

  export type permisoCreateNestedManyWithoutRolInput = {
    create?: XOR<permisoCreateWithoutRolInput, permisoUncheckedCreateWithoutRolInput> | permisoCreateWithoutRolInput[] | permisoUncheckedCreateWithoutRolInput[]
    connectOrCreate?: permisoCreateOrConnectWithoutRolInput | permisoCreateOrConnectWithoutRolInput[]
    createMany?: permisoCreateManyRolInputEnvelope
    connect?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
  }

  export type usuarioCreateNestedManyWithoutRolInput = {
    create?: XOR<usuarioCreateWithoutRolInput, usuarioUncheckedCreateWithoutRolInput> | usuarioCreateWithoutRolInput[] | usuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: usuarioCreateOrConnectWithoutRolInput | usuarioCreateOrConnectWithoutRolInput[]
    createMany?: usuarioCreateManyRolInputEnvelope
    connect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
  }

  export type permisoUncheckedCreateNestedManyWithoutRolInput = {
    create?: XOR<permisoCreateWithoutRolInput, permisoUncheckedCreateWithoutRolInput> | permisoCreateWithoutRolInput[] | permisoUncheckedCreateWithoutRolInput[]
    connectOrCreate?: permisoCreateOrConnectWithoutRolInput | permisoCreateOrConnectWithoutRolInput[]
    createMany?: permisoCreateManyRolInputEnvelope
    connect?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
  }

  export type usuarioUncheckedCreateNestedManyWithoutRolInput = {
    create?: XOR<usuarioCreateWithoutRolInput, usuarioUncheckedCreateWithoutRolInput> | usuarioCreateWithoutRolInput[] | usuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: usuarioCreateOrConnectWithoutRolInput | usuarioCreateOrConnectWithoutRolInput[]
    createMany?: usuarioCreateManyRolInputEnvelope
    connect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
  }

  export type permisoUpdateManyWithoutRolNestedInput = {
    create?: XOR<permisoCreateWithoutRolInput, permisoUncheckedCreateWithoutRolInput> | permisoCreateWithoutRolInput[] | permisoUncheckedCreateWithoutRolInput[]
    connectOrCreate?: permisoCreateOrConnectWithoutRolInput | permisoCreateOrConnectWithoutRolInput[]
    upsert?: permisoUpsertWithWhereUniqueWithoutRolInput | permisoUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: permisoCreateManyRolInputEnvelope
    set?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    disconnect?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    delete?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    connect?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    update?: permisoUpdateWithWhereUniqueWithoutRolInput | permisoUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: permisoUpdateManyWithWhereWithoutRolInput | permisoUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: permisoScalarWhereInput | permisoScalarWhereInput[]
  }

  export type usuarioUpdateManyWithoutRolNestedInput = {
    create?: XOR<usuarioCreateWithoutRolInput, usuarioUncheckedCreateWithoutRolInput> | usuarioCreateWithoutRolInput[] | usuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: usuarioCreateOrConnectWithoutRolInput | usuarioCreateOrConnectWithoutRolInput[]
    upsert?: usuarioUpsertWithWhereUniqueWithoutRolInput | usuarioUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: usuarioCreateManyRolInputEnvelope
    set?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    disconnect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    delete?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    connect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    update?: usuarioUpdateWithWhereUniqueWithoutRolInput | usuarioUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: usuarioUpdateManyWithWhereWithoutRolInput | usuarioUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: usuarioScalarWhereInput | usuarioScalarWhereInput[]
  }

  export type permisoUncheckedUpdateManyWithoutRolNestedInput = {
    create?: XOR<permisoCreateWithoutRolInput, permisoUncheckedCreateWithoutRolInput> | permisoCreateWithoutRolInput[] | permisoUncheckedCreateWithoutRolInput[]
    connectOrCreate?: permisoCreateOrConnectWithoutRolInput | permisoCreateOrConnectWithoutRolInput[]
    upsert?: permisoUpsertWithWhereUniqueWithoutRolInput | permisoUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: permisoCreateManyRolInputEnvelope
    set?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    disconnect?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    delete?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    connect?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    update?: permisoUpdateWithWhereUniqueWithoutRolInput | permisoUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: permisoUpdateManyWithWhereWithoutRolInput | permisoUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: permisoScalarWhereInput | permisoScalarWhereInput[]
  }

  export type usuarioUncheckedUpdateManyWithoutRolNestedInput = {
    create?: XOR<usuarioCreateWithoutRolInput, usuarioUncheckedCreateWithoutRolInput> | usuarioCreateWithoutRolInput[] | usuarioUncheckedCreateWithoutRolInput[]
    connectOrCreate?: usuarioCreateOrConnectWithoutRolInput | usuarioCreateOrConnectWithoutRolInput[]
    upsert?: usuarioUpsertWithWhereUniqueWithoutRolInput | usuarioUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: usuarioCreateManyRolInputEnvelope
    set?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    disconnect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    delete?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    connect?: usuarioWhereUniqueInput | usuarioWhereUniqueInput[]
    update?: usuarioUpdateWithWhereUniqueWithoutRolInput | usuarioUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: usuarioUpdateManyWithWhereWithoutRolInput | usuarioUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: usuarioScalarWhereInput | usuarioScalarWhereInput[]
  }

  export type permisoCreateNestedManyWithoutScreenInput = {
    create?: XOR<permisoCreateWithoutScreenInput, permisoUncheckedCreateWithoutScreenInput> | permisoCreateWithoutScreenInput[] | permisoUncheckedCreateWithoutScreenInput[]
    connectOrCreate?: permisoCreateOrConnectWithoutScreenInput | permisoCreateOrConnectWithoutScreenInput[]
    createMany?: permisoCreateManyScreenInputEnvelope
    connect?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
  }

  export type permisoUncheckedCreateNestedManyWithoutScreenInput = {
    create?: XOR<permisoCreateWithoutScreenInput, permisoUncheckedCreateWithoutScreenInput> | permisoCreateWithoutScreenInput[] | permisoUncheckedCreateWithoutScreenInput[]
    connectOrCreate?: permisoCreateOrConnectWithoutScreenInput | permisoCreateOrConnectWithoutScreenInput[]
    createMany?: permisoCreateManyScreenInputEnvelope
    connect?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
  }

  export type permisoUpdateManyWithoutScreenNestedInput = {
    create?: XOR<permisoCreateWithoutScreenInput, permisoUncheckedCreateWithoutScreenInput> | permisoCreateWithoutScreenInput[] | permisoUncheckedCreateWithoutScreenInput[]
    connectOrCreate?: permisoCreateOrConnectWithoutScreenInput | permisoCreateOrConnectWithoutScreenInput[]
    upsert?: permisoUpsertWithWhereUniqueWithoutScreenInput | permisoUpsertWithWhereUniqueWithoutScreenInput[]
    createMany?: permisoCreateManyScreenInputEnvelope
    set?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    disconnect?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    delete?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    connect?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    update?: permisoUpdateWithWhereUniqueWithoutScreenInput | permisoUpdateWithWhereUniqueWithoutScreenInput[]
    updateMany?: permisoUpdateManyWithWhereWithoutScreenInput | permisoUpdateManyWithWhereWithoutScreenInput[]
    deleteMany?: permisoScalarWhereInput | permisoScalarWhereInput[]
  }

  export type permisoUncheckedUpdateManyWithoutScreenNestedInput = {
    create?: XOR<permisoCreateWithoutScreenInput, permisoUncheckedCreateWithoutScreenInput> | permisoCreateWithoutScreenInput[] | permisoUncheckedCreateWithoutScreenInput[]
    connectOrCreate?: permisoCreateOrConnectWithoutScreenInput | permisoCreateOrConnectWithoutScreenInput[]
    upsert?: permisoUpsertWithWhereUniqueWithoutScreenInput | permisoUpsertWithWhereUniqueWithoutScreenInput[]
    createMany?: permisoCreateManyScreenInputEnvelope
    set?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    disconnect?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    delete?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    connect?: permisoWhereUniqueInput | permisoWhereUniqueInput[]
    update?: permisoUpdateWithWhereUniqueWithoutScreenInput | permisoUpdateWithWhereUniqueWithoutScreenInput[]
    updateMany?: permisoUpdateManyWithWhereWithoutScreenInput | permisoUpdateManyWithWhereWithoutScreenInput[]
    deleteMany?: permisoScalarWhereInput | permisoScalarWhereInput[]
  }

  export type listaprecioCreateNestedManyWithoutSucursalInput = {
    create?: XOR<listaprecioCreateWithoutSucursalInput, listaprecioUncheckedCreateWithoutSucursalInput> | listaprecioCreateWithoutSucursalInput[] | listaprecioUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: listaprecioCreateOrConnectWithoutSucursalInput | listaprecioCreateOrConnectWithoutSucursalInput[]
    createMany?: listaprecioCreateManySucursalInputEnvelope
    connect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
  }

  export type listaprecioUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<listaprecioCreateWithoutSucursalInput, listaprecioUncheckedCreateWithoutSucursalInput> | listaprecioCreateWithoutSucursalInput[] | listaprecioUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: listaprecioCreateOrConnectWithoutSucursalInput | listaprecioCreateOrConnectWithoutSucursalInput[]
    createMany?: listaprecioCreateManySucursalInputEnvelope
    connect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
  }

  export type listaprecioUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<listaprecioCreateWithoutSucursalInput, listaprecioUncheckedCreateWithoutSucursalInput> | listaprecioCreateWithoutSucursalInput[] | listaprecioUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: listaprecioCreateOrConnectWithoutSucursalInput | listaprecioCreateOrConnectWithoutSucursalInput[]
    upsert?: listaprecioUpsertWithWhereUniqueWithoutSucursalInput | listaprecioUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: listaprecioCreateManySucursalInputEnvelope
    set?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    disconnect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    delete?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    connect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    update?: listaprecioUpdateWithWhereUniqueWithoutSucursalInput | listaprecioUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: listaprecioUpdateManyWithWhereWithoutSucursalInput | listaprecioUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: listaprecioScalarWhereInput | listaprecioScalarWhereInput[]
  }

  export type listaprecioUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<listaprecioCreateWithoutSucursalInput, listaprecioUncheckedCreateWithoutSucursalInput> | listaprecioCreateWithoutSucursalInput[] | listaprecioUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: listaprecioCreateOrConnectWithoutSucursalInput | listaprecioCreateOrConnectWithoutSucursalInput[]
    upsert?: listaprecioUpsertWithWhereUniqueWithoutSucursalInput | listaprecioUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: listaprecioCreateManySucursalInputEnvelope
    set?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    disconnect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    delete?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    connect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    update?: listaprecioUpdateWithWhereUniqueWithoutSucursalInput | listaprecioUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: listaprecioUpdateManyWithWhereWithoutSucursalInput | listaprecioUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: listaprecioScalarWhereInput | listaprecioScalarWhereInput[]
  }

  export type cuentafinancieraCreateNestedManyWithoutTipocuentaInput = {
    create?: XOR<cuentafinancieraCreateWithoutTipocuentaInput, cuentafinancieraUncheckedCreateWithoutTipocuentaInput> | cuentafinancieraCreateWithoutTipocuentaInput[] | cuentafinancieraUncheckedCreateWithoutTipocuentaInput[]
    connectOrCreate?: cuentafinancieraCreateOrConnectWithoutTipocuentaInput | cuentafinancieraCreateOrConnectWithoutTipocuentaInput[]
    createMany?: cuentafinancieraCreateManyTipocuentaInputEnvelope
    connect?: cuentafinancieraWhereUniqueInput | cuentafinancieraWhereUniqueInput[]
  }

  export type cuentafinancieraUncheckedCreateNestedManyWithoutTipocuentaInput = {
    create?: XOR<cuentafinancieraCreateWithoutTipocuentaInput, cuentafinancieraUncheckedCreateWithoutTipocuentaInput> | cuentafinancieraCreateWithoutTipocuentaInput[] | cuentafinancieraUncheckedCreateWithoutTipocuentaInput[]
    connectOrCreate?: cuentafinancieraCreateOrConnectWithoutTipocuentaInput | cuentafinancieraCreateOrConnectWithoutTipocuentaInput[]
    createMany?: cuentafinancieraCreateManyTipocuentaInputEnvelope
    connect?: cuentafinancieraWhereUniqueInput | cuentafinancieraWhereUniqueInput[]
  }

  export type cuentafinancieraUpdateManyWithoutTipocuentaNestedInput = {
    create?: XOR<cuentafinancieraCreateWithoutTipocuentaInput, cuentafinancieraUncheckedCreateWithoutTipocuentaInput> | cuentafinancieraCreateWithoutTipocuentaInput[] | cuentafinancieraUncheckedCreateWithoutTipocuentaInput[]
    connectOrCreate?: cuentafinancieraCreateOrConnectWithoutTipocuentaInput | cuentafinancieraCreateOrConnectWithoutTipocuentaInput[]
    upsert?: cuentafinancieraUpsertWithWhereUniqueWithoutTipocuentaInput | cuentafinancieraUpsertWithWhereUniqueWithoutTipocuentaInput[]
    createMany?: cuentafinancieraCreateManyTipocuentaInputEnvelope
    set?: cuentafinancieraWhereUniqueInput | cuentafinancieraWhereUniqueInput[]
    disconnect?: cuentafinancieraWhereUniqueInput | cuentafinancieraWhereUniqueInput[]
    delete?: cuentafinancieraWhereUniqueInput | cuentafinancieraWhereUniqueInput[]
    connect?: cuentafinancieraWhereUniqueInput | cuentafinancieraWhereUniqueInput[]
    update?: cuentafinancieraUpdateWithWhereUniqueWithoutTipocuentaInput | cuentafinancieraUpdateWithWhereUniqueWithoutTipocuentaInput[]
    updateMany?: cuentafinancieraUpdateManyWithWhereWithoutTipocuentaInput | cuentafinancieraUpdateManyWithWhereWithoutTipocuentaInput[]
    deleteMany?: cuentafinancieraScalarWhereInput | cuentafinancieraScalarWhereInput[]
  }

  export type cuentafinancieraUncheckedUpdateManyWithoutTipocuentaNestedInput = {
    create?: XOR<cuentafinancieraCreateWithoutTipocuentaInput, cuentafinancieraUncheckedCreateWithoutTipocuentaInput> | cuentafinancieraCreateWithoutTipocuentaInput[] | cuentafinancieraUncheckedCreateWithoutTipocuentaInput[]
    connectOrCreate?: cuentafinancieraCreateOrConnectWithoutTipocuentaInput | cuentafinancieraCreateOrConnectWithoutTipocuentaInput[]
    upsert?: cuentafinancieraUpsertWithWhereUniqueWithoutTipocuentaInput | cuentafinancieraUpsertWithWhereUniqueWithoutTipocuentaInput[]
    createMany?: cuentafinancieraCreateManyTipocuentaInputEnvelope
    set?: cuentafinancieraWhereUniqueInput | cuentafinancieraWhereUniqueInput[]
    disconnect?: cuentafinancieraWhereUniqueInput | cuentafinancieraWhereUniqueInput[]
    delete?: cuentafinancieraWhereUniqueInput | cuentafinancieraWhereUniqueInput[]
    connect?: cuentafinancieraWhereUniqueInput | cuentafinancieraWhereUniqueInput[]
    update?: cuentafinancieraUpdateWithWhereUniqueWithoutTipocuentaInput | cuentafinancieraUpdateWithWhereUniqueWithoutTipocuentaInput[]
    updateMany?: cuentafinancieraUpdateManyWithWhereWithoutTipocuentaInput | cuentafinancieraUpdateManyWithWhereWithoutTipocuentaInput[]
    deleteMany?: cuentafinancieraScalarWhereInput | cuentafinancieraScalarWhereInput[]
  }

  export type detalleventaCreateNestedManyWithoutTipolistaprecioInput = {
    create?: XOR<detalleventaCreateWithoutTipolistaprecioInput, detalleventaUncheckedCreateWithoutTipolistaprecioInput> | detalleventaCreateWithoutTipolistaprecioInput[] | detalleventaUncheckedCreateWithoutTipolistaprecioInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutTipolistaprecioInput | detalleventaCreateOrConnectWithoutTipolistaprecioInput[]
    createMany?: detalleventaCreateManyTipolistaprecioInputEnvelope
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
  }

  export type listaprecioCreateNestedManyWithoutTipolistaprecioInput = {
    create?: XOR<listaprecioCreateWithoutTipolistaprecioInput, listaprecioUncheckedCreateWithoutTipolistaprecioInput> | listaprecioCreateWithoutTipolistaprecioInput[] | listaprecioUncheckedCreateWithoutTipolistaprecioInput[]
    connectOrCreate?: listaprecioCreateOrConnectWithoutTipolistaprecioInput | listaprecioCreateOrConnectWithoutTipolistaprecioInput[]
    createMany?: listaprecioCreateManyTipolistaprecioInputEnvelope
    connect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
  }

  export type detalleventaUncheckedCreateNestedManyWithoutTipolistaprecioInput = {
    create?: XOR<detalleventaCreateWithoutTipolistaprecioInput, detalleventaUncheckedCreateWithoutTipolistaprecioInput> | detalleventaCreateWithoutTipolistaprecioInput[] | detalleventaUncheckedCreateWithoutTipolistaprecioInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutTipolistaprecioInput | detalleventaCreateOrConnectWithoutTipolistaprecioInput[]
    createMany?: detalleventaCreateManyTipolistaprecioInputEnvelope
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
  }

  export type listaprecioUncheckedCreateNestedManyWithoutTipolistaprecioInput = {
    create?: XOR<listaprecioCreateWithoutTipolistaprecioInput, listaprecioUncheckedCreateWithoutTipolistaprecioInput> | listaprecioCreateWithoutTipolistaprecioInput[] | listaprecioUncheckedCreateWithoutTipolistaprecioInput[]
    connectOrCreate?: listaprecioCreateOrConnectWithoutTipolistaprecioInput | listaprecioCreateOrConnectWithoutTipolistaprecioInput[]
    createMany?: listaprecioCreateManyTipolistaprecioInputEnvelope
    connect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
  }

  export type detalleventaUpdateManyWithoutTipolistaprecioNestedInput = {
    create?: XOR<detalleventaCreateWithoutTipolistaprecioInput, detalleventaUncheckedCreateWithoutTipolistaprecioInput> | detalleventaCreateWithoutTipolistaprecioInput[] | detalleventaUncheckedCreateWithoutTipolistaprecioInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutTipolistaprecioInput | detalleventaCreateOrConnectWithoutTipolistaprecioInput[]
    upsert?: detalleventaUpsertWithWhereUniqueWithoutTipolistaprecioInput | detalleventaUpsertWithWhereUniqueWithoutTipolistaprecioInput[]
    createMany?: detalleventaCreateManyTipolistaprecioInputEnvelope
    set?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    disconnect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    delete?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    update?: detalleventaUpdateWithWhereUniqueWithoutTipolistaprecioInput | detalleventaUpdateWithWhereUniqueWithoutTipolistaprecioInput[]
    updateMany?: detalleventaUpdateManyWithWhereWithoutTipolistaprecioInput | detalleventaUpdateManyWithWhereWithoutTipolistaprecioInput[]
    deleteMany?: detalleventaScalarWhereInput | detalleventaScalarWhereInput[]
  }

  export type listaprecioUpdateManyWithoutTipolistaprecioNestedInput = {
    create?: XOR<listaprecioCreateWithoutTipolistaprecioInput, listaprecioUncheckedCreateWithoutTipolistaprecioInput> | listaprecioCreateWithoutTipolistaprecioInput[] | listaprecioUncheckedCreateWithoutTipolistaprecioInput[]
    connectOrCreate?: listaprecioCreateOrConnectWithoutTipolistaprecioInput | listaprecioCreateOrConnectWithoutTipolistaprecioInput[]
    upsert?: listaprecioUpsertWithWhereUniqueWithoutTipolistaprecioInput | listaprecioUpsertWithWhereUniqueWithoutTipolistaprecioInput[]
    createMany?: listaprecioCreateManyTipolistaprecioInputEnvelope
    set?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    disconnect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    delete?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    connect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    update?: listaprecioUpdateWithWhereUniqueWithoutTipolistaprecioInput | listaprecioUpdateWithWhereUniqueWithoutTipolistaprecioInput[]
    updateMany?: listaprecioUpdateManyWithWhereWithoutTipolistaprecioInput | listaprecioUpdateManyWithWhereWithoutTipolistaprecioInput[]
    deleteMany?: listaprecioScalarWhereInput | listaprecioScalarWhereInput[]
  }

  export type detalleventaUncheckedUpdateManyWithoutTipolistaprecioNestedInput = {
    create?: XOR<detalleventaCreateWithoutTipolistaprecioInput, detalleventaUncheckedCreateWithoutTipolistaprecioInput> | detalleventaCreateWithoutTipolistaprecioInput[] | detalleventaUncheckedCreateWithoutTipolistaprecioInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutTipolistaprecioInput | detalleventaCreateOrConnectWithoutTipolistaprecioInput[]
    upsert?: detalleventaUpsertWithWhereUniqueWithoutTipolistaprecioInput | detalleventaUpsertWithWhereUniqueWithoutTipolistaprecioInput[]
    createMany?: detalleventaCreateManyTipolistaprecioInputEnvelope
    set?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    disconnect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    delete?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    update?: detalleventaUpdateWithWhereUniqueWithoutTipolistaprecioInput | detalleventaUpdateWithWhereUniqueWithoutTipolistaprecioInput[]
    updateMany?: detalleventaUpdateManyWithWhereWithoutTipolistaprecioInput | detalleventaUpdateManyWithWhereWithoutTipolistaprecioInput[]
    deleteMany?: detalleventaScalarWhereInput | detalleventaScalarWhereInput[]
  }

  export type listaprecioUncheckedUpdateManyWithoutTipolistaprecioNestedInput = {
    create?: XOR<listaprecioCreateWithoutTipolistaprecioInput, listaprecioUncheckedCreateWithoutTipolistaprecioInput> | listaprecioCreateWithoutTipolistaprecioInput[] | listaprecioUncheckedCreateWithoutTipolistaprecioInput[]
    connectOrCreate?: listaprecioCreateOrConnectWithoutTipolistaprecioInput | listaprecioCreateOrConnectWithoutTipolistaprecioInput[]
    upsert?: listaprecioUpsertWithWhereUniqueWithoutTipolistaprecioInput | listaprecioUpsertWithWhereUniqueWithoutTipolistaprecioInput[]
    createMany?: listaprecioCreateManyTipolistaprecioInputEnvelope
    set?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    disconnect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    delete?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    connect?: listaprecioWhereUniqueInput | listaprecioWhereUniqueInput[]
    update?: listaprecioUpdateWithWhereUniqueWithoutTipolistaprecioInput | listaprecioUpdateWithWhereUniqueWithoutTipolistaprecioInput[]
    updateMany?: listaprecioUpdateManyWithWhereWithoutTipolistaprecioInput | listaprecioUpdateManyWithWhereWithoutTipolistaprecioInput[]
    deleteMany?: listaprecioScalarWhereInput | listaprecioScalarWhereInput[]
  }

  export type transaccionfinancieraCreateNestedManyWithoutTipotransaccionInput = {
    create?: XOR<transaccionfinancieraCreateWithoutTipotransaccionInput, transaccionfinancieraUncheckedCreateWithoutTipotransaccionInput> | transaccionfinancieraCreateWithoutTipotransaccionInput[] | transaccionfinancieraUncheckedCreateWithoutTipotransaccionInput[]
    connectOrCreate?: transaccionfinancieraCreateOrConnectWithoutTipotransaccionInput | transaccionfinancieraCreateOrConnectWithoutTipotransaccionInput[]
    createMany?: transaccionfinancieraCreateManyTipotransaccionInputEnvelope
    connect?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
  }

  export type transaccionfinancieraUncheckedCreateNestedManyWithoutTipotransaccionInput = {
    create?: XOR<transaccionfinancieraCreateWithoutTipotransaccionInput, transaccionfinancieraUncheckedCreateWithoutTipotransaccionInput> | transaccionfinancieraCreateWithoutTipotransaccionInput[] | transaccionfinancieraUncheckedCreateWithoutTipotransaccionInput[]
    connectOrCreate?: transaccionfinancieraCreateOrConnectWithoutTipotransaccionInput | transaccionfinancieraCreateOrConnectWithoutTipotransaccionInput[]
    createMany?: transaccionfinancieraCreateManyTipotransaccionInputEnvelope
    connect?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
  }

  export type transaccionfinancieraUpdateManyWithoutTipotransaccionNestedInput = {
    create?: XOR<transaccionfinancieraCreateWithoutTipotransaccionInput, transaccionfinancieraUncheckedCreateWithoutTipotransaccionInput> | transaccionfinancieraCreateWithoutTipotransaccionInput[] | transaccionfinancieraUncheckedCreateWithoutTipotransaccionInput[]
    connectOrCreate?: transaccionfinancieraCreateOrConnectWithoutTipotransaccionInput | transaccionfinancieraCreateOrConnectWithoutTipotransaccionInput[]
    upsert?: transaccionfinancieraUpsertWithWhereUniqueWithoutTipotransaccionInput | transaccionfinancieraUpsertWithWhereUniqueWithoutTipotransaccionInput[]
    createMany?: transaccionfinancieraCreateManyTipotransaccionInputEnvelope
    set?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    disconnect?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    delete?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    connect?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    update?: transaccionfinancieraUpdateWithWhereUniqueWithoutTipotransaccionInput | transaccionfinancieraUpdateWithWhereUniqueWithoutTipotransaccionInput[]
    updateMany?: transaccionfinancieraUpdateManyWithWhereWithoutTipotransaccionInput | transaccionfinancieraUpdateManyWithWhereWithoutTipotransaccionInput[]
    deleteMany?: transaccionfinancieraScalarWhereInput | transaccionfinancieraScalarWhereInput[]
  }

  export type transaccionfinancieraUncheckedUpdateManyWithoutTipotransaccionNestedInput = {
    create?: XOR<transaccionfinancieraCreateWithoutTipotransaccionInput, transaccionfinancieraUncheckedCreateWithoutTipotransaccionInput> | transaccionfinancieraCreateWithoutTipotransaccionInput[] | transaccionfinancieraUncheckedCreateWithoutTipotransaccionInput[]
    connectOrCreate?: transaccionfinancieraCreateOrConnectWithoutTipotransaccionInput | transaccionfinancieraCreateOrConnectWithoutTipotransaccionInput[]
    upsert?: transaccionfinancieraUpsertWithWhereUniqueWithoutTipotransaccionInput | transaccionfinancieraUpsertWithWhereUniqueWithoutTipotransaccionInput[]
    createMany?: transaccionfinancieraCreateManyTipotransaccionInputEnvelope
    set?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    disconnect?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    delete?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    connect?: transaccionfinancieraWhereUniqueInput | transaccionfinancieraWhereUniqueInput[]
    update?: transaccionfinancieraUpdateWithWhereUniqueWithoutTipotransaccionInput | transaccionfinancieraUpdateWithWhereUniqueWithoutTipotransaccionInput[]
    updateMany?: transaccionfinancieraUpdateManyWithWhereWithoutTipotransaccionInput | transaccionfinancieraUpdateManyWithWhereWithoutTipotransaccionInput[]
    deleteMany?: transaccionfinancieraScalarWhereInput | transaccionfinancieraScalarWhereInput[]
  }

  export type detalleventaCreateNestedManyWithoutTipoventaInput = {
    create?: XOR<detalleventaCreateWithoutTipoventaInput, detalleventaUncheckedCreateWithoutTipoventaInput> | detalleventaCreateWithoutTipoventaInput[] | detalleventaUncheckedCreateWithoutTipoventaInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutTipoventaInput | detalleventaCreateOrConnectWithoutTipoventaInput[]
    createMany?: detalleventaCreateManyTipoventaInputEnvelope
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
  }

  export type detalleventaUncheckedCreateNestedManyWithoutTipoventaInput = {
    create?: XOR<detalleventaCreateWithoutTipoventaInput, detalleventaUncheckedCreateWithoutTipoventaInput> | detalleventaCreateWithoutTipoventaInput[] | detalleventaUncheckedCreateWithoutTipoventaInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutTipoventaInput | detalleventaCreateOrConnectWithoutTipoventaInput[]
    createMany?: detalleventaCreateManyTipoventaInputEnvelope
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
  }

  export type detalleventaUpdateManyWithoutTipoventaNestedInput = {
    create?: XOR<detalleventaCreateWithoutTipoventaInput, detalleventaUncheckedCreateWithoutTipoventaInput> | detalleventaCreateWithoutTipoventaInput[] | detalleventaUncheckedCreateWithoutTipoventaInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutTipoventaInput | detalleventaCreateOrConnectWithoutTipoventaInput[]
    upsert?: detalleventaUpsertWithWhereUniqueWithoutTipoventaInput | detalleventaUpsertWithWhereUniqueWithoutTipoventaInput[]
    createMany?: detalleventaCreateManyTipoventaInputEnvelope
    set?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    disconnect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    delete?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    update?: detalleventaUpdateWithWhereUniqueWithoutTipoventaInput | detalleventaUpdateWithWhereUniqueWithoutTipoventaInput[]
    updateMany?: detalleventaUpdateManyWithWhereWithoutTipoventaInput | detalleventaUpdateManyWithWhereWithoutTipoventaInput[]
    deleteMany?: detalleventaScalarWhereInput | detalleventaScalarWhereInput[]
  }

  export type detalleventaUncheckedUpdateManyWithoutTipoventaNestedInput = {
    create?: XOR<detalleventaCreateWithoutTipoventaInput, detalleventaUncheckedCreateWithoutTipoventaInput> | detalleventaCreateWithoutTipoventaInput[] | detalleventaUncheckedCreateWithoutTipoventaInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutTipoventaInput | detalleventaCreateOrConnectWithoutTipoventaInput[]
    upsert?: detalleventaUpsertWithWhereUniqueWithoutTipoventaInput | detalleventaUpsertWithWhereUniqueWithoutTipoventaInput[]
    createMany?: detalleventaCreateManyTipoventaInputEnvelope
    set?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    disconnect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    delete?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    update?: detalleventaUpdateWithWhereUniqueWithoutTipoventaInput | detalleventaUpdateWithWhereUniqueWithoutTipoventaInput[]
    updateMany?: detalleventaUpdateManyWithWhereWithoutTipoventaInput | detalleventaUpdateManyWithWhereWithoutTipoventaInput[]
    deleteMany?: detalleventaScalarWhereInput | detalleventaScalarWhereInput[]
  }

  export type cuentafinancieraCreateNestedOneWithoutTransaccionfinancieraInput = {
    create?: XOR<cuentafinancieraCreateWithoutTransaccionfinancieraInput, cuentafinancieraUncheckedCreateWithoutTransaccionfinancieraInput>
    connectOrCreate?: cuentafinancieraCreateOrConnectWithoutTransaccionfinancieraInput
    connect?: cuentafinancieraWhereUniqueInput
  }

  export type tipotransaccionCreateNestedOneWithoutTransaccionfinancieraInput = {
    create?: XOR<tipotransaccionCreateWithoutTransaccionfinancieraInput, tipotransaccionUncheckedCreateWithoutTransaccionfinancieraInput>
    connectOrCreate?: tipotransaccionCreateOrConnectWithoutTransaccionfinancieraInput
    connect?: tipotransaccionWhereUniqueInput
  }

  export type cuentafinancieraUpdateOneWithoutTransaccionfinancieraNestedInput = {
    create?: XOR<cuentafinancieraCreateWithoutTransaccionfinancieraInput, cuentafinancieraUncheckedCreateWithoutTransaccionfinancieraInput>
    connectOrCreate?: cuentafinancieraCreateOrConnectWithoutTransaccionfinancieraInput
    upsert?: cuentafinancieraUpsertWithoutTransaccionfinancieraInput
    disconnect?: cuentafinancieraWhereInput | boolean
    delete?: cuentafinancieraWhereInput | boolean
    connect?: cuentafinancieraWhereUniqueInput
    update?: XOR<XOR<cuentafinancieraUpdateToOneWithWhereWithoutTransaccionfinancieraInput, cuentafinancieraUpdateWithoutTransaccionfinancieraInput>, cuentafinancieraUncheckedUpdateWithoutTransaccionfinancieraInput>
  }

  export type tipotransaccionUpdateOneWithoutTransaccionfinancieraNestedInput = {
    create?: XOR<tipotransaccionCreateWithoutTransaccionfinancieraInput, tipotransaccionUncheckedCreateWithoutTransaccionfinancieraInput>
    connectOrCreate?: tipotransaccionCreateOrConnectWithoutTransaccionfinancieraInput
    upsert?: tipotransaccionUpsertWithoutTransaccionfinancieraInput
    disconnect?: tipotransaccionWhereInput | boolean
    delete?: tipotransaccionWhereInput | boolean
    connect?: tipotransaccionWhereUniqueInput
    update?: XOR<XOR<tipotransaccionUpdateToOneWithWhereWithoutTransaccionfinancieraInput, tipotransaccionUpdateWithoutTransaccionfinancieraInput>, tipotransaccionUncheckedUpdateWithoutTransaccionfinancieraInput>
  }

  export type rolCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<rolCreateWithoutUsuarioInput, rolUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: rolCreateOrConnectWithoutUsuarioInput
    connect?: rolWhereUniqueInput
  }

  export type ventaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ventaCreateWithoutUsuarioInput, ventaUncheckedCreateWithoutUsuarioInput> | ventaCreateWithoutUsuarioInput[] | ventaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ventaCreateOrConnectWithoutUsuarioInput | ventaCreateOrConnectWithoutUsuarioInput[]
    createMany?: ventaCreateManyUsuarioInputEnvelope
    connect?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
  }

  export type ventaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ventaCreateWithoutUsuarioInput, ventaUncheckedCreateWithoutUsuarioInput> | ventaCreateWithoutUsuarioInput[] | ventaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ventaCreateOrConnectWithoutUsuarioInput | ventaCreateOrConnectWithoutUsuarioInput[]
    createMany?: ventaCreateManyUsuarioInputEnvelope
    connect?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
  }

  export type rolUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<rolCreateWithoutUsuarioInput, rolUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: rolCreateOrConnectWithoutUsuarioInput
    upsert?: rolUpsertWithoutUsuarioInput
    disconnect?: rolWhereInput | boolean
    delete?: rolWhereInput | boolean
    connect?: rolWhereUniqueInput
    update?: XOR<XOR<rolUpdateToOneWithWhereWithoutUsuarioInput, rolUpdateWithoutUsuarioInput>, rolUncheckedUpdateWithoutUsuarioInput>
  }

  export type ventaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ventaCreateWithoutUsuarioInput, ventaUncheckedCreateWithoutUsuarioInput> | ventaCreateWithoutUsuarioInput[] | ventaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ventaCreateOrConnectWithoutUsuarioInput | ventaCreateOrConnectWithoutUsuarioInput[]
    upsert?: ventaUpsertWithWhereUniqueWithoutUsuarioInput | ventaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ventaCreateManyUsuarioInputEnvelope
    set?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    disconnect?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    delete?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    connect?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    update?: ventaUpdateWithWhereUniqueWithoutUsuarioInput | ventaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ventaUpdateManyWithWhereWithoutUsuarioInput | ventaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ventaScalarWhereInput | ventaScalarWhereInput[]
  }

  export type ventaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ventaCreateWithoutUsuarioInput, ventaUncheckedCreateWithoutUsuarioInput> | ventaCreateWithoutUsuarioInput[] | ventaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ventaCreateOrConnectWithoutUsuarioInput | ventaCreateOrConnectWithoutUsuarioInput[]
    upsert?: ventaUpsertWithWhereUniqueWithoutUsuarioInput | ventaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ventaCreateManyUsuarioInputEnvelope
    set?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    disconnect?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    delete?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    connect?: ventaWhereUniqueInput | ventaWhereUniqueInput[]
    update?: ventaUpdateWithWhereUniqueWithoutUsuarioInput | ventaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ventaUpdateManyWithWhereWithoutUsuarioInput | ventaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ventaScalarWhereInput | ventaScalarWhereInput[]
  }

  export type detalleventaCreateNestedManyWithoutVentaInput = {
    create?: XOR<detalleventaCreateWithoutVentaInput, detalleventaUncheckedCreateWithoutVentaInput> | detalleventaCreateWithoutVentaInput[] | detalleventaUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutVentaInput | detalleventaCreateOrConnectWithoutVentaInput[]
    createMany?: detalleventaCreateManyVentaInputEnvelope
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
  }

  export type estadoventaCreateNestedOneWithoutVentaInput = {
    create?: XOR<estadoventaCreateWithoutVentaInput, estadoventaUncheckedCreateWithoutVentaInput>
    connectOrCreate?: estadoventaCreateOrConnectWithoutVentaInput
    connect?: estadoventaWhereUniqueInput
  }

  export type usuarioCreateNestedOneWithoutVentaInput = {
    create?: XOR<usuarioCreateWithoutVentaInput, usuarioUncheckedCreateWithoutVentaInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutVentaInput
    connect?: usuarioWhereUniqueInput
  }

  export type detalleventaUncheckedCreateNestedManyWithoutVentaInput = {
    create?: XOR<detalleventaCreateWithoutVentaInput, detalleventaUncheckedCreateWithoutVentaInput> | detalleventaCreateWithoutVentaInput[] | detalleventaUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutVentaInput | detalleventaCreateOrConnectWithoutVentaInput[]
    createMany?: detalleventaCreateManyVentaInputEnvelope
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
  }

  export type detalleventaUpdateManyWithoutVentaNestedInput = {
    create?: XOR<detalleventaCreateWithoutVentaInput, detalleventaUncheckedCreateWithoutVentaInput> | detalleventaCreateWithoutVentaInput[] | detalleventaUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutVentaInput | detalleventaCreateOrConnectWithoutVentaInput[]
    upsert?: detalleventaUpsertWithWhereUniqueWithoutVentaInput | detalleventaUpsertWithWhereUniqueWithoutVentaInput[]
    createMany?: detalleventaCreateManyVentaInputEnvelope
    set?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    disconnect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    delete?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    update?: detalleventaUpdateWithWhereUniqueWithoutVentaInput | detalleventaUpdateWithWhereUniqueWithoutVentaInput[]
    updateMany?: detalleventaUpdateManyWithWhereWithoutVentaInput | detalleventaUpdateManyWithWhereWithoutVentaInput[]
    deleteMany?: detalleventaScalarWhereInput | detalleventaScalarWhereInput[]
  }

  export type estadoventaUpdateOneWithoutVentaNestedInput = {
    create?: XOR<estadoventaCreateWithoutVentaInput, estadoventaUncheckedCreateWithoutVentaInput>
    connectOrCreate?: estadoventaCreateOrConnectWithoutVentaInput
    upsert?: estadoventaUpsertWithoutVentaInput
    disconnect?: estadoventaWhereInput | boolean
    delete?: estadoventaWhereInput | boolean
    connect?: estadoventaWhereUniqueInput
    update?: XOR<XOR<estadoventaUpdateToOneWithWhereWithoutVentaInput, estadoventaUpdateWithoutVentaInput>, estadoventaUncheckedUpdateWithoutVentaInput>
  }

  export type usuarioUpdateOneWithoutVentaNestedInput = {
    create?: XOR<usuarioCreateWithoutVentaInput, usuarioUncheckedCreateWithoutVentaInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutVentaInput
    upsert?: usuarioUpsertWithoutVentaInput
    disconnect?: usuarioWhereInput | boolean
    delete?: usuarioWhereInput | boolean
    connect?: usuarioWhereUniqueInput
    update?: XOR<XOR<usuarioUpdateToOneWithWhereWithoutVentaInput, usuarioUpdateWithoutVentaInput>, usuarioUncheckedUpdateWithoutVentaInput>
  }

  export type detalleventaUncheckedUpdateManyWithoutVentaNestedInput = {
    create?: XOR<detalleventaCreateWithoutVentaInput, detalleventaUncheckedCreateWithoutVentaInput> | detalleventaCreateWithoutVentaInput[] | detalleventaUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: detalleventaCreateOrConnectWithoutVentaInput | detalleventaCreateOrConnectWithoutVentaInput[]
    upsert?: detalleventaUpsertWithWhereUniqueWithoutVentaInput | detalleventaUpsertWithWhereUniqueWithoutVentaInput[]
    createMany?: detalleventaCreateManyVentaInputEnvelope
    set?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    disconnect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    delete?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    connect?: detalleventaWhereUniqueInput | detalleventaWhereUniqueInput[]
    update?: detalleventaUpdateWithWhereUniqueWithoutVentaInput | detalleventaUpdateWithWhereUniqueWithoutVentaInput[]
    updateMany?: detalleventaUpdateManyWithWhereWithoutVentaInput | detalleventaUpdateManyWithWhereWithoutVentaInput[]
    deleteMany?: detalleventaScalarWhereInput | detalleventaScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type productoCreateWithoutCodigobarraInput = {
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    detalleordencompra?: detalleordencompraCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoUncheckedCreateWithoutCodigobarraInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    detalleordencompra?: detalleordencompraUncheckedCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionUncheckedCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioUncheckedCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionUncheckedCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoCreateOrConnectWithoutCodigobarraInput = {
    where: productoWhereUniqueInput
    create: XOR<productoCreateWithoutCodigobarraInput, productoUncheckedCreateWithoutCodigobarraInput>
  }

  export type detalleventaCreateWithoutCodigobarraInput = {
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    producto?: productoCreateNestedOneWithoutDetalleventaInput
    tipolistaprecio?: tipolistaprecioCreateNestedOneWithoutDetalleventaInput
    tipoventa?: tipoventaCreateNestedOneWithoutDetalleventaInput
    venta?: ventaCreateNestedOneWithoutDetalleventaInput
  }

  export type detalleventaUncheckedCreateWithoutCodigobarraInput = {
    id?: number
    venta_id?: number | null
    producto_id?: number | null
    tipo_venta_id?: number | null
    tipo_lista_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type detalleventaCreateOrConnectWithoutCodigobarraInput = {
    where: detalleventaWhereUniqueInput
    create: XOR<detalleventaCreateWithoutCodigobarraInput, detalleventaUncheckedCreateWithoutCodigobarraInput>
  }

  export type detalleventaCreateManyCodigobarraInputEnvelope = {
    data: detalleventaCreateManyCodigobarraInput | detalleventaCreateManyCodigobarraInput[]
    skipDuplicates?: boolean
  }

  export type loteCreateWithoutCodigobarraInput = {
    fecha_vencimiento?: Date | string | null
    cantidad: number
    ubicacion?: string | null
    detallecompra?: detallecompraCreateNestedManyWithoutLoteInput
    productoterminado?: productoterminadoCreateNestedManyWithoutLoteInput
  }

  export type loteUncheckedCreateWithoutCodigobarraInput = {
    id?: number
    fecha_vencimiento?: Date | string | null
    cantidad: number
    ubicacion?: string | null
    detallecompra?: detallecompraUncheckedCreateNestedManyWithoutLoteInput
    productoterminado?: productoterminadoUncheckedCreateNestedManyWithoutLoteInput
  }

  export type loteCreateOrConnectWithoutCodigobarraInput = {
    where: loteWhereUniqueInput
    create: XOR<loteCreateWithoutCodigobarraInput, loteUncheckedCreateWithoutCodigobarraInput>
  }

  export type loteCreateManyCodigobarraInputEnvelope = {
    data: loteCreateManyCodigobarraInput | loteCreateManyCodigobarraInput[]
    skipDuplicates?: boolean
  }

  export type productoUpsertWithoutCodigobarraInput = {
    update: XOR<productoUpdateWithoutCodigobarraInput, productoUncheckedUpdateWithoutCodigobarraInput>
    create: XOR<productoCreateWithoutCodigobarraInput, productoUncheckedCreateWithoutCodigobarraInput>
    where?: productoWhereInput
  }

  export type productoUpdateToOneWithWhereWithoutCodigobarraInput = {
    where?: productoWhereInput
    data: XOR<productoUpdateWithoutCodigobarraInput, productoUncheckedUpdateWithoutCodigobarraInput>
  }

  export type productoUpdateWithoutCodigobarraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    detalleordencompra?: detalleordencompraUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type productoUncheckedUpdateWithoutCodigobarraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    detalleordencompra?: detalleordencompraUncheckedUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUncheckedUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUncheckedUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUncheckedUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUncheckedUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type detalleventaUpsertWithWhereUniqueWithoutCodigobarraInput = {
    where: detalleventaWhereUniqueInput
    update: XOR<detalleventaUpdateWithoutCodigobarraInput, detalleventaUncheckedUpdateWithoutCodigobarraInput>
    create: XOR<detalleventaCreateWithoutCodigobarraInput, detalleventaUncheckedCreateWithoutCodigobarraInput>
  }

  export type detalleventaUpdateWithWhereUniqueWithoutCodigobarraInput = {
    where: detalleventaWhereUniqueInput
    data: XOR<detalleventaUpdateWithoutCodigobarraInput, detalleventaUncheckedUpdateWithoutCodigobarraInput>
  }

  export type detalleventaUpdateManyWithWhereWithoutCodigobarraInput = {
    where: detalleventaScalarWhereInput
    data: XOR<detalleventaUpdateManyMutationInput, detalleventaUncheckedUpdateManyWithoutCodigobarraInput>
  }

  export type detalleventaScalarWhereInput = {
    AND?: detalleventaScalarWhereInput | detalleventaScalarWhereInput[]
    OR?: detalleventaScalarWhereInput[]
    NOT?: detalleventaScalarWhereInput | detalleventaScalarWhereInput[]
    id?: IntFilter<"detalleventa"> | number
    venta_id?: IntNullableFilter<"detalleventa"> | number | null
    codigo_barra_id?: IntNullableFilter<"detalleventa"> | number | null
    producto_id?: IntNullableFilter<"detalleventa"> | number | null
    tipo_venta_id?: IntNullableFilter<"detalleventa"> | number | null
    tipo_lista_id?: IntNullableFilter<"detalleventa"> | number | null
    cantidad?: IntFilter<"detalleventa"> | number
    precio_unitario?: DecimalFilter<"detalleventa"> | Decimal | DecimalJsLike | number | string
  }

  export type loteUpsertWithWhereUniqueWithoutCodigobarraInput = {
    where: loteWhereUniqueInput
    update: XOR<loteUpdateWithoutCodigobarraInput, loteUncheckedUpdateWithoutCodigobarraInput>
    create: XOR<loteCreateWithoutCodigobarraInput, loteUncheckedCreateWithoutCodigobarraInput>
  }

  export type loteUpdateWithWhereUniqueWithoutCodigobarraInput = {
    where: loteWhereUniqueInput
    data: XOR<loteUpdateWithoutCodigobarraInput, loteUncheckedUpdateWithoutCodigobarraInput>
  }

  export type loteUpdateManyWithWhereWithoutCodigobarraInput = {
    where: loteScalarWhereInput
    data: XOR<loteUpdateManyMutationInput, loteUncheckedUpdateManyWithoutCodigobarraInput>
  }

  export type loteScalarWhereInput = {
    AND?: loteScalarWhereInput | loteScalarWhereInput[]
    OR?: loteScalarWhereInput[]
    NOT?: loteScalarWhereInput | loteScalarWhereInput[]
    id?: IntFilter<"lote"> | number
    codigo_barra_id?: IntNullableFilter<"lote"> | number | null
    fecha_vencimiento?: DateTimeNullableFilter<"lote"> | Date | string | null
    cantidad?: IntFilter<"lote"> | number
    ubicacion?: StringNullableFilter<"lote"> | string | null
  }

  export type proveedorCreateWithoutCompraInput = {
    nombre: string
    nit: string
    contacto?: string | null
    telefono?: string | null
    correo?: string | null
    direccion?: string | null
    tipo?: string | null
    ordencompra?: ordencompraCreateNestedManyWithoutProveedorInput
  }

  export type proveedorUncheckedCreateWithoutCompraInput = {
    id?: number
    nombre: string
    nit: string
    contacto?: string | null
    telefono?: string | null
    correo?: string | null
    direccion?: string | null
    tipo?: string | null
    ordencompra?: ordencompraUncheckedCreateNestedManyWithoutProveedorInput
  }

  export type proveedorCreateOrConnectWithoutCompraInput = {
    where: proveedorWhereUniqueInput
    create: XOR<proveedorCreateWithoutCompraInput, proveedorUncheckedCreateWithoutCompraInput>
  }

  export type detallecompraCreateWithoutCompraInput = {
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    lote?: loteCreateNestedOneWithoutDetallecompraInput
  }

  export type detallecompraUncheckedCreateWithoutCompraInput = {
    id?: number
    lote_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type detallecompraCreateOrConnectWithoutCompraInput = {
    where: detallecompraWhereUniqueInput
    create: XOR<detallecompraCreateWithoutCompraInput, detallecompraUncheckedCreateWithoutCompraInput>
  }

  export type detallecompraCreateManyCompraInputEnvelope = {
    data: detallecompraCreateManyCompraInput | detallecompraCreateManyCompraInput[]
    skipDuplicates?: boolean
  }

  export type ordencompracompraCreateWithoutCompraInput = {
    ordencompra?: ordencompraCreateNestedOneWithoutOrdencompracompraInput
  }

  export type ordencompracompraUncheckedCreateWithoutCompraInput = {
    id?: number
    orden_id?: number | null
  }

  export type ordencompracompraCreateOrConnectWithoutCompraInput = {
    where: ordencompracompraWhereUniqueInput
    create: XOR<ordencompracompraCreateWithoutCompraInput, ordencompracompraUncheckedCreateWithoutCompraInput>
  }

  export type ordencompracompraCreateManyCompraInputEnvelope = {
    data: ordencompracompraCreateManyCompraInput | ordencompracompraCreateManyCompraInput[]
    skipDuplicates?: boolean
  }

  export type proveedorUpsertWithoutCompraInput = {
    update: XOR<proveedorUpdateWithoutCompraInput, proveedorUncheckedUpdateWithoutCompraInput>
    create: XOR<proveedorCreateWithoutCompraInput, proveedorUncheckedCreateWithoutCompraInput>
    where?: proveedorWhereInput
  }

  export type proveedorUpdateToOneWithWhereWithoutCompraInput = {
    where?: proveedorWhereInput
    data: XOR<proveedorUpdateWithoutCompraInput, proveedorUncheckedUpdateWithoutCompraInput>
  }

  export type proveedorUpdateWithoutCompraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    nit?: StringFieldUpdateOperationsInput | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    ordencompra?: ordencompraUpdateManyWithoutProveedorNestedInput
  }

  export type proveedorUncheckedUpdateWithoutCompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    nit?: StringFieldUpdateOperationsInput | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    ordencompra?: ordencompraUncheckedUpdateManyWithoutProveedorNestedInput
  }

  export type detallecompraUpsertWithWhereUniqueWithoutCompraInput = {
    where: detallecompraWhereUniqueInput
    update: XOR<detallecompraUpdateWithoutCompraInput, detallecompraUncheckedUpdateWithoutCompraInput>
    create: XOR<detallecompraCreateWithoutCompraInput, detallecompraUncheckedCreateWithoutCompraInput>
  }

  export type detallecompraUpdateWithWhereUniqueWithoutCompraInput = {
    where: detallecompraWhereUniqueInput
    data: XOR<detallecompraUpdateWithoutCompraInput, detallecompraUncheckedUpdateWithoutCompraInput>
  }

  export type detallecompraUpdateManyWithWhereWithoutCompraInput = {
    where: detallecompraScalarWhereInput
    data: XOR<detallecompraUpdateManyMutationInput, detallecompraUncheckedUpdateManyWithoutCompraInput>
  }

  export type detallecompraScalarWhereInput = {
    AND?: detallecompraScalarWhereInput | detallecompraScalarWhereInput[]
    OR?: detallecompraScalarWhereInput[]
    NOT?: detallecompraScalarWhereInput | detallecompraScalarWhereInput[]
    id?: IntFilter<"detallecompra"> | number
    compra_id?: IntNullableFilter<"detallecompra"> | number | null
    lote_id?: IntNullableFilter<"detallecompra"> | number | null
    cantidad?: IntFilter<"detallecompra"> | number
    precio_unitario?: DecimalFilter<"detallecompra"> | Decimal | DecimalJsLike | number | string
  }

  export type ordencompracompraUpsertWithWhereUniqueWithoutCompraInput = {
    where: ordencompracompraWhereUniqueInput
    update: XOR<ordencompracompraUpdateWithoutCompraInput, ordencompracompraUncheckedUpdateWithoutCompraInput>
    create: XOR<ordencompracompraCreateWithoutCompraInput, ordencompracompraUncheckedCreateWithoutCompraInput>
  }

  export type ordencompracompraUpdateWithWhereUniqueWithoutCompraInput = {
    where: ordencompracompraWhereUniqueInput
    data: XOR<ordencompracompraUpdateWithoutCompraInput, ordencompracompraUncheckedUpdateWithoutCompraInput>
  }

  export type ordencompracompraUpdateManyWithWhereWithoutCompraInput = {
    where: ordencompracompraScalarWhereInput
    data: XOR<ordencompracompraUpdateManyMutationInput, ordencompracompraUncheckedUpdateManyWithoutCompraInput>
  }

  export type ordencompracompraScalarWhereInput = {
    AND?: ordencompracompraScalarWhereInput | ordencompracompraScalarWhereInput[]
    OR?: ordencompracompraScalarWhereInput[]
    NOT?: ordencompracompraScalarWhereInput | ordencompracompraScalarWhereInput[]
    id?: IntFilter<"ordencompracompra"> | number
    orden_id?: IntNullableFilter<"ordencompracompra"> | number | null
    compra_id?: IntNullableFilter<"ordencompracompra"> | number | null
  }

  export type tipocuentaCreateWithoutCuentafinancieraInput = {
    nombre: string
  }

  export type tipocuentaUncheckedCreateWithoutCuentafinancieraInput = {
    id?: number
    nombre: string
  }

  export type tipocuentaCreateOrConnectWithoutCuentafinancieraInput = {
    where: tipocuentaWhereUniqueInput
    create: XOR<tipocuentaCreateWithoutCuentafinancieraInput, tipocuentaUncheckedCreateWithoutCuentafinancieraInput>
  }

  export type transaccionfinancieraCreateWithoutCuentafinancieraInput = {
    fecha: Date | string
    monto: Decimal | DecimalJsLike | number | string
    descripcion?: string | null
    tipotransaccion?: tipotransaccionCreateNestedOneWithoutTransaccionfinancieraInput
  }

  export type transaccionfinancieraUncheckedCreateWithoutCuentafinancieraInput = {
    id?: number
    fecha: Date | string
    tipo_id?: number | null
    monto: Decimal | DecimalJsLike | number | string
    descripcion?: string | null
  }

  export type transaccionfinancieraCreateOrConnectWithoutCuentafinancieraInput = {
    where: transaccionfinancieraWhereUniqueInput
    create: XOR<transaccionfinancieraCreateWithoutCuentafinancieraInput, transaccionfinancieraUncheckedCreateWithoutCuentafinancieraInput>
  }

  export type transaccionfinancieraCreateManyCuentafinancieraInputEnvelope = {
    data: transaccionfinancieraCreateManyCuentafinancieraInput | transaccionfinancieraCreateManyCuentafinancieraInput[]
    skipDuplicates?: boolean
  }

  export type tipocuentaUpsertWithoutCuentafinancieraInput = {
    update: XOR<tipocuentaUpdateWithoutCuentafinancieraInput, tipocuentaUncheckedUpdateWithoutCuentafinancieraInput>
    create: XOR<tipocuentaCreateWithoutCuentafinancieraInput, tipocuentaUncheckedCreateWithoutCuentafinancieraInput>
    where?: tipocuentaWhereInput
  }

  export type tipocuentaUpdateToOneWithWhereWithoutCuentafinancieraInput = {
    where?: tipocuentaWhereInput
    data: XOR<tipocuentaUpdateWithoutCuentafinancieraInput, tipocuentaUncheckedUpdateWithoutCuentafinancieraInput>
  }

  export type tipocuentaUpdateWithoutCuentafinancieraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type tipocuentaUncheckedUpdateWithoutCuentafinancieraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type transaccionfinancieraUpsertWithWhereUniqueWithoutCuentafinancieraInput = {
    where: transaccionfinancieraWhereUniqueInput
    update: XOR<transaccionfinancieraUpdateWithoutCuentafinancieraInput, transaccionfinancieraUncheckedUpdateWithoutCuentafinancieraInput>
    create: XOR<transaccionfinancieraCreateWithoutCuentafinancieraInput, transaccionfinancieraUncheckedCreateWithoutCuentafinancieraInput>
  }

  export type transaccionfinancieraUpdateWithWhereUniqueWithoutCuentafinancieraInput = {
    where: transaccionfinancieraWhereUniqueInput
    data: XOR<transaccionfinancieraUpdateWithoutCuentafinancieraInput, transaccionfinancieraUncheckedUpdateWithoutCuentafinancieraInput>
  }

  export type transaccionfinancieraUpdateManyWithWhereWithoutCuentafinancieraInput = {
    where: transaccionfinancieraScalarWhereInput
    data: XOR<transaccionfinancieraUpdateManyMutationInput, transaccionfinancieraUncheckedUpdateManyWithoutCuentafinancieraInput>
  }

  export type transaccionfinancieraScalarWhereInput = {
    AND?: transaccionfinancieraScalarWhereInput | transaccionfinancieraScalarWhereInput[]
    OR?: transaccionfinancieraScalarWhereInput[]
    NOT?: transaccionfinancieraScalarWhereInput | transaccionfinancieraScalarWhereInput[]
    id?: IntFilter<"transaccionfinanciera"> | number
    cuenta_id?: IntNullableFilter<"transaccionfinanciera"> | number | null
    fecha?: DateTimeFilter<"transaccionfinanciera"> | Date | string
    tipo_id?: IntNullableFilter<"transaccionfinanciera"> | number | null
    monto?: DecimalFilter<"transaccionfinanciera"> | Decimal | DecimalJsLike | number | string
    descripcion?: StringNullableFilter<"transaccionfinanciera"> | string | null
  }

  export type compraCreateWithoutDetallecompraInput = {
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
    proveedor?: proveedorCreateNestedOneWithoutCompraInput
    ordencompracompra?: ordencompracompraCreateNestedManyWithoutCompraInput
  }

  export type compraUncheckedCreateWithoutDetallecompraInput = {
    id?: number
    proveedor_id?: number | null
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
    ordencompracompra?: ordencompracompraUncheckedCreateNestedManyWithoutCompraInput
  }

  export type compraCreateOrConnectWithoutDetallecompraInput = {
    where: compraWhereUniqueInput
    create: XOR<compraCreateWithoutDetallecompraInput, compraUncheckedCreateWithoutDetallecompraInput>
  }

  export type loteCreateWithoutDetallecompraInput = {
    fecha_vencimiento?: Date | string | null
    cantidad: number
    ubicacion?: string | null
    codigobarra?: codigobarraCreateNestedOneWithoutLoteInput
    productoterminado?: productoterminadoCreateNestedManyWithoutLoteInput
  }

  export type loteUncheckedCreateWithoutDetallecompraInput = {
    id?: number
    codigo_barra_id?: number | null
    fecha_vencimiento?: Date | string | null
    cantidad: number
    ubicacion?: string | null
    productoterminado?: productoterminadoUncheckedCreateNestedManyWithoutLoteInput
  }

  export type loteCreateOrConnectWithoutDetallecompraInput = {
    where: loteWhereUniqueInput
    create: XOR<loteCreateWithoutDetallecompraInput, loteUncheckedCreateWithoutDetallecompraInput>
  }

  export type compraUpsertWithoutDetallecompraInput = {
    update: XOR<compraUpdateWithoutDetallecompraInput, compraUncheckedUpdateWithoutDetallecompraInput>
    create: XOR<compraCreateWithoutDetallecompraInput, compraUncheckedCreateWithoutDetallecompraInput>
    where?: compraWhereInput
  }

  export type compraUpdateToOneWithWhereWithoutDetallecompraInput = {
    where?: compraWhereInput
    data: XOR<compraUpdateWithoutDetallecompraInput, compraUncheckedUpdateWithoutDetallecompraInput>
  }

  export type compraUpdateWithoutDetallecompraInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedor?: proveedorUpdateOneWithoutCompraNestedInput
    ordencompracompra?: ordencompracompraUpdateManyWithoutCompraNestedInput
  }

  export type compraUncheckedUpdateWithoutDetallecompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ordencompracompra?: ordencompracompraUncheckedUpdateManyWithoutCompraNestedInput
  }

  export type loteUpsertWithoutDetallecompraInput = {
    update: XOR<loteUpdateWithoutDetallecompraInput, loteUncheckedUpdateWithoutDetallecompraInput>
    create: XOR<loteCreateWithoutDetallecompraInput, loteUncheckedCreateWithoutDetallecompraInput>
    where?: loteWhereInput
  }

  export type loteUpdateToOneWithWhereWithoutDetallecompraInput = {
    where?: loteWhereInput
    data: XOR<loteUpdateWithoutDetallecompraInput, loteUncheckedUpdateWithoutDetallecompraInput>
  }

  export type loteUpdateWithoutDetallecompraInput = {
    fecha_vencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidad?: IntFieldUpdateOperationsInput | number
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    codigobarra?: codigobarraUpdateOneWithoutLoteNestedInput
    productoterminado?: productoterminadoUpdateManyWithoutLoteNestedInput
  }

  export type loteUncheckedUpdateWithoutDetallecompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo_barra_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_vencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidad?: IntFieldUpdateOperationsInput | number
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    productoterminado?: productoterminadoUncheckedUpdateManyWithoutLoteNestedInput
  }

  export type ordencompraCreateWithoutDetalleordencompraInput = {
    fecha: Date | string
    observaciones?: string | null
    estadoordencompra?: estadoordencompraCreateNestedOneWithoutOrdencompraInput
    proveedor?: proveedorCreateNestedOneWithoutOrdencompraInput
    ordencompracompra?: ordencompracompraCreateNestedManyWithoutOrdencompraInput
  }

  export type ordencompraUncheckedCreateWithoutDetalleordencompraInput = {
    id?: number
    proveedor_id?: number | null
    fecha: Date | string
    estado_id?: number | null
    observaciones?: string | null
    ordencompracompra?: ordencompracompraUncheckedCreateNestedManyWithoutOrdencompraInput
  }

  export type ordencompraCreateOrConnectWithoutDetalleordencompraInput = {
    where: ordencompraWhereUniqueInput
    create: XOR<ordencompraCreateWithoutDetalleordencompraInput, ordencompraUncheckedCreateWithoutDetalleordencompraInput>
  }

  export type productoCreateWithoutDetalleordencompraInput = {
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoUncheckedCreateWithoutDetalleordencompraInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraUncheckedCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionUncheckedCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioUncheckedCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionUncheckedCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoCreateOrConnectWithoutDetalleordencompraInput = {
    where: productoWhereUniqueInput
    create: XOR<productoCreateWithoutDetalleordencompraInput, productoUncheckedCreateWithoutDetalleordencompraInput>
  }

  export type ordencompraUpsertWithoutDetalleordencompraInput = {
    update: XOR<ordencompraUpdateWithoutDetalleordencompraInput, ordencompraUncheckedUpdateWithoutDetalleordencompraInput>
    create: XOR<ordencompraCreateWithoutDetalleordencompraInput, ordencompraUncheckedCreateWithoutDetalleordencompraInput>
    where?: ordencompraWhereInput
  }

  export type ordencompraUpdateToOneWithWhereWithoutDetalleordencompraInput = {
    where?: ordencompraWhereInput
    data: XOR<ordencompraUpdateWithoutDetalleordencompraInput, ordencompraUncheckedUpdateWithoutDetalleordencompraInput>
  }

  export type ordencompraUpdateWithoutDetalleordencompraInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    estadoordencompra?: estadoordencompraUpdateOneWithoutOrdencompraNestedInput
    proveedor?: proveedorUpdateOneWithoutOrdencompraNestedInput
    ordencompracompra?: ordencompracompraUpdateManyWithoutOrdencompraNestedInput
  }

  export type ordencompraUncheckedUpdateWithoutDetalleordencompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    ordencompracompra?: ordencompracompraUncheckedUpdateManyWithoutOrdencompraNestedInput
  }

  export type productoUpsertWithoutDetalleordencompraInput = {
    update: XOR<productoUpdateWithoutDetalleordencompraInput, productoUncheckedUpdateWithoutDetalleordencompraInput>
    create: XOR<productoCreateWithoutDetalleordencompraInput, productoUncheckedCreateWithoutDetalleordencompraInput>
    where?: productoWhereInput
  }

  export type productoUpdateToOneWithWhereWithoutDetalleordencompraInput = {
    where?: productoWhereInput
    data: XOR<productoUpdateWithoutDetalleordencompraInput, productoUncheckedUpdateWithoutDetalleordencompraInput>
  }

  export type productoUpdateWithoutDetalleordencompraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type productoUncheckedUpdateWithoutDetalleordencompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUncheckedUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUncheckedUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUncheckedUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUncheckedUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUncheckedUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type codigobarraCreateWithoutDetalleventaInput = {
    codigo: string
    producto?: productoCreateNestedOneWithoutCodigobarraInput
    lote?: loteCreateNestedManyWithoutCodigobarraInput
  }

  export type codigobarraUncheckedCreateWithoutDetalleventaInput = {
    id?: number
    producto_id?: number | null
    codigo: string
    lote?: loteUncheckedCreateNestedManyWithoutCodigobarraInput
  }

  export type codigobarraCreateOrConnectWithoutDetalleventaInput = {
    where: codigobarraWhereUniqueInput
    create: XOR<codigobarraCreateWithoutDetalleventaInput, codigobarraUncheckedCreateWithoutDetalleventaInput>
  }

  export type productoCreateWithoutDetalleventaInput = {
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraCreateNestedManyWithoutProductoInput
    detalleordencompra?: detalleordencompraCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoUncheckedCreateWithoutDetalleventaInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraUncheckedCreateNestedManyWithoutProductoInput
    detalleordencompra?: detalleordencompraUncheckedCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionUncheckedCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioUncheckedCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionUncheckedCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoCreateOrConnectWithoutDetalleventaInput = {
    where: productoWhereUniqueInput
    create: XOR<productoCreateWithoutDetalleventaInput, productoUncheckedCreateWithoutDetalleventaInput>
  }

  export type tipolistaprecioCreateWithoutDetalleventaInput = {
    nombre: string
    listaprecio?: listaprecioCreateNestedManyWithoutTipolistaprecioInput
  }

  export type tipolistaprecioUncheckedCreateWithoutDetalleventaInput = {
    id?: number
    nombre: string
    listaprecio?: listaprecioUncheckedCreateNestedManyWithoutTipolistaprecioInput
  }

  export type tipolistaprecioCreateOrConnectWithoutDetalleventaInput = {
    where: tipolistaprecioWhereUniqueInput
    create: XOR<tipolistaprecioCreateWithoutDetalleventaInput, tipolistaprecioUncheckedCreateWithoutDetalleventaInput>
  }

  export type tipoventaCreateWithoutDetalleventaInput = {
    nombre: string
  }

  export type tipoventaUncheckedCreateWithoutDetalleventaInput = {
    id?: number
    nombre: string
  }

  export type tipoventaCreateOrConnectWithoutDetalleventaInput = {
    where: tipoventaWhereUniqueInput
    create: XOR<tipoventaCreateWithoutDetalleventaInput, tipoventaUncheckedCreateWithoutDetalleventaInput>
  }

  export type ventaCreateWithoutDetalleventaInput = {
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
    estadoventa?: estadoventaCreateNestedOneWithoutVentaInput
    usuario?: usuarioCreateNestedOneWithoutVentaInput
  }

  export type ventaUncheckedCreateWithoutDetalleventaInput = {
    id?: number
    usuario_id?: number | null
    fecha: Date | string
    estado_id?: number | null
    total: Decimal | DecimalJsLike | number | string
  }

  export type ventaCreateOrConnectWithoutDetalleventaInput = {
    where: ventaWhereUniqueInput
    create: XOR<ventaCreateWithoutDetalleventaInput, ventaUncheckedCreateWithoutDetalleventaInput>
  }

  export type codigobarraUpsertWithoutDetalleventaInput = {
    update: XOR<codigobarraUpdateWithoutDetalleventaInput, codigobarraUncheckedUpdateWithoutDetalleventaInput>
    create: XOR<codigobarraCreateWithoutDetalleventaInput, codigobarraUncheckedCreateWithoutDetalleventaInput>
    where?: codigobarraWhereInput
  }

  export type codigobarraUpdateToOneWithWhereWithoutDetalleventaInput = {
    where?: codigobarraWhereInput
    data: XOR<codigobarraUpdateWithoutDetalleventaInput, codigobarraUncheckedUpdateWithoutDetalleventaInput>
  }

  export type codigobarraUpdateWithoutDetalleventaInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    producto?: productoUpdateOneWithoutCodigobarraNestedInput
    lote?: loteUpdateManyWithoutCodigobarraNestedInput
  }

  export type codigobarraUncheckedUpdateWithoutDetalleventaInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    codigo?: StringFieldUpdateOperationsInput | string
    lote?: loteUncheckedUpdateManyWithoutCodigobarraNestedInput
  }

  export type productoUpsertWithoutDetalleventaInput = {
    update: XOR<productoUpdateWithoutDetalleventaInput, productoUncheckedUpdateWithoutDetalleventaInput>
    create: XOR<productoCreateWithoutDetalleventaInput, productoUncheckedCreateWithoutDetalleventaInput>
    where?: productoWhereInput
  }

  export type productoUpdateToOneWithWhereWithoutDetalleventaInput = {
    where?: productoWhereInput
    data: XOR<productoUpdateWithoutDetalleventaInput, productoUncheckedUpdateWithoutDetalleventaInput>
  }

  export type productoUpdateWithoutDetalleventaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUpdateManyWithoutProductoNestedInput
    detalleordencompra?: detalleordencompraUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type productoUncheckedUpdateWithoutDetalleventaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUncheckedUpdateManyWithoutProductoNestedInput
    detalleordencompra?: detalleordencompraUncheckedUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUncheckedUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUncheckedUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUncheckedUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type tipolistaprecioUpsertWithoutDetalleventaInput = {
    update: XOR<tipolistaprecioUpdateWithoutDetalleventaInput, tipolistaprecioUncheckedUpdateWithoutDetalleventaInput>
    create: XOR<tipolistaprecioCreateWithoutDetalleventaInput, tipolistaprecioUncheckedCreateWithoutDetalleventaInput>
    where?: tipolistaprecioWhereInput
  }

  export type tipolistaprecioUpdateToOneWithWhereWithoutDetalleventaInput = {
    where?: tipolistaprecioWhereInput
    data: XOR<tipolistaprecioUpdateWithoutDetalleventaInput, tipolistaprecioUncheckedUpdateWithoutDetalleventaInput>
  }

  export type tipolistaprecioUpdateWithoutDetalleventaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    listaprecio?: listaprecioUpdateManyWithoutTipolistaprecioNestedInput
  }

  export type tipolistaprecioUncheckedUpdateWithoutDetalleventaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    listaprecio?: listaprecioUncheckedUpdateManyWithoutTipolistaprecioNestedInput
  }

  export type tipoventaUpsertWithoutDetalleventaInput = {
    update: XOR<tipoventaUpdateWithoutDetalleventaInput, tipoventaUncheckedUpdateWithoutDetalleventaInput>
    create: XOR<tipoventaCreateWithoutDetalleventaInput, tipoventaUncheckedCreateWithoutDetalleventaInput>
    where?: tipoventaWhereInput
  }

  export type tipoventaUpdateToOneWithWhereWithoutDetalleventaInput = {
    where?: tipoventaWhereInput
    data: XOR<tipoventaUpdateWithoutDetalleventaInput, tipoventaUncheckedUpdateWithoutDetalleventaInput>
  }

  export type tipoventaUpdateWithoutDetalleventaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type tipoventaUncheckedUpdateWithoutDetalleventaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ventaUpsertWithoutDetalleventaInput = {
    update: XOR<ventaUpdateWithoutDetalleventaInput, ventaUncheckedUpdateWithoutDetalleventaInput>
    create: XOR<ventaCreateWithoutDetalleventaInput, ventaUncheckedCreateWithoutDetalleventaInput>
    where?: ventaWhereInput
  }

  export type ventaUpdateToOneWithWhereWithoutDetalleventaInput = {
    where?: ventaWhereInput
    data: XOR<ventaUpdateWithoutDetalleventaInput, ventaUncheckedUpdateWithoutDetalleventaInput>
  }

  export type ventaUpdateWithoutDetalleventaInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estadoventa?: estadoventaUpdateOneWithoutVentaNestedInput
    usuario?: usuarioUpdateOneWithoutVentaNestedInput
  }

  export type ventaUncheckedUpdateWithoutDetalleventaInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ordencompraCreateWithoutEstadoordencompraInput = {
    fecha: Date | string
    observaciones?: string | null
    detalleordencompra?: detalleordencompraCreateNestedManyWithoutOrdencompraInput
    proveedor?: proveedorCreateNestedOneWithoutOrdencompraInput
    ordencompracompra?: ordencompracompraCreateNestedManyWithoutOrdencompraInput
  }

  export type ordencompraUncheckedCreateWithoutEstadoordencompraInput = {
    id?: number
    proveedor_id?: number | null
    fecha: Date | string
    observaciones?: string | null
    detalleordencompra?: detalleordencompraUncheckedCreateNestedManyWithoutOrdencompraInput
    ordencompracompra?: ordencompracompraUncheckedCreateNestedManyWithoutOrdencompraInput
  }

  export type ordencompraCreateOrConnectWithoutEstadoordencompraInput = {
    where: ordencompraWhereUniqueInput
    create: XOR<ordencompraCreateWithoutEstadoordencompraInput, ordencompraUncheckedCreateWithoutEstadoordencompraInput>
  }

  export type ordencompraCreateManyEstadoordencompraInputEnvelope = {
    data: ordencompraCreateManyEstadoordencompraInput | ordencompraCreateManyEstadoordencompraInput[]
    skipDuplicates?: boolean
  }

  export type ordencompraUpsertWithWhereUniqueWithoutEstadoordencompraInput = {
    where: ordencompraWhereUniqueInput
    update: XOR<ordencompraUpdateWithoutEstadoordencompraInput, ordencompraUncheckedUpdateWithoutEstadoordencompraInput>
    create: XOR<ordencompraCreateWithoutEstadoordencompraInput, ordencompraUncheckedCreateWithoutEstadoordencompraInput>
  }

  export type ordencompraUpdateWithWhereUniqueWithoutEstadoordencompraInput = {
    where: ordencompraWhereUniqueInput
    data: XOR<ordencompraUpdateWithoutEstadoordencompraInput, ordencompraUncheckedUpdateWithoutEstadoordencompraInput>
  }

  export type ordencompraUpdateManyWithWhereWithoutEstadoordencompraInput = {
    where: ordencompraScalarWhereInput
    data: XOR<ordencompraUpdateManyMutationInput, ordencompraUncheckedUpdateManyWithoutEstadoordencompraInput>
  }

  export type ordencompraScalarWhereInput = {
    AND?: ordencompraScalarWhereInput | ordencompraScalarWhereInput[]
    OR?: ordencompraScalarWhereInput[]
    NOT?: ordencompraScalarWhereInput | ordencompraScalarWhereInput[]
    id?: IntFilter<"ordencompra"> | number
    proveedor_id?: IntNullableFilter<"ordencompra"> | number | null
    fecha?: DateTimeFilter<"ordencompra"> | Date | string
    estado_id?: IntNullableFilter<"ordencompra"> | number | null
    observaciones?: StringNullableFilter<"ordencompra"> | string | null
  }

  export type ordenproduccionCreateWithoutEstadoproduccionInput = {
    fecha_inicio: Date | string
    fecha_fin?: Date | string | null
    insumoproduccion?: insumoproduccionCreateNestedManyWithoutOrdenproduccionInput
    producto?: productoCreateNestedOneWithoutOrdenproduccionInput
    productoterminado?: productoterminadoCreateNestedManyWithoutOrdenproduccionInput
  }

  export type ordenproduccionUncheckedCreateWithoutEstadoproduccionInput = {
    id?: number
    producto_id?: number | null
    fecha_inicio: Date | string
    fecha_fin?: Date | string | null
    insumoproduccion?: insumoproduccionUncheckedCreateNestedManyWithoutOrdenproduccionInput
    productoterminado?: productoterminadoUncheckedCreateNestedManyWithoutOrdenproduccionInput
  }

  export type ordenproduccionCreateOrConnectWithoutEstadoproduccionInput = {
    where: ordenproduccionWhereUniqueInput
    create: XOR<ordenproduccionCreateWithoutEstadoproduccionInput, ordenproduccionUncheckedCreateWithoutEstadoproduccionInput>
  }

  export type ordenproduccionCreateManyEstadoproduccionInputEnvelope = {
    data: ordenproduccionCreateManyEstadoproduccionInput | ordenproduccionCreateManyEstadoproduccionInput[]
    skipDuplicates?: boolean
  }

  export type ordenproduccionUpsertWithWhereUniqueWithoutEstadoproduccionInput = {
    where: ordenproduccionWhereUniqueInput
    update: XOR<ordenproduccionUpdateWithoutEstadoproduccionInput, ordenproduccionUncheckedUpdateWithoutEstadoproduccionInput>
    create: XOR<ordenproduccionCreateWithoutEstadoproduccionInput, ordenproduccionUncheckedCreateWithoutEstadoproduccionInput>
  }

  export type ordenproduccionUpdateWithWhereUniqueWithoutEstadoproduccionInput = {
    where: ordenproduccionWhereUniqueInput
    data: XOR<ordenproduccionUpdateWithoutEstadoproduccionInput, ordenproduccionUncheckedUpdateWithoutEstadoproduccionInput>
  }

  export type ordenproduccionUpdateManyWithWhereWithoutEstadoproduccionInput = {
    where: ordenproduccionScalarWhereInput
    data: XOR<ordenproduccionUpdateManyMutationInput, ordenproduccionUncheckedUpdateManyWithoutEstadoproduccionInput>
  }

  export type ordenproduccionScalarWhereInput = {
    AND?: ordenproduccionScalarWhereInput | ordenproduccionScalarWhereInput[]
    OR?: ordenproduccionScalarWhereInput[]
    NOT?: ordenproduccionScalarWhereInput | ordenproduccionScalarWhereInput[]
    id?: IntFilter<"ordenproduccion"> | number
    producto_id?: IntNullableFilter<"ordenproduccion"> | number | null
    fecha_inicio?: DateTimeFilter<"ordenproduccion"> | Date | string
    fecha_fin?: DateTimeNullableFilter<"ordenproduccion"> | Date | string | null
    estado_id?: IntNullableFilter<"ordenproduccion"> | number | null
  }

  export type ventaCreateWithoutEstadoventaInput = {
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
    detalleventa?: detalleventaCreateNestedManyWithoutVentaInput
    usuario?: usuarioCreateNestedOneWithoutVentaInput
  }

  export type ventaUncheckedCreateWithoutEstadoventaInput = {
    id?: number
    usuario_id?: number | null
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutVentaInput
  }

  export type ventaCreateOrConnectWithoutEstadoventaInput = {
    where: ventaWhereUniqueInput
    create: XOR<ventaCreateWithoutEstadoventaInput, ventaUncheckedCreateWithoutEstadoventaInput>
  }

  export type ventaCreateManyEstadoventaInputEnvelope = {
    data: ventaCreateManyEstadoventaInput | ventaCreateManyEstadoventaInput[]
    skipDuplicates?: boolean
  }

  export type ventaUpsertWithWhereUniqueWithoutEstadoventaInput = {
    where: ventaWhereUniqueInput
    update: XOR<ventaUpdateWithoutEstadoventaInput, ventaUncheckedUpdateWithoutEstadoventaInput>
    create: XOR<ventaCreateWithoutEstadoventaInput, ventaUncheckedCreateWithoutEstadoventaInput>
  }

  export type ventaUpdateWithWhereUniqueWithoutEstadoventaInput = {
    where: ventaWhereUniqueInput
    data: XOR<ventaUpdateWithoutEstadoventaInput, ventaUncheckedUpdateWithoutEstadoventaInput>
  }

  export type ventaUpdateManyWithWhereWithoutEstadoventaInput = {
    where: ventaScalarWhereInput
    data: XOR<ventaUpdateManyMutationInput, ventaUncheckedUpdateManyWithoutEstadoventaInput>
  }

  export type ventaScalarWhereInput = {
    AND?: ventaScalarWhereInput | ventaScalarWhereInput[]
    OR?: ventaScalarWhereInput[]
    NOT?: ventaScalarWhereInput | ventaScalarWhereInput[]
    id?: IntFilter<"venta"> | number
    usuario_id?: IntNullableFilter<"venta"> | number | null
    fecha?: DateTimeFilter<"venta"> | Date | string
    estado_id?: IntNullableFilter<"venta"> | number | null
    total?: DecimalFilter<"venta"> | Decimal | DecimalJsLike | number | string
  }

  export type ordenproduccionCreateWithoutInsumoproduccionInput = {
    fecha_inicio: Date | string
    fecha_fin?: Date | string | null
    estadoproduccion?: estadoproduccionCreateNestedOneWithoutOrdenproduccionInput
    producto?: productoCreateNestedOneWithoutOrdenproduccionInput
    productoterminado?: productoterminadoCreateNestedManyWithoutOrdenproduccionInput
  }

  export type ordenproduccionUncheckedCreateWithoutInsumoproduccionInput = {
    id?: number
    producto_id?: number | null
    fecha_inicio: Date | string
    fecha_fin?: Date | string | null
    estado_id?: number | null
    productoterminado?: productoterminadoUncheckedCreateNestedManyWithoutOrdenproduccionInput
  }

  export type ordenproduccionCreateOrConnectWithoutInsumoproduccionInput = {
    where: ordenproduccionWhereUniqueInput
    create: XOR<ordenproduccionCreateWithoutInsumoproduccionInput, ordenproduccionUncheckedCreateWithoutInsumoproduccionInput>
  }

  export type productoCreateWithoutInsumoproduccionInput = {
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraCreateNestedManyWithoutProductoInput
    detalleordencompra?: detalleordencompraCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoUncheckedCreateWithoutInsumoproduccionInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraUncheckedCreateNestedManyWithoutProductoInput
    detalleordencompra?: detalleordencompraUncheckedCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioUncheckedCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionUncheckedCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoCreateOrConnectWithoutInsumoproduccionInput = {
    where: productoWhereUniqueInput
    create: XOR<productoCreateWithoutInsumoproduccionInput, productoUncheckedCreateWithoutInsumoproduccionInput>
  }

  export type ordenproduccionUpsertWithoutInsumoproduccionInput = {
    update: XOR<ordenproduccionUpdateWithoutInsumoproduccionInput, ordenproduccionUncheckedUpdateWithoutInsumoproduccionInput>
    create: XOR<ordenproduccionCreateWithoutInsumoproduccionInput, ordenproduccionUncheckedCreateWithoutInsumoproduccionInput>
    where?: ordenproduccionWhereInput
  }

  export type ordenproduccionUpdateToOneWithWhereWithoutInsumoproduccionInput = {
    where?: ordenproduccionWhereInput
    data: XOR<ordenproduccionUpdateWithoutInsumoproduccionInput, ordenproduccionUncheckedUpdateWithoutInsumoproduccionInput>
  }

  export type ordenproduccionUpdateWithoutInsumoproduccionInput = {
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estadoproduccion?: estadoproduccionUpdateOneWithoutOrdenproduccionNestedInput
    producto?: productoUpdateOneWithoutOrdenproduccionNestedInput
    productoterminado?: productoterminadoUpdateManyWithoutOrdenproduccionNestedInput
  }

  export type ordenproduccionUncheckedUpdateWithoutInsumoproduccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    productoterminado?: productoterminadoUncheckedUpdateManyWithoutOrdenproduccionNestedInput
  }

  export type productoUpsertWithoutInsumoproduccionInput = {
    update: XOR<productoUpdateWithoutInsumoproduccionInput, productoUncheckedUpdateWithoutInsumoproduccionInput>
    create: XOR<productoCreateWithoutInsumoproduccionInput, productoUncheckedCreateWithoutInsumoproduccionInput>
    where?: productoWhereInput
  }

  export type productoUpdateToOneWithWhereWithoutInsumoproduccionInput = {
    where?: productoWhereInput
    data: XOR<productoUpdateWithoutInsumoproduccionInput, productoUncheckedUpdateWithoutInsumoproduccionInput>
  }

  export type productoUpdateWithoutInsumoproduccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUpdateManyWithoutProductoNestedInput
    detalleordencompra?: detalleordencompraUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type productoUncheckedUpdateWithoutInsumoproduccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUncheckedUpdateManyWithoutProductoNestedInput
    detalleordencompra?: detalleordencompraUncheckedUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUncheckedUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUncheckedUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUncheckedUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type productoCreateWithoutListaprecioInput = {
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraCreateNestedManyWithoutProductoInput
    detalleordencompra?: detalleordencompraCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoUncheckedCreateWithoutListaprecioInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraUncheckedCreateNestedManyWithoutProductoInput
    detalleordencompra?: detalleordencompraUncheckedCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionUncheckedCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionUncheckedCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoCreateOrConnectWithoutListaprecioInput = {
    where: productoWhereUniqueInput
    create: XOR<productoCreateWithoutListaprecioInput, productoUncheckedCreateWithoutListaprecioInput>
  }

  export type sucursalCreateWithoutListaprecioInput = {
    nombre: string
    direccion?: string | null
  }

  export type sucursalUncheckedCreateWithoutListaprecioInput = {
    id?: number
    nombre: string
    direccion?: string | null
  }

  export type sucursalCreateOrConnectWithoutListaprecioInput = {
    where: sucursalWhereUniqueInput
    create: XOR<sucursalCreateWithoutListaprecioInput, sucursalUncheckedCreateWithoutListaprecioInput>
  }

  export type tipolistaprecioCreateWithoutListaprecioInput = {
    nombre: string
    detalleventa?: detalleventaCreateNestedManyWithoutTipolistaprecioInput
  }

  export type tipolistaprecioUncheckedCreateWithoutListaprecioInput = {
    id?: number
    nombre: string
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutTipolistaprecioInput
  }

  export type tipolistaprecioCreateOrConnectWithoutListaprecioInput = {
    where: tipolistaprecioWhereUniqueInput
    create: XOR<tipolistaprecioCreateWithoutListaprecioInput, tipolistaprecioUncheckedCreateWithoutListaprecioInput>
  }

  export type productoUpsertWithoutListaprecioInput = {
    update: XOR<productoUpdateWithoutListaprecioInput, productoUncheckedUpdateWithoutListaprecioInput>
    create: XOR<productoCreateWithoutListaprecioInput, productoUncheckedCreateWithoutListaprecioInput>
    where?: productoWhereInput
  }

  export type productoUpdateToOneWithWhereWithoutListaprecioInput = {
    where?: productoWhereInput
    data: XOR<productoUpdateWithoutListaprecioInput, productoUncheckedUpdateWithoutListaprecioInput>
  }

  export type productoUpdateWithoutListaprecioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUpdateManyWithoutProductoNestedInput
    detalleordencompra?: detalleordencompraUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type productoUncheckedUpdateWithoutListaprecioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUncheckedUpdateManyWithoutProductoNestedInput
    detalleordencompra?: detalleordencompraUncheckedUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUncheckedUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUncheckedUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUncheckedUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type sucursalUpsertWithoutListaprecioInput = {
    update: XOR<sucursalUpdateWithoutListaprecioInput, sucursalUncheckedUpdateWithoutListaprecioInput>
    create: XOR<sucursalCreateWithoutListaprecioInput, sucursalUncheckedCreateWithoutListaprecioInput>
    where?: sucursalWhereInput
  }

  export type sucursalUpdateToOneWithWhereWithoutListaprecioInput = {
    where?: sucursalWhereInput
    data: XOR<sucursalUpdateWithoutListaprecioInput, sucursalUncheckedUpdateWithoutListaprecioInput>
  }

  export type sucursalUpdateWithoutListaprecioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sucursalUncheckedUpdateWithoutListaprecioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tipolistaprecioUpsertWithoutListaprecioInput = {
    update: XOR<tipolistaprecioUpdateWithoutListaprecioInput, tipolistaprecioUncheckedUpdateWithoutListaprecioInput>
    create: XOR<tipolistaprecioCreateWithoutListaprecioInput, tipolistaprecioUncheckedCreateWithoutListaprecioInput>
    where?: tipolistaprecioWhereInput
  }

  export type tipolistaprecioUpdateToOneWithWhereWithoutListaprecioInput = {
    where?: tipolistaprecioWhereInput
    data: XOR<tipolistaprecioUpdateWithoutListaprecioInput, tipolistaprecioUncheckedUpdateWithoutListaprecioInput>
  }

  export type tipolistaprecioUpdateWithoutListaprecioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    detalleventa?: detalleventaUpdateManyWithoutTipolistaprecioNestedInput
  }

  export type tipolistaprecioUncheckedUpdateWithoutListaprecioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    detalleventa?: detalleventaUncheckedUpdateManyWithoutTipolistaprecioNestedInput
  }

  export type detallecompraCreateWithoutLoteInput = {
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    compra?: compraCreateNestedOneWithoutDetallecompraInput
  }

  export type detallecompraUncheckedCreateWithoutLoteInput = {
    id?: number
    compra_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type detallecompraCreateOrConnectWithoutLoteInput = {
    where: detallecompraWhereUniqueInput
    create: XOR<detallecompraCreateWithoutLoteInput, detallecompraUncheckedCreateWithoutLoteInput>
  }

  export type detallecompraCreateManyLoteInputEnvelope = {
    data: detallecompraCreateManyLoteInput | detallecompraCreateManyLoteInput[]
    skipDuplicates?: boolean
  }

  export type codigobarraCreateWithoutLoteInput = {
    codigo: string
    producto?: productoCreateNestedOneWithoutCodigobarraInput
    detalleventa?: detalleventaCreateNestedManyWithoutCodigobarraInput
  }

  export type codigobarraUncheckedCreateWithoutLoteInput = {
    id?: number
    producto_id?: number | null
    codigo: string
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutCodigobarraInput
  }

  export type codigobarraCreateOrConnectWithoutLoteInput = {
    where: codigobarraWhereUniqueInput
    create: XOR<codigobarraCreateWithoutLoteInput, codigobarraUncheckedCreateWithoutLoteInput>
  }

  export type productoterminadoCreateWithoutLoteInput = {
    cantidad: number
    ordenproduccion?: ordenproduccionCreateNestedOneWithoutProductoterminadoInput
  }

  export type productoterminadoUncheckedCreateWithoutLoteInput = {
    id?: number
    orden_id?: number | null
    cantidad: number
  }

  export type productoterminadoCreateOrConnectWithoutLoteInput = {
    where: productoterminadoWhereUniqueInput
    create: XOR<productoterminadoCreateWithoutLoteInput, productoterminadoUncheckedCreateWithoutLoteInput>
  }

  export type productoterminadoCreateManyLoteInputEnvelope = {
    data: productoterminadoCreateManyLoteInput | productoterminadoCreateManyLoteInput[]
    skipDuplicates?: boolean
  }

  export type detallecompraUpsertWithWhereUniqueWithoutLoteInput = {
    where: detallecompraWhereUniqueInput
    update: XOR<detallecompraUpdateWithoutLoteInput, detallecompraUncheckedUpdateWithoutLoteInput>
    create: XOR<detallecompraCreateWithoutLoteInput, detallecompraUncheckedCreateWithoutLoteInput>
  }

  export type detallecompraUpdateWithWhereUniqueWithoutLoteInput = {
    where: detallecompraWhereUniqueInput
    data: XOR<detallecompraUpdateWithoutLoteInput, detallecompraUncheckedUpdateWithoutLoteInput>
  }

  export type detallecompraUpdateManyWithWhereWithoutLoteInput = {
    where: detallecompraScalarWhereInput
    data: XOR<detallecompraUpdateManyMutationInput, detallecompraUncheckedUpdateManyWithoutLoteInput>
  }

  export type codigobarraUpsertWithoutLoteInput = {
    update: XOR<codigobarraUpdateWithoutLoteInput, codigobarraUncheckedUpdateWithoutLoteInput>
    create: XOR<codigobarraCreateWithoutLoteInput, codigobarraUncheckedCreateWithoutLoteInput>
    where?: codigobarraWhereInput
  }

  export type codigobarraUpdateToOneWithWhereWithoutLoteInput = {
    where?: codigobarraWhereInput
    data: XOR<codigobarraUpdateWithoutLoteInput, codigobarraUncheckedUpdateWithoutLoteInput>
  }

  export type codigobarraUpdateWithoutLoteInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    producto?: productoUpdateOneWithoutCodigobarraNestedInput
    detalleventa?: detalleventaUpdateManyWithoutCodigobarraNestedInput
  }

  export type codigobarraUncheckedUpdateWithoutLoteInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    codigo?: StringFieldUpdateOperationsInput | string
    detalleventa?: detalleventaUncheckedUpdateManyWithoutCodigobarraNestedInput
  }

  export type productoterminadoUpsertWithWhereUniqueWithoutLoteInput = {
    where: productoterminadoWhereUniqueInput
    update: XOR<productoterminadoUpdateWithoutLoteInput, productoterminadoUncheckedUpdateWithoutLoteInput>
    create: XOR<productoterminadoCreateWithoutLoteInput, productoterminadoUncheckedCreateWithoutLoteInput>
  }

  export type productoterminadoUpdateWithWhereUniqueWithoutLoteInput = {
    where: productoterminadoWhereUniqueInput
    data: XOR<productoterminadoUpdateWithoutLoteInput, productoterminadoUncheckedUpdateWithoutLoteInput>
  }

  export type productoterminadoUpdateManyWithWhereWithoutLoteInput = {
    where: productoterminadoScalarWhereInput
    data: XOR<productoterminadoUpdateManyMutationInput, productoterminadoUncheckedUpdateManyWithoutLoteInput>
  }

  export type productoterminadoScalarWhereInput = {
    AND?: productoterminadoScalarWhereInput | productoterminadoScalarWhereInput[]
    OR?: productoterminadoScalarWhereInput[]
    NOT?: productoterminadoScalarWhereInput | productoterminadoScalarWhereInput[]
    id?: IntFilter<"productoterminado"> | number
    orden_id?: IntNullableFilter<"productoterminado"> | number | null
    lote_id?: IntNullableFilter<"productoterminado"> | number | null
    cantidad?: IntFilter<"productoterminado"> | number
  }

  export type detalleordencompraCreateWithoutOrdencompraInput = {
    cantidad_solicitada: number
    precio_estimado?: Decimal | DecimalJsLike | number | string | null
    producto?: productoCreateNestedOneWithoutDetalleordencompraInput
  }

  export type detalleordencompraUncheckedCreateWithoutOrdencompraInput = {
    id?: number
    producto_id?: number | null
    cantidad_solicitada: number
    precio_estimado?: Decimal | DecimalJsLike | number | string | null
  }

  export type detalleordencompraCreateOrConnectWithoutOrdencompraInput = {
    where: detalleordencompraWhereUniqueInput
    create: XOR<detalleordencompraCreateWithoutOrdencompraInput, detalleordencompraUncheckedCreateWithoutOrdencompraInput>
  }

  export type detalleordencompraCreateManyOrdencompraInputEnvelope = {
    data: detalleordencompraCreateManyOrdencompraInput | detalleordencompraCreateManyOrdencompraInput[]
    skipDuplicates?: boolean
  }

  export type estadoordencompraCreateWithoutOrdencompraInput = {
    nombre: string
  }

  export type estadoordencompraUncheckedCreateWithoutOrdencompraInput = {
    id?: number
    nombre: string
  }

  export type estadoordencompraCreateOrConnectWithoutOrdencompraInput = {
    where: estadoordencompraWhereUniqueInput
    create: XOR<estadoordencompraCreateWithoutOrdencompraInput, estadoordencompraUncheckedCreateWithoutOrdencompraInput>
  }

  export type proveedorCreateWithoutOrdencompraInput = {
    nombre: string
    nit: string
    contacto?: string | null
    telefono?: string | null
    correo?: string | null
    direccion?: string | null
    tipo?: string | null
    compra?: compraCreateNestedManyWithoutProveedorInput
  }

  export type proveedorUncheckedCreateWithoutOrdencompraInput = {
    id?: number
    nombre: string
    nit: string
    contacto?: string | null
    telefono?: string | null
    correo?: string | null
    direccion?: string | null
    tipo?: string | null
    compra?: compraUncheckedCreateNestedManyWithoutProveedorInput
  }

  export type proveedorCreateOrConnectWithoutOrdencompraInput = {
    where: proveedorWhereUniqueInput
    create: XOR<proveedorCreateWithoutOrdencompraInput, proveedorUncheckedCreateWithoutOrdencompraInput>
  }

  export type ordencompracompraCreateWithoutOrdencompraInput = {
    compra?: compraCreateNestedOneWithoutOrdencompracompraInput
  }

  export type ordencompracompraUncheckedCreateWithoutOrdencompraInput = {
    id?: number
    compra_id?: number | null
  }

  export type ordencompracompraCreateOrConnectWithoutOrdencompraInput = {
    where: ordencompracompraWhereUniqueInput
    create: XOR<ordencompracompraCreateWithoutOrdencompraInput, ordencompracompraUncheckedCreateWithoutOrdencompraInput>
  }

  export type ordencompracompraCreateManyOrdencompraInputEnvelope = {
    data: ordencompracompraCreateManyOrdencompraInput | ordencompracompraCreateManyOrdencompraInput[]
    skipDuplicates?: boolean
  }

  export type detalleordencompraUpsertWithWhereUniqueWithoutOrdencompraInput = {
    where: detalleordencompraWhereUniqueInput
    update: XOR<detalleordencompraUpdateWithoutOrdencompraInput, detalleordencompraUncheckedUpdateWithoutOrdencompraInput>
    create: XOR<detalleordencompraCreateWithoutOrdencompraInput, detalleordencompraUncheckedCreateWithoutOrdencompraInput>
  }

  export type detalleordencompraUpdateWithWhereUniqueWithoutOrdencompraInput = {
    where: detalleordencompraWhereUniqueInput
    data: XOR<detalleordencompraUpdateWithoutOrdencompraInput, detalleordencompraUncheckedUpdateWithoutOrdencompraInput>
  }

  export type detalleordencompraUpdateManyWithWhereWithoutOrdencompraInput = {
    where: detalleordencompraScalarWhereInput
    data: XOR<detalleordencompraUpdateManyMutationInput, detalleordencompraUncheckedUpdateManyWithoutOrdencompraInput>
  }

  export type detalleordencompraScalarWhereInput = {
    AND?: detalleordencompraScalarWhereInput | detalleordencompraScalarWhereInput[]
    OR?: detalleordencompraScalarWhereInput[]
    NOT?: detalleordencompraScalarWhereInput | detalleordencompraScalarWhereInput[]
    id?: IntFilter<"detalleordencompra"> | number
    orden_id?: IntNullableFilter<"detalleordencompra"> | number | null
    producto_id?: IntNullableFilter<"detalleordencompra"> | number | null
    cantidad_solicitada?: IntFilter<"detalleordencompra"> | number
    precio_estimado?: DecimalNullableFilter<"detalleordencompra"> | Decimal | DecimalJsLike | number | string | null
  }

  export type estadoordencompraUpsertWithoutOrdencompraInput = {
    update: XOR<estadoordencompraUpdateWithoutOrdencompraInput, estadoordencompraUncheckedUpdateWithoutOrdencompraInput>
    create: XOR<estadoordencompraCreateWithoutOrdencompraInput, estadoordencompraUncheckedCreateWithoutOrdencompraInput>
    where?: estadoordencompraWhereInput
  }

  export type estadoordencompraUpdateToOneWithWhereWithoutOrdencompraInput = {
    where?: estadoordencompraWhereInput
    data: XOR<estadoordencompraUpdateWithoutOrdencompraInput, estadoordencompraUncheckedUpdateWithoutOrdencompraInput>
  }

  export type estadoordencompraUpdateWithoutOrdencompraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type estadoordencompraUncheckedUpdateWithoutOrdencompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type proveedorUpsertWithoutOrdencompraInput = {
    update: XOR<proveedorUpdateWithoutOrdencompraInput, proveedorUncheckedUpdateWithoutOrdencompraInput>
    create: XOR<proveedorCreateWithoutOrdencompraInput, proveedorUncheckedCreateWithoutOrdencompraInput>
    where?: proveedorWhereInput
  }

  export type proveedorUpdateToOneWithWhereWithoutOrdencompraInput = {
    where?: proveedorWhereInput
    data: XOR<proveedorUpdateWithoutOrdencompraInput, proveedorUncheckedUpdateWithoutOrdencompraInput>
  }

  export type proveedorUpdateWithoutOrdencompraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    nit?: StringFieldUpdateOperationsInput | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    compra?: compraUpdateManyWithoutProveedorNestedInput
  }

  export type proveedorUncheckedUpdateWithoutOrdencompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    nit?: StringFieldUpdateOperationsInput | string
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    compra?: compraUncheckedUpdateManyWithoutProveedorNestedInput
  }

  export type ordencompracompraUpsertWithWhereUniqueWithoutOrdencompraInput = {
    where: ordencompracompraWhereUniqueInput
    update: XOR<ordencompracompraUpdateWithoutOrdencompraInput, ordencompracompraUncheckedUpdateWithoutOrdencompraInput>
    create: XOR<ordencompracompraCreateWithoutOrdencompraInput, ordencompracompraUncheckedCreateWithoutOrdencompraInput>
  }

  export type ordencompracompraUpdateWithWhereUniqueWithoutOrdencompraInput = {
    where: ordencompracompraWhereUniqueInput
    data: XOR<ordencompracompraUpdateWithoutOrdencompraInput, ordencompracompraUncheckedUpdateWithoutOrdencompraInput>
  }

  export type ordencompracompraUpdateManyWithWhereWithoutOrdencompraInput = {
    where: ordencompracompraScalarWhereInput
    data: XOR<ordencompracompraUpdateManyMutationInput, ordencompracompraUncheckedUpdateManyWithoutOrdencompraInput>
  }

  export type compraCreateWithoutOrdencompracompraInput = {
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
    proveedor?: proveedorCreateNestedOneWithoutCompraInput
    detallecompra?: detallecompraCreateNestedManyWithoutCompraInput
  }

  export type compraUncheckedCreateWithoutOrdencompracompraInput = {
    id?: number
    proveedor_id?: number | null
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
    detallecompra?: detallecompraUncheckedCreateNestedManyWithoutCompraInput
  }

  export type compraCreateOrConnectWithoutOrdencompracompraInput = {
    where: compraWhereUniqueInput
    create: XOR<compraCreateWithoutOrdencompracompraInput, compraUncheckedCreateWithoutOrdencompracompraInput>
  }

  export type ordencompraCreateWithoutOrdencompracompraInput = {
    fecha: Date | string
    observaciones?: string | null
    detalleordencompra?: detalleordencompraCreateNestedManyWithoutOrdencompraInput
    estadoordencompra?: estadoordencompraCreateNestedOneWithoutOrdencompraInput
    proveedor?: proveedorCreateNestedOneWithoutOrdencompraInput
  }

  export type ordencompraUncheckedCreateWithoutOrdencompracompraInput = {
    id?: number
    proveedor_id?: number | null
    fecha: Date | string
    estado_id?: number | null
    observaciones?: string | null
    detalleordencompra?: detalleordencompraUncheckedCreateNestedManyWithoutOrdencompraInput
  }

  export type ordencompraCreateOrConnectWithoutOrdencompracompraInput = {
    where: ordencompraWhereUniqueInput
    create: XOR<ordencompraCreateWithoutOrdencompracompraInput, ordencompraUncheckedCreateWithoutOrdencompracompraInput>
  }

  export type compraUpsertWithoutOrdencompracompraInput = {
    update: XOR<compraUpdateWithoutOrdencompracompraInput, compraUncheckedUpdateWithoutOrdencompracompraInput>
    create: XOR<compraCreateWithoutOrdencompracompraInput, compraUncheckedCreateWithoutOrdencompracompraInput>
    where?: compraWhereInput
  }

  export type compraUpdateToOneWithWhereWithoutOrdencompracompraInput = {
    where?: compraWhereInput
    data: XOR<compraUpdateWithoutOrdencompracompraInput, compraUncheckedUpdateWithoutOrdencompracompraInput>
  }

  export type compraUpdateWithoutOrdencompracompraInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    proveedor?: proveedorUpdateOneWithoutCompraNestedInput
    detallecompra?: detallecompraUpdateManyWithoutCompraNestedInput
  }

  export type compraUncheckedUpdateWithoutOrdencompracompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    detallecompra?: detallecompraUncheckedUpdateManyWithoutCompraNestedInput
  }

  export type ordencompraUpsertWithoutOrdencompracompraInput = {
    update: XOR<ordencompraUpdateWithoutOrdencompracompraInput, ordencompraUncheckedUpdateWithoutOrdencompracompraInput>
    create: XOR<ordencompraCreateWithoutOrdencompracompraInput, ordencompraUncheckedCreateWithoutOrdencompracompraInput>
    where?: ordencompraWhereInput
  }

  export type ordencompraUpdateToOneWithWhereWithoutOrdencompracompraInput = {
    where?: ordencompraWhereInput
    data: XOR<ordencompraUpdateWithoutOrdencompracompraInput, ordencompraUncheckedUpdateWithoutOrdencompracompraInput>
  }

  export type ordencompraUpdateWithoutOrdencompracompraInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    detalleordencompra?: detalleordencompraUpdateManyWithoutOrdencompraNestedInput
    estadoordencompra?: estadoordencompraUpdateOneWithoutOrdencompraNestedInput
    proveedor?: proveedorUpdateOneWithoutOrdencompraNestedInput
  }

  export type ordencompraUncheckedUpdateWithoutOrdencompracompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    detalleordencompra?: detalleordencompraUncheckedUpdateManyWithoutOrdencompraNestedInput
  }

  export type insumoproduccionCreateWithoutOrdenproduccionInput = {
    cantidad: number
    producto?: productoCreateNestedOneWithoutInsumoproduccionInput
  }

  export type insumoproduccionUncheckedCreateWithoutOrdenproduccionInput = {
    id?: number
    producto_id?: number | null
    cantidad: number
  }

  export type insumoproduccionCreateOrConnectWithoutOrdenproduccionInput = {
    where: insumoproduccionWhereUniqueInput
    create: XOR<insumoproduccionCreateWithoutOrdenproduccionInput, insumoproduccionUncheckedCreateWithoutOrdenproduccionInput>
  }

  export type insumoproduccionCreateManyOrdenproduccionInputEnvelope = {
    data: insumoproduccionCreateManyOrdenproduccionInput | insumoproduccionCreateManyOrdenproduccionInput[]
    skipDuplicates?: boolean
  }

  export type estadoproduccionCreateWithoutOrdenproduccionInput = {
    nombre: string
  }

  export type estadoproduccionUncheckedCreateWithoutOrdenproduccionInput = {
    id?: number
    nombre: string
  }

  export type estadoproduccionCreateOrConnectWithoutOrdenproduccionInput = {
    where: estadoproduccionWhereUniqueInput
    create: XOR<estadoproduccionCreateWithoutOrdenproduccionInput, estadoproduccionUncheckedCreateWithoutOrdenproduccionInput>
  }

  export type productoCreateWithoutOrdenproduccionInput = {
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraCreateNestedManyWithoutProductoInput
    detalleordencompra?: detalleordencompraCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoUncheckedCreateWithoutOrdenproduccionInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraUncheckedCreateNestedManyWithoutProductoInput
    detalleordencompra?: detalleordencompraUncheckedCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionUncheckedCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioUncheckedCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoCreateOrConnectWithoutOrdenproduccionInput = {
    where: productoWhereUniqueInput
    create: XOR<productoCreateWithoutOrdenproduccionInput, productoUncheckedCreateWithoutOrdenproduccionInput>
  }

  export type productoterminadoCreateWithoutOrdenproduccionInput = {
    cantidad: number
    lote?: loteCreateNestedOneWithoutProductoterminadoInput
  }

  export type productoterminadoUncheckedCreateWithoutOrdenproduccionInput = {
    id?: number
    lote_id?: number | null
    cantidad: number
  }

  export type productoterminadoCreateOrConnectWithoutOrdenproduccionInput = {
    where: productoterminadoWhereUniqueInput
    create: XOR<productoterminadoCreateWithoutOrdenproduccionInput, productoterminadoUncheckedCreateWithoutOrdenproduccionInput>
  }

  export type productoterminadoCreateManyOrdenproduccionInputEnvelope = {
    data: productoterminadoCreateManyOrdenproduccionInput | productoterminadoCreateManyOrdenproduccionInput[]
    skipDuplicates?: boolean
  }

  export type insumoproduccionUpsertWithWhereUniqueWithoutOrdenproduccionInput = {
    where: insumoproduccionWhereUniqueInput
    update: XOR<insumoproduccionUpdateWithoutOrdenproduccionInput, insumoproduccionUncheckedUpdateWithoutOrdenproduccionInput>
    create: XOR<insumoproduccionCreateWithoutOrdenproduccionInput, insumoproduccionUncheckedCreateWithoutOrdenproduccionInput>
  }

  export type insumoproduccionUpdateWithWhereUniqueWithoutOrdenproduccionInput = {
    where: insumoproduccionWhereUniqueInput
    data: XOR<insumoproduccionUpdateWithoutOrdenproduccionInput, insumoproduccionUncheckedUpdateWithoutOrdenproduccionInput>
  }

  export type insumoproduccionUpdateManyWithWhereWithoutOrdenproduccionInput = {
    where: insumoproduccionScalarWhereInput
    data: XOR<insumoproduccionUpdateManyMutationInput, insumoproduccionUncheckedUpdateManyWithoutOrdenproduccionInput>
  }

  export type insumoproduccionScalarWhereInput = {
    AND?: insumoproduccionScalarWhereInput | insumoproduccionScalarWhereInput[]
    OR?: insumoproduccionScalarWhereInput[]
    NOT?: insumoproduccionScalarWhereInput | insumoproduccionScalarWhereInput[]
    id?: IntFilter<"insumoproduccion"> | number
    orden_id?: IntNullableFilter<"insumoproduccion"> | number | null
    producto_id?: IntNullableFilter<"insumoproduccion"> | number | null
    cantidad?: IntFilter<"insumoproduccion"> | number
  }

  export type estadoproduccionUpsertWithoutOrdenproduccionInput = {
    update: XOR<estadoproduccionUpdateWithoutOrdenproduccionInput, estadoproduccionUncheckedUpdateWithoutOrdenproduccionInput>
    create: XOR<estadoproduccionCreateWithoutOrdenproduccionInput, estadoproduccionUncheckedCreateWithoutOrdenproduccionInput>
    where?: estadoproduccionWhereInput
  }

  export type estadoproduccionUpdateToOneWithWhereWithoutOrdenproduccionInput = {
    where?: estadoproduccionWhereInput
    data: XOR<estadoproduccionUpdateWithoutOrdenproduccionInput, estadoproduccionUncheckedUpdateWithoutOrdenproduccionInput>
  }

  export type estadoproduccionUpdateWithoutOrdenproduccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type estadoproduccionUncheckedUpdateWithoutOrdenproduccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type productoUpsertWithoutOrdenproduccionInput = {
    update: XOR<productoUpdateWithoutOrdenproduccionInput, productoUncheckedUpdateWithoutOrdenproduccionInput>
    create: XOR<productoCreateWithoutOrdenproduccionInput, productoUncheckedCreateWithoutOrdenproduccionInput>
    where?: productoWhereInput
  }

  export type productoUpdateToOneWithWhereWithoutOrdenproduccionInput = {
    where?: productoWhereInput
    data: XOR<productoUpdateWithoutOrdenproduccionInput, productoUncheckedUpdateWithoutOrdenproduccionInput>
  }

  export type productoUpdateWithoutOrdenproduccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUpdateManyWithoutProductoNestedInput
    detalleordencompra?: detalleordencompraUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type productoUncheckedUpdateWithoutOrdenproduccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUncheckedUpdateManyWithoutProductoNestedInput
    detalleordencompra?: detalleordencompraUncheckedUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUncheckedUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUncheckedUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUncheckedUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type productoterminadoUpsertWithWhereUniqueWithoutOrdenproduccionInput = {
    where: productoterminadoWhereUniqueInput
    update: XOR<productoterminadoUpdateWithoutOrdenproduccionInput, productoterminadoUncheckedUpdateWithoutOrdenproduccionInput>
    create: XOR<productoterminadoCreateWithoutOrdenproduccionInput, productoterminadoUncheckedCreateWithoutOrdenproduccionInput>
  }

  export type productoterminadoUpdateWithWhereUniqueWithoutOrdenproduccionInput = {
    where: productoterminadoWhereUniqueInput
    data: XOR<productoterminadoUpdateWithoutOrdenproduccionInput, productoterminadoUncheckedUpdateWithoutOrdenproduccionInput>
  }

  export type productoterminadoUpdateManyWithWhereWithoutOrdenproduccionInput = {
    where: productoterminadoScalarWhereInput
    data: XOR<productoterminadoUpdateManyMutationInput, productoterminadoUncheckedUpdateManyWithoutOrdenproduccionInput>
  }

  export type rolCreateWithoutPermisoInput = {
    nombre: string
    usuario?: usuarioCreateNestedManyWithoutRolInput
  }

  export type rolUncheckedCreateWithoutPermisoInput = {
    id?: number
    nombre: string
    usuario?: usuarioUncheckedCreateNestedManyWithoutRolInput
  }

  export type rolCreateOrConnectWithoutPermisoInput = {
    where: rolWhereUniqueInput
    create: XOR<rolCreateWithoutPermisoInput, rolUncheckedCreateWithoutPermisoInput>
  }

  export type screenCreateWithoutPermisoInput = {
    nombre: string
    descripcion?: string | null
  }

  export type screenUncheckedCreateWithoutPermisoInput = {
    id?: number
    nombre: string
    descripcion?: string | null
  }

  export type screenCreateOrConnectWithoutPermisoInput = {
    where: screenWhereUniqueInput
    create: XOR<screenCreateWithoutPermisoInput, screenUncheckedCreateWithoutPermisoInput>
  }

  export type rolUpsertWithoutPermisoInput = {
    update: XOR<rolUpdateWithoutPermisoInput, rolUncheckedUpdateWithoutPermisoInput>
    create: XOR<rolCreateWithoutPermisoInput, rolUncheckedCreateWithoutPermisoInput>
    where?: rolWhereInput
  }

  export type rolUpdateToOneWithWhereWithoutPermisoInput = {
    where?: rolWhereInput
    data: XOR<rolUpdateWithoutPermisoInput, rolUncheckedUpdateWithoutPermisoInput>
  }

  export type rolUpdateWithoutPermisoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: usuarioUpdateManyWithoutRolNestedInput
  }

  export type rolUncheckedUpdateWithoutPermisoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    usuario?: usuarioUncheckedUpdateManyWithoutRolNestedInput
  }

  export type screenUpsertWithoutPermisoInput = {
    update: XOR<screenUpdateWithoutPermisoInput, screenUncheckedUpdateWithoutPermisoInput>
    create: XOR<screenCreateWithoutPermisoInput, screenUncheckedCreateWithoutPermisoInput>
    where?: screenWhereInput
  }

  export type screenUpdateToOneWithWhereWithoutPermisoInput = {
    where?: screenWhereInput
    data: XOR<screenUpdateWithoutPermisoInput, screenUncheckedUpdateWithoutPermisoInput>
  }

  export type screenUpdateWithoutPermisoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type screenUncheckedUpdateWithoutPermisoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type codigobarraCreateWithoutProductoInput = {
    codigo: string
    detalleventa?: detalleventaCreateNestedManyWithoutCodigobarraInput
    lote?: loteCreateNestedManyWithoutCodigobarraInput
  }

  export type codigobarraUncheckedCreateWithoutProductoInput = {
    id?: number
    codigo: string
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutCodigobarraInput
    lote?: loteUncheckedCreateNestedManyWithoutCodigobarraInput
  }

  export type codigobarraCreateOrConnectWithoutProductoInput = {
    where: codigobarraWhereUniqueInput
    create: XOR<codigobarraCreateWithoutProductoInput, codigobarraUncheckedCreateWithoutProductoInput>
  }

  export type codigobarraCreateManyProductoInputEnvelope = {
    data: codigobarraCreateManyProductoInput | codigobarraCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type detalleordencompraCreateWithoutProductoInput = {
    cantidad_solicitada: number
    precio_estimado?: Decimal | DecimalJsLike | number | string | null
    ordencompra?: ordencompraCreateNestedOneWithoutDetalleordencompraInput
  }

  export type detalleordencompraUncheckedCreateWithoutProductoInput = {
    id?: number
    orden_id?: number | null
    cantidad_solicitada: number
    precio_estimado?: Decimal | DecimalJsLike | number | string | null
  }

  export type detalleordencompraCreateOrConnectWithoutProductoInput = {
    where: detalleordencompraWhereUniqueInput
    create: XOR<detalleordencompraCreateWithoutProductoInput, detalleordencompraUncheckedCreateWithoutProductoInput>
  }

  export type detalleordencompraCreateManyProductoInputEnvelope = {
    data: detalleordencompraCreateManyProductoInput | detalleordencompraCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type detalleventaCreateWithoutProductoInput = {
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    codigobarra?: codigobarraCreateNestedOneWithoutDetalleventaInput
    tipolistaprecio?: tipolistaprecioCreateNestedOneWithoutDetalleventaInput
    tipoventa?: tipoventaCreateNestedOneWithoutDetalleventaInput
    venta?: ventaCreateNestedOneWithoutDetalleventaInput
  }

  export type detalleventaUncheckedCreateWithoutProductoInput = {
    id?: number
    venta_id?: number | null
    codigo_barra_id?: number | null
    tipo_venta_id?: number | null
    tipo_lista_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type detalleventaCreateOrConnectWithoutProductoInput = {
    where: detalleventaWhereUniqueInput
    create: XOR<detalleventaCreateWithoutProductoInput, detalleventaUncheckedCreateWithoutProductoInput>
  }

  export type detalleventaCreateManyProductoInputEnvelope = {
    data: detalleventaCreateManyProductoInput | detalleventaCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type insumoproduccionCreateWithoutProductoInput = {
    cantidad: number
    ordenproduccion?: ordenproduccionCreateNestedOneWithoutInsumoproduccionInput
  }

  export type insumoproduccionUncheckedCreateWithoutProductoInput = {
    id?: number
    orden_id?: number | null
    cantidad: number
  }

  export type insumoproduccionCreateOrConnectWithoutProductoInput = {
    where: insumoproduccionWhereUniqueInput
    create: XOR<insumoproduccionCreateWithoutProductoInput, insumoproduccionUncheckedCreateWithoutProductoInput>
  }

  export type insumoproduccionCreateManyProductoInputEnvelope = {
    data: insumoproduccionCreateManyProductoInput | insumoproduccionCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type listaprecioCreateWithoutProductoInput = {
    precio: Decimal | DecimalJsLike | number | string
    sucursal?: sucursalCreateNestedOneWithoutListaprecioInput
    tipolistaprecio?: tipolistaprecioCreateNestedOneWithoutListaprecioInput
  }

  export type listaprecioUncheckedCreateWithoutProductoInput = {
    id?: number
    sucursal_id?: number | null
    tipo_lista_id?: number | null
    precio: Decimal | DecimalJsLike | number | string
  }

  export type listaprecioCreateOrConnectWithoutProductoInput = {
    where: listaprecioWhereUniqueInput
    create: XOR<listaprecioCreateWithoutProductoInput, listaprecioUncheckedCreateWithoutProductoInput>
  }

  export type listaprecioCreateManyProductoInputEnvelope = {
    data: listaprecioCreateManyProductoInput | listaprecioCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type ordenproduccionCreateWithoutProductoInput = {
    fecha_inicio: Date | string
    fecha_fin?: Date | string | null
    insumoproduccion?: insumoproduccionCreateNestedManyWithoutOrdenproduccionInput
    estadoproduccion?: estadoproduccionCreateNestedOneWithoutOrdenproduccionInput
    productoterminado?: productoterminadoCreateNestedManyWithoutOrdenproduccionInput
  }

  export type ordenproduccionUncheckedCreateWithoutProductoInput = {
    id?: number
    fecha_inicio: Date | string
    fecha_fin?: Date | string | null
    estado_id?: number | null
    insumoproduccion?: insumoproduccionUncheckedCreateNestedManyWithoutOrdenproduccionInput
    productoterminado?: productoterminadoUncheckedCreateNestedManyWithoutOrdenproduccionInput
  }

  export type ordenproduccionCreateOrConnectWithoutProductoInput = {
    where: ordenproduccionWhereUniqueInput
    create: XOR<ordenproduccionCreateWithoutProductoInput, ordenproduccionUncheckedCreateWithoutProductoInput>
  }

  export type ordenproduccionCreateManyProductoInputEnvelope = {
    data: ordenproduccionCreateManyProductoInput | ordenproduccionCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type productocomboCreateWithoutProducto_productocombo_combo_idToproductoInput = {
    cantidad: number
    producto_productocombo_producto_idToproducto?: productoCreateNestedOneWithoutProductocombo_productocombo_producto_idToproductoInput
  }

  export type productocomboUncheckedCreateWithoutProducto_productocombo_combo_idToproductoInput = {
    id?: number
    producto_id?: number | null
    cantidad: number
  }

  export type productocomboCreateOrConnectWithoutProducto_productocombo_combo_idToproductoInput = {
    where: productocomboWhereUniqueInput
    create: XOR<productocomboCreateWithoutProducto_productocombo_combo_idToproductoInput, productocomboUncheckedCreateWithoutProducto_productocombo_combo_idToproductoInput>
  }

  export type productocomboCreateManyProducto_productocombo_combo_idToproductoInputEnvelope = {
    data: productocomboCreateManyProducto_productocombo_combo_idToproductoInput | productocomboCreateManyProducto_productocombo_combo_idToproductoInput[]
    skipDuplicates?: boolean
  }

  export type productocomboCreateWithoutProducto_productocombo_producto_idToproductoInput = {
    cantidad: number
    producto_productocombo_combo_idToproducto?: productoCreateNestedOneWithoutProductocombo_productocombo_combo_idToproductoInput
  }

  export type productocomboUncheckedCreateWithoutProducto_productocombo_producto_idToproductoInput = {
    id?: number
    combo_id?: number | null
    cantidad: number
  }

  export type productocomboCreateOrConnectWithoutProducto_productocombo_producto_idToproductoInput = {
    where: productocomboWhereUniqueInput
    create: XOR<productocomboCreateWithoutProducto_productocombo_producto_idToproductoInput, productocomboUncheckedCreateWithoutProducto_productocombo_producto_idToproductoInput>
  }

  export type productocomboCreateManyProducto_productocombo_producto_idToproductoInputEnvelope = {
    data: productocomboCreateManyProducto_productocombo_producto_idToproductoInput | productocomboCreateManyProducto_productocombo_producto_idToproductoInput[]
    skipDuplicates?: boolean
  }

  export type codigobarraUpsertWithWhereUniqueWithoutProductoInput = {
    where: codigobarraWhereUniqueInput
    update: XOR<codigobarraUpdateWithoutProductoInput, codigobarraUncheckedUpdateWithoutProductoInput>
    create: XOR<codigobarraCreateWithoutProductoInput, codigobarraUncheckedCreateWithoutProductoInput>
  }

  export type codigobarraUpdateWithWhereUniqueWithoutProductoInput = {
    where: codigobarraWhereUniqueInput
    data: XOR<codigobarraUpdateWithoutProductoInput, codigobarraUncheckedUpdateWithoutProductoInput>
  }

  export type codigobarraUpdateManyWithWhereWithoutProductoInput = {
    where: codigobarraScalarWhereInput
    data: XOR<codigobarraUpdateManyMutationInput, codigobarraUncheckedUpdateManyWithoutProductoInput>
  }

  export type codigobarraScalarWhereInput = {
    AND?: codigobarraScalarWhereInput | codigobarraScalarWhereInput[]
    OR?: codigobarraScalarWhereInput[]
    NOT?: codigobarraScalarWhereInput | codigobarraScalarWhereInput[]
    id?: IntFilter<"codigobarra"> | number
    producto_id?: IntNullableFilter<"codigobarra"> | number | null
    codigo?: StringFilter<"codigobarra"> | string
  }

  export type detalleordencompraUpsertWithWhereUniqueWithoutProductoInput = {
    where: detalleordencompraWhereUniqueInput
    update: XOR<detalleordencompraUpdateWithoutProductoInput, detalleordencompraUncheckedUpdateWithoutProductoInput>
    create: XOR<detalleordencompraCreateWithoutProductoInput, detalleordencompraUncheckedCreateWithoutProductoInput>
  }

  export type detalleordencompraUpdateWithWhereUniqueWithoutProductoInput = {
    where: detalleordencompraWhereUniqueInput
    data: XOR<detalleordencompraUpdateWithoutProductoInput, detalleordencompraUncheckedUpdateWithoutProductoInput>
  }

  export type detalleordencompraUpdateManyWithWhereWithoutProductoInput = {
    where: detalleordencompraScalarWhereInput
    data: XOR<detalleordencompraUpdateManyMutationInput, detalleordencompraUncheckedUpdateManyWithoutProductoInput>
  }

  export type detalleventaUpsertWithWhereUniqueWithoutProductoInput = {
    where: detalleventaWhereUniqueInput
    update: XOR<detalleventaUpdateWithoutProductoInput, detalleventaUncheckedUpdateWithoutProductoInput>
    create: XOR<detalleventaCreateWithoutProductoInput, detalleventaUncheckedCreateWithoutProductoInput>
  }

  export type detalleventaUpdateWithWhereUniqueWithoutProductoInput = {
    where: detalleventaWhereUniqueInput
    data: XOR<detalleventaUpdateWithoutProductoInput, detalleventaUncheckedUpdateWithoutProductoInput>
  }

  export type detalleventaUpdateManyWithWhereWithoutProductoInput = {
    where: detalleventaScalarWhereInput
    data: XOR<detalleventaUpdateManyMutationInput, detalleventaUncheckedUpdateManyWithoutProductoInput>
  }

  export type insumoproduccionUpsertWithWhereUniqueWithoutProductoInput = {
    where: insumoproduccionWhereUniqueInput
    update: XOR<insumoproduccionUpdateWithoutProductoInput, insumoproduccionUncheckedUpdateWithoutProductoInput>
    create: XOR<insumoproduccionCreateWithoutProductoInput, insumoproduccionUncheckedCreateWithoutProductoInput>
  }

  export type insumoproduccionUpdateWithWhereUniqueWithoutProductoInput = {
    where: insumoproduccionWhereUniqueInput
    data: XOR<insumoproduccionUpdateWithoutProductoInput, insumoproduccionUncheckedUpdateWithoutProductoInput>
  }

  export type insumoproduccionUpdateManyWithWhereWithoutProductoInput = {
    where: insumoproduccionScalarWhereInput
    data: XOR<insumoproduccionUpdateManyMutationInput, insumoproduccionUncheckedUpdateManyWithoutProductoInput>
  }

  export type listaprecioUpsertWithWhereUniqueWithoutProductoInput = {
    where: listaprecioWhereUniqueInput
    update: XOR<listaprecioUpdateWithoutProductoInput, listaprecioUncheckedUpdateWithoutProductoInput>
    create: XOR<listaprecioCreateWithoutProductoInput, listaprecioUncheckedCreateWithoutProductoInput>
  }

  export type listaprecioUpdateWithWhereUniqueWithoutProductoInput = {
    where: listaprecioWhereUniqueInput
    data: XOR<listaprecioUpdateWithoutProductoInput, listaprecioUncheckedUpdateWithoutProductoInput>
  }

  export type listaprecioUpdateManyWithWhereWithoutProductoInput = {
    where: listaprecioScalarWhereInput
    data: XOR<listaprecioUpdateManyMutationInput, listaprecioUncheckedUpdateManyWithoutProductoInput>
  }

  export type listaprecioScalarWhereInput = {
    AND?: listaprecioScalarWhereInput | listaprecioScalarWhereInput[]
    OR?: listaprecioScalarWhereInput[]
    NOT?: listaprecioScalarWhereInput | listaprecioScalarWhereInput[]
    id?: IntFilter<"listaprecio"> | number
    producto_id?: IntNullableFilter<"listaprecio"> | number | null
    sucursal_id?: IntNullableFilter<"listaprecio"> | number | null
    tipo_lista_id?: IntNullableFilter<"listaprecio"> | number | null
    precio?: DecimalFilter<"listaprecio"> | Decimal | DecimalJsLike | number | string
  }

  export type ordenproduccionUpsertWithWhereUniqueWithoutProductoInput = {
    where: ordenproduccionWhereUniqueInput
    update: XOR<ordenproduccionUpdateWithoutProductoInput, ordenproduccionUncheckedUpdateWithoutProductoInput>
    create: XOR<ordenproduccionCreateWithoutProductoInput, ordenproduccionUncheckedCreateWithoutProductoInput>
  }

  export type ordenproduccionUpdateWithWhereUniqueWithoutProductoInput = {
    where: ordenproduccionWhereUniqueInput
    data: XOR<ordenproduccionUpdateWithoutProductoInput, ordenproduccionUncheckedUpdateWithoutProductoInput>
  }

  export type ordenproduccionUpdateManyWithWhereWithoutProductoInput = {
    where: ordenproduccionScalarWhereInput
    data: XOR<ordenproduccionUpdateManyMutationInput, ordenproduccionUncheckedUpdateManyWithoutProductoInput>
  }

  export type productocomboUpsertWithWhereUniqueWithoutProducto_productocombo_combo_idToproductoInput = {
    where: productocomboWhereUniqueInput
    update: XOR<productocomboUpdateWithoutProducto_productocombo_combo_idToproductoInput, productocomboUncheckedUpdateWithoutProducto_productocombo_combo_idToproductoInput>
    create: XOR<productocomboCreateWithoutProducto_productocombo_combo_idToproductoInput, productocomboUncheckedCreateWithoutProducto_productocombo_combo_idToproductoInput>
  }

  export type productocomboUpdateWithWhereUniqueWithoutProducto_productocombo_combo_idToproductoInput = {
    where: productocomboWhereUniqueInput
    data: XOR<productocomboUpdateWithoutProducto_productocombo_combo_idToproductoInput, productocomboUncheckedUpdateWithoutProducto_productocombo_combo_idToproductoInput>
  }

  export type productocomboUpdateManyWithWhereWithoutProducto_productocombo_combo_idToproductoInput = {
    where: productocomboScalarWhereInput
    data: XOR<productocomboUpdateManyMutationInput, productocomboUncheckedUpdateManyWithoutProducto_productocombo_combo_idToproductoInput>
  }

  export type productocomboScalarWhereInput = {
    AND?: productocomboScalarWhereInput | productocomboScalarWhereInput[]
    OR?: productocomboScalarWhereInput[]
    NOT?: productocomboScalarWhereInput | productocomboScalarWhereInput[]
    id?: IntFilter<"productocombo"> | number
    combo_id?: IntNullableFilter<"productocombo"> | number | null
    producto_id?: IntNullableFilter<"productocombo"> | number | null
    cantidad?: IntFilter<"productocombo"> | number
  }

  export type productocomboUpsertWithWhereUniqueWithoutProducto_productocombo_producto_idToproductoInput = {
    where: productocomboWhereUniqueInput
    update: XOR<productocomboUpdateWithoutProducto_productocombo_producto_idToproductoInput, productocomboUncheckedUpdateWithoutProducto_productocombo_producto_idToproductoInput>
    create: XOR<productocomboCreateWithoutProducto_productocombo_producto_idToproductoInput, productocomboUncheckedCreateWithoutProducto_productocombo_producto_idToproductoInput>
  }

  export type productocomboUpdateWithWhereUniqueWithoutProducto_productocombo_producto_idToproductoInput = {
    where: productocomboWhereUniqueInput
    data: XOR<productocomboUpdateWithoutProducto_productocombo_producto_idToproductoInput, productocomboUncheckedUpdateWithoutProducto_productocombo_producto_idToproductoInput>
  }

  export type productocomboUpdateManyWithWhereWithoutProducto_productocombo_producto_idToproductoInput = {
    where: productocomboScalarWhereInput
    data: XOR<productocomboUpdateManyMutationInput, productocomboUncheckedUpdateManyWithoutProducto_productocombo_producto_idToproductoInput>
  }

  export type productoCreateWithoutProductocombo_productocombo_combo_idToproductoInput = {
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraCreateNestedManyWithoutProductoInput
    detalleordencompra?: detalleordencompraCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionCreateNestedManyWithoutProductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoUncheckedCreateWithoutProductocombo_productocombo_combo_idToproductoInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraUncheckedCreateNestedManyWithoutProductoInput
    detalleordencompra?: detalleordencompraUncheckedCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionUncheckedCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioUncheckedCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionUncheckedCreateNestedManyWithoutProductoInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_producto_idToproductoInput
  }

  export type productoCreateOrConnectWithoutProductocombo_productocombo_combo_idToproductoInput = {
    where: productoWhereUniqueInput
    create: XOR<productoCreateWithoutProductocombo_productocombo_combo_idToproductoInput, productoUncheckedCreateWithoutProductocombo_productocombo_combo_idToproductoInput>
  }

  export type productoCreateWithoutProductocombo_productocombo_producto_idToproductoInput = {
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraCreateNestedManyWithoutProductoInput
    detalleordencompra?: detalleordencompraCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
  }

  export type productoUncheckedCreateWithoutProductocombo_productocombo_producto_idToproductoInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    es_combo?: boolean | null
    stock_minimo?: number | null
    codigobarra?: codigobarraUncheckedCreateNestedManyWithoutProductoInput
    detalleordencompra?: detalleordencompraUncheckedCreateNestedManyWithoutProductoInput
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutProductoInput
    insumoproduccion?: insumoproduccionUncheckedCreateNestedManyWithoutProductoInput
    listaprecio?: listaprecioUncheckedCreateNestedManyWithoutProductoInput
    ordenproduccion?: ordenproduccionUncheckedCreateNestedManyWithoutProductoInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedCreateNestedManyWithoutProducto_productocombo_combo_idToproductoInput
  }

  export type productoCreateOrConnectWithoutProductocombo_productocombo_producto_idToproductoInput = {
    where: productoWhereUniqueInput
    create: XOR<productoCreateWithoutProductocombo_productocombo_producto_idToproductoInput, productoUncheckedCreateWithoutProductocombo_productocombo_producto_idToproductoInput>
  }

  export type productoUpsertWithoutProductocombo_productocombo_combo_idToproductoInput = {
    update: XOR<productoUpdateWithoutProductocombo_productocombo_combo_idToproductoInput, productoUncheckedUpdateWithoutProductocombo_productocombo_combo_idToproductoInput>
    create: XOR<productoCreateWithoutProductocombo_productocombo_combo_idToproductoInput, productoUncheckedCreateWithoutProductocombo_productocombo_combo_idToproductoInput>
    where?: productoWhereInput
  }

  export type productoUpdateToOneWithWhereWithoutProductocombo_productocombo_combo_idToproductoInput = {
    where?: productoWhereInput
    data: XOR<productoUpdateWithoutProductocombo_productocombo_combo_idToproductoInput, productoUncheckedUpdateWithoutProductocombo_productocombo_combo_idToproductoInput>
  }

  export type productoUpdateWithoutProductocombo_productocombo_combo_idToproductoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUpdateManyWithoutProductoNestedInput
    detalleordencompra?: detalleordencompraUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type productoUncheckedUpdateWithoutProductocombo_productocombo_combo_idToproductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUncheckedUpdateManyWithoutProductoNestedInput
    detalleordencompra?: detalleordencompraUncheckedUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUncheckedUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUncheckedUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUncheckedUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUncheckedUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_producto_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_producto_idToproductoNestedInput
  }

  export type productoUpsertWithoutProductocombo_productocombo_producto_idToproductoInput = {
    update: XOR<productoUpdateWithoutProductocombo_productocombo_producto_idToproductoInput, productoUncheckedUpdateWithoutProductocombo_productocombo_producto_idToproductoInput>
    create: XOR<productoCreateWithoutProductocombo_productocombo_producto_idToproductoInput, productoUncheckedCreateWithoutProductocombo_productocombo_producto_idToproductoInput>
    where?: productoWhereInput
  }

  export type productoUpdateToOneWithWhereWithoutProductocombo_productocombo_producto_idToproductoInput = {
    where?: productoWhereInput
    data: XOR<productoUpdateWithoutProductocombo_productocombo_producto_idToproductoInput, productoUncheckedUpdateWithoutProductocombo_productocombo_producto_idToproductoInput>
  }

  export type productoUpdateWithoutProductocombo_productocombo_producto_idToproductoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUpdateManyWithoutProductoNestedInput
    detalleordencompra?: detalleordencompraUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
  }

  export type productoUncheckedUpdateWithoutProductocombo_productocombo_producto_idToproductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    es_combo?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    codigobarra?: codigobarraUncheckedUpdateManyWithoutProductoNestedInput
    detalleordencompra?: detalleordencompraUncheckedUpdateManyWithoutProductoNestedInput
    detalleventa?: detalleventaUncheckedUpdateManyWithoutProductoNestedInput
    insumoproduccion?: insumoproduccionUncheckedUpdateManyWithoutProductoNestedInput
    listaprecio?: listaprecioUncheckedUpdateManyWithoutProductoNestedInput
    ordenproduccion?: ordenproduccionUncheckedUpdateManyWithoutProductoNestedInput
    productocombo_productocombo_combo_idToproducto?: productocomboUncheckedUpdateManyWithoutProducto_productocombo_combo_idToproductoNestedInput
  }

  export type loteCreateWithoutProductoterminadoInput = {
    fecha_vencimiento?: Date | string | null
    cantidad: number
    ubicacion?: string | null
    detallecompra?: detallecompraCreateNestedManyWithoutLoteInput
    codigobarra?: codigobarraCreateNestedOneWithoutLoteInput
  }

  export type loteUncheckedCreateWithoutProductoterminadoInput = {
    id?: number
    codigo_barra_id?: number | null
    fecha_vencimiento?: Date | string | null
    cantidad: number
    ubicacion?: string | null
    detallecompra?: detallecompraUncheckedCreateNestedManyWithoutLoteInput
  }

  export type loteCreateOrConnectWithoutProductoterminadoInput = {
    where: loteWhereUniqueInput
    create: XOR<loteCreateWithoutProductoterminadoInput, loteUncheckedCreateWithoutProductoterminadoInput>
  }

  export type ordenproduccionCreateWithoutProductoterminadoInput = {
    fecha_inicio: Date | string
    fecha_fin?: Date | string | null
    insumoproduccion?: insumoproduccionCreateNestedManyWithoutOrdenproduccionInput
    estadoproduccion?: estadoproduccionCreateNestedOneWithoutOrdenproduccionInput
    producto?: productoCreateNestedOneWithoutOrdenproduccionInput
  }

  export type ordenproduccionUncheckedCreateWithoutProductoterminadoInput = {
    id?: number
    producto_id?: number | null
    fecha_inicio: Date | string
    fecha_fin?: Date | string | null
    estado_id?: number | null
    insumoproduccion?: insumoproduccionUncheckedCreateNestedManyWithoutOrdenproduccionInput
  }

  export type ordenproduccionCreateOrConnectWithoutProductoterminadoInput = {
    where: ordenproduccionWhereUniqueInput
    create: XOR<ordenproduccionCreateWithoutProductoterminadoInput, ordenproduccionUncheckedCreateWithoutProductoterminadoInput>
  }

  export type loteUpsertWithoutProductoterminadoInput = {
    update: XOR<loteUpdateWithoutProductoterminadoInput, loteUncheckedUpdateWithoutProductoterminadoInput>
    create: XOR<loteCreateWithoutProductoterminadoInput, loteUncheckedCreateWithoutProductoterminadoInput>
    where?: loteWhereInput
  }

  export type loteUpdateToOneWithWhereWithoutProductoterminadoInput = {
    where?: loteWhereInput
    data: XOR<loteUpdateWithoutProductoterminadoInput, loteUncheckedUpdateWithoutProductoterminadoInput>
  }

  export type loteUpdateWithoutProductoterminadoInput = {
    fecha_vencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidad?: IntFieldUpdateOperationsInput | number
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    detallecompra?: detallecompraUpdateManyWithoutLoteNestedInput
    codigobarra?: codigobarraUpdateOneWithoutLoteNestedInput
  }

  export type loteUncheckedUpdateWithoutProductoterminadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo_barra_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_vencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidad?: IntFieldUpdateOperationsInput | number
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    detallecompra?: detallecompraUncheckedUpdateManyWithoutLoteNestedInput
  }

  export type ordenproduccionUpsertWithoutProductoterminadoInput = {
    update: XOR<ordenproduccionUpdateWithoutProductoterminadoInput, ordenproduccionUncheckedUpdateWithoutProductoterminadoInput>
    create: XOR<ordenproduccionCreateWithoutProductoterminadoInput, ordenproduccionUncheckedCreateWithoutProductoterminadoInput>
    where?: ordenproduccionWhereInput
  }

  export type ordenproduccionUpdateToOneWithWhereWithoutProductoterminadoInput = {
    where?: ordenproduccionWhereInput
    data: XOR<ordenproduccionUpdateWithoutProductoterminadoInput, ordenproduccionUncheckedUpdateWithoutProductoterminadoInput>
  }

  export type ordenproduccionUpdateWithoutProductoterminadoInput = {
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumoproduccion?: insumoproduccionUpdateManyWithoutOrdenproduccionNestedInput
    estadoproduccion?: estadoproduccionUpdateOneWithoutOrdenproduccionNestedInput
    producto?: productoUpdateOneWithoutOrdenproduccionNestedInput
  }

  export type ordenproduccionUncheckedUpdateWithoutProductoterminadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    insumoproduccion?: insumoproduccionUncheckedUpdateManyWithoutOrdenproduccionNestedInput
  }

  export type compraCreateWithoutProveedorInput = {
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
    detallecompra?: detallecompraCreateNestedManyWithoutCompraInput
    ordencompracompra?: ordencompracompraCreateNestedManyWithoutCompraInput
  }

  export type compraUncheckedCreateWithoutProveedorInput = {
    id?: number
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
    detallecompra?: detallecompraUncheckedCreateNestedManyWithoutCompraInput
    ordencompracompra?: ordencompracompraUncheckedCreateNestedManyWithoutCompraInput
  }

  export type compraCreateOrConnectWithoutProveedorInput = {
    where: compraWhereUniqueInput
    create: XOR<compraCreateWithoutProveedorInput, compraUncheckedCreateWithoutProveedorInput>
  }

  export type compraCreateManyProveedorInputEnvelope = {
    data: compraCreateManyProveedorInput | compraCreateManyProveedorInput[]
    skipDuplicates?: boolean
  }

  export type ordencompraCreateWithoutProveedorInput = {
    fecha: Date | string
    observaciones?: string | null
    detalleordencompra?: detalleordencompraCreateNestedManyWithoutOrdencompraInput
    estadoordencompra?: estadoordencompraCreateNestedOneWithoutOrdencompraInput
    ordencompracompra?: ordencompracompraCreateNestedManyWithoutOrdencompraInput
  }

  export type ordencompraUncheckedCreateWithoutProveedorInput = {
    id?: number
    fecha: Date | string
    estado_id?: number | null
    observaciones?: string | null
    detalleordencompra?: detalleordencompraUncheckedCreateNestedManyWithoutOrdencompraInput
    ordencompracompra?: ordencompracompraUncheckedCreateNestedManyWithoutOrdencompraInput
  }

  export type ordencompraCreateOrConnectWithoutProveedorInput = {
    where: ordencompraWhereUniqueInput
    create: XOR<ordencompraCreateWithoutProveedorInput, ordencompraUncheckedCreateWithoutProveedorInput>
  }

  export type ordencompraCreateManyProveedorInputEnvelope = {
    data: ordencompraCreateManyProveedorInput | ordencompraCreateManyProveedorInput[]
    skipDuplicates?: boolean
  }

  export type compraUpsertWithWhereUniqueWithoutProveedorInput = {
    where: compraWhereUniqueInput
    update: XOR<compraUpdateWithoutProveedorInput, compraUncheckedUpdateWithoutProveedorInput>
    create: XOR<compraCreateWithoutProveedorInput, compraUncheckedCreateWithoutProveedorInput>
  }

  export type compraUpdateWithWhereUniqueWithoutProveedorInput = {
    where: compraWhereUniqueInput
    data: XOR<compraUpdateWithoutProveedorInput, compraUncheckedUpdateWithoutProveedorInput>
  }

  export type compraUpdateManyWithWhereWithoutProveedorInput = {
    where: compraScalarWhereInput
    data: XOR<compraUpdateManyMutationInput, compraUncheckedUpdateManyWithoutProveedorInput>
  }

  export type compraScalarWhereInput = {
    AND?: compraScalarWhereInput | compraScalarWhereInput[]
    OR?: compraScalarWhereInput[]
    NOT?: compraScalarWhereInput | compraScalarWhereInput[]
    id?: IntFilter<"compra"> | number
    proveedor_id?: IntNullableFilter<"compra"> | number | null
    fecha?: DateTimeFilter<"compra"> | Date | string
    total?: DecimalFilter<"compra"> | Decimal | DecimalJsLike | number | string
  }

  export type ordencompraUpsertWithWhereUniqueWithoutProveedorInput = {
    where: ordencompraWhereUniqueInput
    update: XOR<ordencompraUpdateWithoutProveedorInput, ordencompraUncheckedUpdateWithoutProveedorInput>
    create: XOR<ordencompraCreateWithoutProveedorInput, ordencompraUncheckedCreateWithoutProveedorInput>
  }

  export type ordencompraUpdateWithWhereUniqueWithoutProveedorInput = {
    where: ordencompraWhereUniqueInput
    data: XOR<ordencompraUpdateWithoutProveedorInput, ordencompraUncheckedUpdateWithoutProveedorInput>
  }

  export type ordencompraUpdateManyWithWhereWithoutProveedorInput = {
    where: ordencompraScalarWhereInput
    data: XOR<ordencompraUpdateManyMutationInput, ordencompraUncheckedUpdateManyWithoutProveedorInput>
  }

  export type permisoCreateWithoutRolInput = {
    puede_ver?: boolean | null
    puede_crear?: boolean | null
    puede_editar?: boolean | null
    puede_eliminar?: boolean | null
    screen?: screenCreateNestedOneWithoutPermisoInput
  }

  export type permisoUncheckedCreateWithoutRolInput = {
    id?: number
    screen_id?: number | null
    puede_ver?: boolean | null
    puede_crear?: boolean | null
    puede_editar?: boolean | null
    puede_eliminar?: boolean | null
  }

  export type permisoCreateOrConnectWithoutRolInput = {
    where: permisoWhereUniqueInput
    create: XOR<permisoCreateWithoutRolInput, permisoUncheckedCreateWithoutRolInput>
  }

  export type permisoCreateManyRolInputEnvelope = {
    data: permisoCreateManyRolInput | permisoCreateManyRolInput[]
    skipDuplicates?: boolean
  }

  export type usuarioCreateWithoutRolInput = {
    nombre: string
    correo: string
    contrasena: string
    venta?: ventaCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateWithoutRolInput = {
    id?: number
    nombre: string
    correo: string
    contrasena: string
    venta?: ventaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioCreateOrConnectWithoutRolInput = {
    where: usuarioWhereUniqueInput
    create: XOR<usuarioCreateWithoutRolInput, usuarioUncheckedCreateWithoutRolInput>
  }

  export type usuarioCreateManyRolInputEnvelope = {
    data: usuarioCreateManyRolInput | usuarioCreateManyRolInput[]
    skipDuplicates?: boolean
  }

  export type permisoUpsertWithWhereUniqueWithoutRolInput = {
    where: permisoWhereUniqueInput
    update: XOR<permisoUpdateWithoutRolInput, permisoUncheckedUpdateWithoutRolInput>
    create: XOR<permisoCreateWithoutRolInput, permisoUncheckedCreateWithoutRolInput>
  }

  export type permisoUpdateWithWhereUniqueWithoutRolInput = {
    where: permisoWhereUniqueInput
    data: XOR<permisoUpdateWithoutRolInput, permisoUncheckedUpdateWithoutRolInput>
  }

  export type permisoUpdateManyWithWhereWithoutRolInput = {
    where: permisoScalarWhereInput
    data: XOR<permisoUpdateManyMutationInput, permisoUncheckedUpdateManyWithoutRolInput>
  }

  export type permisoScalarWhereInput = {
    AND?: permisoScalarWhereInput | permisoScalarWhereInput[]
    OR?: permisoScalarWhereInput[]
    NOT?: permisoScalarWhereInput | permisoScalarWhereInput[]
    id?: IntFilter<"permiso"> | number
    rol_id?: IntNullableFilter<"permiso"> | number | null
    screen_id?: IntNullableFilter<"permiso"> | number | null
    puede_ver?: BoolNullableFilter<"permiso"> | boolean | null
    puede_crear?: BoolNullableFilter<"permiso"> | boolean | null
    puede_editar?: BoolNullableFilter<"permiso"> | boolean | null
    puede_eliminar?: BoolNullableFilter<"permiso"> | boolean | null
  }

  export type usuarioUpsertWithWhereUniqueWithoutRolInput = {
    where: usuarioWhereUniqueInput
    update: XOR<usuarioUpdateWithoutRolInput, usuarioUncheckedUpdateWithoutRolInput>
    create: XOR<usuarioCreateWithoutRolInput, usuarioUncheckedCreateWithoutRolInput>
  }

  export type usuarioUpdateWithWhereUniqueWithoutRolInput = {
    where: usuarioWhereUniqueInput
    data: XOR<usuarioUpdateWithoutRolInput, usuarioUncheckedUpdateWithoutRolInput>
  }

  export type usuarioUpdateManyWithWhereWithoutRolInput = {
    where: usuarioScalarWhereInput
    data: XOR<usuarioUpdateManyMutationInput, usuarioUncheckedUpdateManyWithoutRolInput>
  }

  export type usuarioScalarWhereInput = {
    AND?: usuarioScalarWhereInput | usuarioScalarWhereInput[]
    OR?: usuarioScalarWhereInput[]
    NOT?: usuarioScalarWhereInput | usuarioScalarWhereInput[]
    id?: IntFilter<"usuario"> | number
    nombre?: StringFilter<"usuario"> | string
    correo?: StringFilter<"usuario"> | string
    contrasena?: StringFilter<"usuario"> | string
    rol_id?: IntNullableFilter<"usuario"> | number | null
  }

  export type permisoCreateWithoutScreenInput = {
    puede_ver?: boolean | null
    puede_crear?: boolean | null
    puede_editar?: boolean | null
    puede_eliminar?: boolean | null
    rol?: rolCreateNestedOneWithoutPermisoInput
  }

  export type permisoUncheckedCreateWithoutScreenInput = {
    id?: number
    rol_id?: number | null
    puede_ver?: boolean | null
    puede_crear?: boolean | null
    puede_editar?: boolean | null
    puede_eliminar?: boolean | null
  }

  export type permisoCreateOrConnectWithoutScreenInput = {
    where: permisoWhereUniqueInput
    create: XOR<permisoCreateWithoutScreenInput, permisoUncheckedCreateWithoutScreenInput>
  }

  export type permisoCreateManyScreenInputEnvelope = {
    data: permisoCreateManyScreenInput | permisoCreateManyScreenInput[]
    skipDuplicates?: boolean
  }

  export type permisoUpsertWithWhereUniqueWithoutScreenInput = {
    where: permisoWhereUniqueInput
    update: XOR<permisoUpdateWithoutScreenInput, permisoUncheckedUpdateWithoutScreenInput>
    create: XOR<permisoCreateWithoutScreenInput, permisoUncheckedCreateWithoutScreenInput>
  }

  export type permisoUpdateWithWhereUniqueWithoutScreenInput = {
    where: permisoWhereUniqueInput
    data: XOR<permisoUpdateWithoutScreenInput, permisoUncheckedUpdateWithoutScreenInput>
  }

  export type permisoUpdateManyWithWhereWithoutScreenInput = {
    where: permisoScalarWhereInput
    data: XOR<permisoUpdateManyMutationInput, permisoUncheckedUpdateManyWithoutScreenInput>
  }

  export type listaprecioCreateWithoutSucursalInput = {
    precio: Decimal | DecimalJsLike | number | string
    producto?: productoCreateNestedOneWithoutListaprecioInput
    tipolistaprecio?: tipolistaprecioCreateNestedOneWithoutListaprecioInput
  }

  export type listaprecioUncheckedCreateWithoutSucursalInput = {
    id?: number
    producto_id?: number | null
    tipo_lista_id?: number | null
    precio: Decimal | DecimalJsLike | number | string
  }

  export type listaprecioCreateOrConnectWithoutSucursalInput = {
    where: listaprecioWhereUniqueInput
    create: XOR<listaprecioCreateWithoutSucursalInput, listaprecioUncheckedCreateWithoutSucursalInput>
  }

  export type listaprecioCreateManySucursalInputEnvelope = {
    data: listaprecioCreateManySucursalInput | listaprecioCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type listaprecioUpsertWithWhereUniqueWithoutSucursalInput = {
    where: listaprecioWhereUniqueInput
    update: XOR<listaprecioUpdateWithoutSucursalInput, listaprecioUncheckedUpdateWithoutSucursalInput>
    create: XOR<listaprecioCreateWithoutSucursalInput, listaprecioUncheckedCreateWithoutSucursalInput>
  }

  export type listaprecioUpdateWithWhereUniqueWithoutSucursalInput = {
    where: listaprecioWhereUniqueInput
    data: XOR<listaprecioUpdateWithoutSucursalInput, listaprecioUncheckedUpdateWithoutSucursalInput>
  }

  export type listaprecioUpdateManyWithWhereWithoutSucursalInput = {
    where: listaprecioScalarWhereInput
    data: XOR<listaprecioUpdateManyMutationInput, listaprecioUncheckedUpdateManyWithoutSucursalInput>
  }

  export type cuentafinancieraCreateWithoutTipocuentaInput = {
    nombre: string
    saldo?: Decimal | DecimalJsLike | number | string | null
    transaccionfinanciera?: transaccionfinancieraCreateNestedManyWithoutCuentafinancieraInput
  }

  export type cuentafinancieraUncheckedCreateWithoutTipocuentaInput = {
    id?: number
    nombre: string
    saldo?: Decimal | DecimalJsLike | number | string | null
    transaccionfinanciera?: transaccionfinancieraUncheckedCreateNestedManyWithoutCuentafinancieraInput
  }

  export type cuentafinancieraCreateOrConnectWithoutTipocuentaInput = {
    where: cuentafinancieraWhereUniqueInput
    create: XOR<cuentafinancieraCreateWithoutTipocuentaInput, cuentafinancieraUncheckedCreateWithoutTipocuentaInput>
  }

  export type cuentafinancieraCreateManyTipocuentaInputEnvelope = {
    data: cuentafinancieraCreateManyTipocuentaInput | cuentafinancieraCreateManyTipocuentaInput[]
    skipDuplicates?: boolean
  }

  export type cuentafinancieraUpsertWithWhereUniqueWithoutTipocuentaInput = {
    where: cuentafinancieraWhereUniqueInput
    update: XOR<cuentafinancieraUpdateWithoutTipocuentaInput, cuentafinancieraUncheckedUpdateWithoutTipocuentaInput>
    create: XOR<cuentafinancieraCreateWithoutTipocuentaInput, cuentafinancieraUncheckedCreateWithoutTipocuentaInput>
  }

  export type cuentafinancieraUpdateWithWhereUniqueWithoutTipocuentaInput = {
    where: cuentafinancieraWhereUniqueInput
    data: XOR<cuentafinancieraUpdateWithoutTipocuentaInput, cuentafinancieraUncheckedUpdateWithoutTipocuentaInput>
  }

  export type cuentafinancieraUpdateManyWithWhereWithoutTipocuentaInput = {
    where: cuentafinancieraScalarWhereInput
    data: XOR<cuentafinancieraUpdateManyMutationInput, cuentafinancieraUncheckedUpdateManyWithoutTipocuentaInput>
  }

  export type cuentafinancieraScalarWhereInput = {
    AND?: cuentafinancieraScalarWhereInput | cuentafinancieraScalarWhereInput[]
    OR?: cuentafinancieraScalarWhereInput[]
    NOT?: cuentafinancieraScalarWhereInput | cuentafinancieraScalarWhereInput[]
    id?: IntFilter<"cuentafinanciera"> | number
    nombre?: StringFilter<"cuentafinanciera"> | string
    tipo_id?: IntNullableFilter<"cuentafinanciera"> | number | null
    saldo?: DecimalNullableFilter<"cuentafinanciera"> | Decimal | DecimalJsLike | number | string | null
  }

  export type detalleventaCreateWithoutTipolistaprecioInput = {
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    codigobarra?: codigobarraCreateNestedOneWithoutDetalleventaInput
    producto?: productoCreateNestedOneWithoutDetalleventaInput
    tipoventa?: tipoventaCreateNestedOneWithoutDetalleventaInput
    venta?: ventaCreateNestedOneWithoutDetalleventaInput
  }

  export type detalleventaUncheckedCreateWithoutTipolistaprecioInput = {
    id?: number
    venta_id?: number | null
    codigo_barra_id?: number | null
    producto_id?: number | null
    tipo_venta_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type detalleventaCreateOrConnectWithoutTipolistaprecioInput = {
    where: detalleventaWhereUniqueInput
    create: XOR<detalleventaCreateWithoutTipolistaprecioInput, detalleventaUncheckedCreateWithoutTipolistaprecioInput>
  }

  export type detalleventaCreateManyTipolistaprecioInputEnvelope = {
    data: detalleventaCreateManyTipolistaprecioInput | detalleventaCreateManyTipolistaprecioInput[]
    skipDuplicates?: boolean
  }

  export type listaprecioCreateWithoutTipolistaprecioInput = {
    precio: Decimal | DecimalJsLike | number | string
    producto?: productoCreateNestedOneWithoutListaprecioInput
    sucursal?: sucursalCreateNestedOneWithoutListaprecioInput
  }

  export type listaprecioUncheckedCreateWithoutTipolistaprecioInput = {
    id?: number
    producto_id?: number | null
    sucursal_id?: number | null
    precio: Decimal | DecimalJsLike | number | string
  }

  export type listaprecioCreateOrConnectWithoutTipolistaprecioInput = {
    where: listaprecioWhereUniqueInput
    create: XOR<listaprecioCreateWithoutTipolistaprecioInput, listaprecioUncheckedCreateWithoutTipolistaprecioInput>
  }

  export type listaprecioCreateManyTipolistaprecioInputEnvelope = {
    data: listaprecioCreateManyTipolistaprecioInput | listaprecioCreateManyTipolistaprecioInput[]
    skipDuplicates?: boolean
  }

  export type detalleventaUpsertWithWhereUniqueWithoutTipolistaprecioInput = {
    where: detalleventaWhereUniqueInput
    update: XOR<detalleventaUpdateWithoutTipolistaprecioInput, detalleventaUncheckedUpdateWithoutTipolistaprecioInput>
    create: XOR<detalleventaCreateWithoutTipolistaprecioInput, detalleventaUncheckedCreateWithoutTipolistaprecioInput>
  }

  export type detalleventaUpdateWithWhereUniqueWithoutTipolistaprecioInput = {
    where: detalleventaWhereUniqueInput
    data: XOR<detalleventaUpdateWithoutTipolistaprecioInput, detalleventaUncheckedUpdateWithoutTipolistaprecioInput>
  }

  export type detalleventaUpdateManyWithWhereWithoutTipolistaprecioInput = {
    where: detalleventaScalarWhereInput
    data: XOR<detalleventaUpdateManyMutationInput, detalleventaUncheckedUpdateManyWithoutTipolistaprecioInput>
  }

  export type listaprecioUpsertWithWhereUniqueWithoutTipolistaprecioInput = {
    where: listaprecioWhereUniqueInput
    update: XOR<listaprecioUpdateWithoutTipolistaprecioInput, listaprecioUncheckedUpdateWithoutTipolistaprecioInput>
    create: XOR<listaprecioCreateWithoutTipolistaprecioInput, listaprecioUncheckedCreateWithoutTipolistaprecioInput>
  }

  export type listaprecioUpdateWithWhereUniqueWithoutTipolistaprecioInput = {
    where: listaprecioWhereUniqueInput
    data: XOR<listaprecioUpdateWithoutTipolistaprecioInput, listaprecioUncheckedUpdateWithoutTipolistaprecioInput>
  }

  export type listaprecioUpdateManyWithWhereWithoutTipolistaprecioInput = {
    where: listaprecioScalarWhereInput
    data: XOR<listaprecioUpdateManyMutationInput, listaprecioUncheckedUpdateManyWithoutTipolistaprecioInput>
  }

  export type transaccionfinancieraCreateWithoutTipotransaccionInput = {
    fecha: Date | string
    monto: Decimal | DecimalJsLike | number | string
    descripcion?: string | null
    cuentafinanciera?: cuentafinancieraCreateNestedOneWithoutTransaccionfinancieraInput
  }

  export type transaccionfinancieraUncheckedCreateWithoutTipotransaccionInput = {
    id?: number
    cuenta_id?: number | null
    fecha: Date | string
    monto: Decimal | DecimalJsLike | number | string
    descripcion?: string | null
  }

  export type transaccionfinancieraCreateOrConnectWithoutTipotransaccionInput = {
    where: transaccionfinancieraWhereUniqueInput
    create: XOR<transaccionfinancieraCreateWithoutTipotransaccionInput, transaccionfinancieraUncheckedCreateWithoutTipotransaccionInput>
  }

  export type transaccionfinancieraCreateManyTipotransaccionInputEnvelope = {
    data: transaccionfinancieraCreateManyTipotransaccionInput | transaccionfinancieraCreateManyTipotransaccionInput[]
    skipDuplicates?: boolean
  }

  export type transaccionfinancieraUpsertWithWhereUniqueWithoutTipotransaccionInput = {
    where: transaccionfinancieraWhereUniqueInput
    update: XOR<transaccionfinancieraUpdateWithoutTipotransaccionInput, transaccionfinancieraUncheckedUpdateWithoutTipotransaccionInput>
    create: XOR<transaccionfinancieraCreateWithoutTipotransaccionInput, transaccionfinancieraUncheckedCreateWithoutTipotransaccionInput>
  }

  export type transaccionfinancieraUpdateWithWhereUniqueWithoutTipotransaccionInput = {
    where: transaccionfinancieraWhereUniqueInput
    data: XOR<transaccionfinancieraUpdateWithoutTipotransaccionInput, transaccionfinancieraUncheckedUpdateWithoutTipotransaccionInput>
  }

  export type transaccionfinancieraUpdateManyWithWhereWithoutTipotransaccionInput = {
    where: transaccionfinancieraScalarWhereInput
    data: XOR<transaccionfinancieraUpdateManyMutationInput, transaccionfinancieraUncheckedUpdateManyWithoutTipotransaccionInput>
  }

  export type detalleventaCreateWithoutTipoventaInput = {
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    codigobarra?: codigobarraCreateNestedOneWithoutDetalleventaInput
    producto?: productoCreateNestedOneWithoutDetalleventaInput
    tipolistaprecio?: tipolistaprecioCreateNestedOneWithoutDetalleventaInput
    venta?: ventaCreateNestedOneWithoutDetalleventaInput
  }

  export type detalleventaUncheckedCreateWithoutTipoventaInput = {
    id?: number
    venta_id?: number | null
    codigo_barra_id?: number | null
    producto_id?: number | null
    tipo_lista_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type detalleventaCreateOrConnectWithoutTipoventaInput = {
    where: detalleventaWhereUniqueInput
    create: XOR<detalleventaCreateWithoutTipoventaInput, detalleventaUncheckedCreateWithoutTipoventaInput>
  }

  export type detalleventaCreateManyTipoventaInputEnvelope = {
    data: detalleventaCreateManyTipoventaInput | detalleventaCreateManyTipoventaInput[]
    skipDuplicates?: boolean
  }

  export type detalleventaUpsertWithWhereUniqueWithoutTipoventaInput = {
    where: detalleventaWhereUniqueInput
    update: XOR<detalleventaUpdateWithoutTipoventaInput, detalleventaUncheckedUpdateWithoutTipoventaInput>
    create: XOR<detalleventaCreateWithoutTipoventaInput, detalleventaUncheckedCreateWithoutTipoventaInput>
  }

  export type detalleventaUpdateWithWhereUniqueWithoutTipoventaInput = {
    where: detalleventaWhereUniqueInput
    data: XOR<detalleventaUpdateWithoutTipoventaInput, detalleventaUncheckedUpdateWithoutTipoventaInput>
  }

  export type detalleventaUpdateManyWithWhereWithoutTipoventaInput = {
    where: detalleventaScalarWhereInput
    data: XOR<detalleventaUpdateManyMutationInput, detalleventaUncheckedUpdateManyWithoutTipoventaInput>
  }

  export type cuentafinancieraCreateWithoutTransaccionfinancieraInput = {
    nombre: string
    saldo?: Decimal | DecimalJsLike | number | string | null
    tipocuenta?: tipocuentaCreateNestedOneWithoutCuentafinancieraInput
  }

  export type cuentafinancieraUncheckedCreateWithoutTransaccionfinancieraInput = {
    id?: number
    nombre: string
    tipo_id?: number | null
    saldo?: Decimal | DecimalJsLike | number | string | null
  }

  export type cuentafinancieraCreateOrConnectWithoutTransaccionfinancieraInput = {
    where: cuentafinancieraWhereUniqueInput
    create: XOR<cuentafinancieraCreateWithoutTransaccionfinancieraInput, cuentafinancieraUncheckedCreateWithoutTransaccionfinancieraInput>
  }

  export type tipotransaccionCreateWithoutTransaccionfinancieraInput = {
    nombre: string
  }

  export type tipotransaccionUncheckedCreateWithoutTransaccionfinancieraInput = {
    id?: number
    nombre: string
  }

  export type tipotransaccionCreateOrConnectWithoutTransaccionfinancieraInput = {
    where: tipotransaccionWhereUniqueInput
    create: XOR<tipotransaccionCreateWithoutTransaccionfinancieraInput, tipotransaccionUncheckedCreateWithoutTransaccionfinancieraInput>
  }

  export type cuentafinancieraUpsertWithoutTransaccionfinancieraInput = {
    update: XOR<cuentafinancieraUpdateWithoutTransaccionfinancieraInput, cuentafinancieraUncheckedUpdateWithoutTransaccionfinancieraInput>
    create: XOR<cuentafinancieraCreateWithoutTransaccionfinancieraInput, cuentafinancieraUncheckedCreateWithoutTransaccionfinancieraInput>
    where?: cuentafinancieraWhereInput
  }

  export type cuentafinancieraUpdateToOneWithWhereWithoutTransaccionfinancieraInput = {
    where?: cuentafinancieraWhereInput
    data: XOR<cuentafinancieraUpdateWithoutTransaccionfinancieraInput, cuentafinancieraUncheckedUpdateWithoutTransaccionfinancieraInput>
  }

  export type cuentafinancieraUpdateWithoutTransaccionfinancieraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    saldo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tipocuenta?: tipocuentaUpdateOneWithoutCuentafinancieraNestedInput
  }

  export type cuentafinancieraUncheckedUpdateWithoutTransaccionfinancieraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_id?: NullableIntFieldUpdateOperationsInput | number | null
    saldo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type tipotransaccionUpsertWithoutTransaccionfinancieraInput = {
    update: XOR<tipotransaccionUpdateWithoutTransaccionfinancieraInput, tipotransaccionUncheckedUpdateWithoutTransaccionfinancieraInput>
    create: XOR<tipotransaccionCreateWithoutTransaccionfinancieraInput, tipotransaccionUncheckedCreateWithoutTransaccionfinancieraInput>
    where?: tipotransaccionWhereInput
  }

  export type tipotransaccionUpdateToOneWithWhereWithoutTransaccionfinancieraInput = {
    where?: tipotransaccionWhereInput
    data: XOR<tipotransaccionUpdateWithoutTransaccionfinancieraInput, tipotransaccionUncheckedUpdateWithoutTransaccionfinancieraInput>
  }

  export type tipotransaccionUpdateWithoutTransaccionfinancieraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type tipotransaccionUncheckedUpdateWithoutTransaccionfinancieraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type rolCreateWithoutUsuarioInput = {
    nombre: string
    permiso?: permisoCreateNestedManyWithoutRolInput
  }

  export type rolUncheckedCreateWithoutUsuarioInput = {
    id?: number
    nombre: string
    permiso?: permisoUncheckedCreateNestedManyWithoutRolInput
  }

  export type rolCreateOrConnectWithoutUsuarioInput = {
    where: rolWhereUniqueInput
    create: XOR<rolCreateWithoutUsuarioInput, rolUncheckedCreateWithoutUsuarioInput>
  }

  export type ventaCreateWithoutUsuarioInput = {
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
    detalleventa?: detalleventaCreateNestedManyWithoutVentaInput
    estadoventa?: estadoventaCreateNestedOneWithoutVentaInput
  }

  export type ventaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    fecha: Date | string
    estado_id?: number | null
    total: Decimal | DecimalJsLike | number | string
    detalleventa?: detalleventaUncheckedCreateNestedManyWithoutVentaInput
  }

  export type ventaCreateOrConnectWithoutUsuarioInput = {
    where: ventaWhereUniqueInput
    create: XOR<ventaCreateWithoutUsuarioInput, ventaUncheckedCreateWithoutUsuarioInput>
  }

  export type ventaCreateManyUsuarioInputEnvelope = {
    data: ventaCreateManyUsuarioInput | ventaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type rolUpsertWithoutUsuarioInput = {
    update: XOR<rolUpdateWithoutUsuarioInput, rolUncheckedUpdateWithoutUsuarioInput>
    create: XOR<rolCreateWithoutUsuarioInput, rolUncheckedCreateWithoutUsuarioInput>
    where?: rolWhereInput
  }

  export type rolUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: rolWhereInput
    data: XOR<rolUpdateWithoutUsuarioInput, rolUncheckedUpdateWithoutUsuarioInput>
  }

  export type rolUpdateWithoutUsuarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    permiso?: permisoUpdateManyWithoutRolNestedInput
  }

  export type rolUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    permiso?: permisoUncheckedUpdateManyWithoutRolNestedInput
  }

  export type ventaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: ventaWhereUniqueInput
    update: XOR<ventaUpdateWithoutUsuarioInput, ventaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ventaCreateWithoutUsuarioInput, ventaUncheckedCreateWithoutUsuarioInput>
  }

  export type ventaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: ventaWhereUniqueInput
    data: XOR<ventaUpdateWithoutUsuarioInput, ventaUncheckedUpdateWithoutUsuarioInput>
  }

  export type ventaUpdateManyWithWhereWithoutUsuarioInput = {
    where: ventaScalarWhereInput
    data: XOR<ventaUpdateManyMutationInput, ventaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type detalleventaCreateWithoutVentaInput = {
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    codigobarra?: codigobarraCreateNestedOneWithoutDetalleventaInput
    producto?: productoCreateNestedOneWithoutDetalleventaInput
    tipolistaprecio?: tipolistaprecioCreateNestedOneWithoutDetalleventaInput
    tipoventa?: tipoventaCreateNestedOneWithoutDetalleventaInput
  }

  export type detalleventaUncheckedCreateWithoutVentaInput = {
    id?: number
    codigo_barra_id?: number | null
    producto_id?: number | null
    tipo_venta_id?: number | null
    tipo_lista_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type detalleventaCreateOrConnectWithoutVentaInput = {
    where: detalleventaWhereUniqueInput
    create: XOR<detalleventaCreateWithoutVentaInput, detalleventaUncheckedCreateWithoutVentaInput>
  }

  export type detalleventaCreateManyVentaInputEnvelope = {
    data: detalleventaCreateManyVentaInput | detalleventaCreateManyVentaInput[]
    skipDuplicates?: boolean
  }

  export type estadoventaCreateWithoutVentaInput = {
    nombre: string
  }

  export type estadoventaUncheckedCreateWithoutVentaInput = {
    id?: number
    nombre: string
  }

  export type estadoventaCreateOrConnectWithoutVentaInput = {
    where: estadoventaWhereUniqueInput
    create: XOR<estadoventaCreateWithoutVentaInput, estadoventaUncheckedCreateWithoutVentaInput>
  }

  export type usuarioCreateWithoutVentaInput = {
    nombre: string
    correo: string
    contrasena: string
    rol?: rolCreateNestedOneWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateWithoutVentaInput = {
    id?: number
    nombre: string
    correo: string
    contrasena: string
    rol_id?: number | null
  }

  export type usuarioCreateOrConnectWithoutVentaInput = {
    where: usuarioWhereUniqueInput
    create: XOR<usuarioCreateWithoutVentaInput, usuarioUncheckedCreateWithoutVentaInput>
  }

  export type detalleventaUpsertWithWhereUniqueWithoutVentaInput = {
    where: detalleventaWhereUniqueInput
    update: XOR<detalleventaUpdateWithoutVentaInput, detalleventaUncheckedUpdateWithoutVentaInput>
    create: XOR<detalleventaCreateWithoutVentaInput, detalleventaUncheckedCreateWithoutVentaInput>
  }

  export type detalleventaUpdateWithWhereUniqueWithoutVentaInput = {
    where: detalleventaWhereUniqueInput
    data: XOR<detalleventaUpdateWithoutVentaInput, detalleventaUncheckedUpdateWithoutVentaInput>
  }

  export type detalleventaUpdateManyWithWhereWithoutVentaInput = {
    where: detalleventaScalarWhereInput
    data: XOR<detalleventaUpdateManyMutationInput, detalleventaUncheckedUpdateManyWithoutVentaInput>
  }

  export type estadoventaUpsertWithoutVentaInput = {
    update: XOR<estadoventaUpdateWithoutVentaInput, estadoventaUncheckedUpdateWithoutVentaInput>
    create: XOR<estadoventaCreateWithoutVentaInput, estadoventaUncheckedCreateWithoutVentaInput>
    where?: estadoventaWhereInput
  }

  export type estadoventaUpdateToOneWithWhereWithoutVentaInput = {
    where?: estadoventaWhereInput
    data: XOR<estadoventaUpdateWithoutVentaInput, estadoventaUncheckedUpdateWithoutVentaInput>
  }

  export type estadoventaUpdateWithoutVentaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type estadoventaUncheckedUpdateWithoutVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type usuarioUpsertWithoutVentaInput = {
    update: XOR<usuarioUpdateWithoutVentaInput, usuarioUncheckedUpdateWithoutVentaInput>
    create: XOR<usuarioCreateWithoutVentaInput, usuarioUncheckedCreateWithoutVentaInput>
    where?: usuarioWhereInput
  }

  export type usuarioUpdateToOneWithWhereWithoutVentaInput = {
    where?: usuarioWhereInput
    data: XOR<usuarioUpdateWithoutVentaInput, usuarioUncheckedUpdateWithoutVentaInput>
  }

  export type usuarioUpdateWithoutVentaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rol?: rolUpdateOneWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateWithoutVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type detalleventaCreateManyCodigobarraInput = {
    id?: number
    venta_id?: number | null
    producto_id?: number | null
    tipo_venta_id?: number | null
    tipo_lista_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type loteCreateManyCodigobarraInput = {
    id?: number
    fecha_vencimiento?: Date | string | null
    cantidad: number
    ubicacion?: string | null
  }

  export type detalleventaUpdateWithoutCodigobarraInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    producto?: productoUpdateOneWithoutDetalleventaNestedInput
    tipolistaprecio?: tipolistaprecioUpdateOneWithoutDetalleventaNestedInput
    tipoventa?: tipoventaUpdateOneWithoutDetalleventaNestedInput
    venta?: ventaUpdateOneWithoutDetalleventaNestedInput
  }

  export type detalleventaUncheckedUpdateWithoutCodigobarraInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type detalleventaUncheckedUpdateManyWithoutCodigobarraInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type loteUpdateWithoutCodigobarraInput = {
    fecha_vencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidad?: IntFieldUpdateOperationsInput | number
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    detallecompra?: detallecompraUpdateManyWithoutLoteNestedInput
    productoterminado?: productoterminadoUpdateManyWithoutLoteNestedInput
  }

  export type loteUncheckedUpdateWithoutCodigobarraInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha_vencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidad?: IntFieldUpdateOperationsInput | number
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    detallecompra?: detallecompraUncheckedUpdateManyWithoutLoteNestedInput
    productoterminado?: productoterminadoUncheckedUpdateManyWithoutLoteNestedInput
  }

  export type loteUncheckedUpdateManyWithoutCodigobarraInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha_vencimiento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cantidad?: IntFieldUpdateOperationsInput | number
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type detallecompraCreateManyCompraInput = {
    id?: number
    lote_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type ordencompracompraCreateManyCompraInput = {
    id?: number
    orden_id?: number | null
  }

  export type detallecompraUpdateWithoutCompraInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    lote?: loteUpdateOneWithoutDetallecompraNestedInput
  }

  export type detallecompraUncheckedUpdateWithoutCompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type detallecompraUncheckedUpdateManyWithoutCompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ordencompracompraUpdateWithoutCompraInput = {
    ordencompra?: ordencompraUpdateOneWithoutOrdencompracompraNestedInput
  }

  export type ordencompracompraUncheckedUpdateWithoutCompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ordencompracompraUncheckedUpdateManyWithoutCompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type transaccionfinancieraCreateManyCuentafinancieraInput = {
    id?: number
    fecha: Date | string
    tipo_id?: number | null
    monto: Decimal | DecimalJsLike | number | string
    descripcion?: string | null
  }

  export type transaccionfinancieraUpdateWithoutCuentafinancieraInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    tipotransaccion?: tipotransaccionUpdateOneWithoutTransaccionfinancieraNestedInput
  }

  export type transaccionfinancieraUncheckedUpdateWithoutCuentafinancieraInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_id?: NullableIntFieldUpdateOperationsInput | number | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type transaccionfinancieraUncheckedUpdateManyWithoutCuentafinancieraInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_id?: NullableIntFieldUpdateOperationsInput | number | null
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ordencompraCreateManyEstadoordencompraInput = {
    id?: number
    proveedor_id?: number | null
    fecha: Date | string
    observaciones?: string | null
  }

  export type ordencompraUpdateWithoutEstadoordencompraInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    detalleordencompra?: detalleordencompraUpdateManyWithoutOrdencompraNestedInput
    proveedor?: proveedorUpdateOneWithoutOrdencompraNestedInput
    ordencompracompra?: ordencompracompraUpdateManyWithoutOrdencompraNestedInput
  }

  export type ordencompraUncheckedUpdateWithoutEstadoordencompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    detalleordencompra?: detalleordencompraUncheckedUpdateManyWithoutOrdencompraNestedInput
    ordencompracompra?: ordencompracompraUncheckedUpdateManyWithoutOrdencompraNestedInput
  }

  export type ordencompraUncheckedUpdateManyWithoutEstadoordencompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ordenproduccionCreateManyEstadoproduccionInput = {
    id?: number
    producto_id?: number | null
    fecha_inicio: Date | string
    fecha_fin?: Date | string | null
  }

  export type ordenproduccionUpdateWithoutEstadoproduccionInput = {
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumoproduccion?: insumoproduccionUpdateManyWithoutOrdenproduccionNestedInput
    producto?: productoUpdateOneWithoutOrdenproduccionNestedInput
    productoterminado?: productoterminadoUpdateManyWithoutOrdenproduccionNestedInput
  }

  export type ordenproduccionUncheckedUpdateWithoutEstadoproduccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumoproduccion?: insumoproduccionUncheckedUpdateManyWithoutOrdenproduccionNestedInput
    productoterminado?: productoterminadoUncheckedUpdateManyWithoutOrdenproduccionNestedInput
  }

  export type ordenproduccionUncheckedUpdateManyWithoutEstadoproduccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ventaCreateManyEstadoventaInput = {
    id?: number
    usuario_id?: number | null
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
  }

  export type ventaUpdateWithoutEstadoventaInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    detalleventa?: detalleventaUpdateManyWithoutVentaNestedInput
    usuario?: usuarioUpdateOneWithoutVentaNestedInput
  }

  export type ventaUncheckedUpdateWithoutEstadoventaInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    detalleventa?: detalleventaUncheckedUpdateManyWithoutVentaNestedInput
  }

  export type ventaUncheckedUpdateManyWithoutEstadoventaInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type detallecompraCreateManyLoteInput = {
    id?: number
    compra_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type productoterminadoCreateManyLoteInput = {
    id?: number
    orden_id?: number | null
    cantidad: number
  }

  export type detallecompraUpdateWithoutLoteInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    compra?: compraUpdateOneWithoutDetallecompraNestedInput
  }

  export type detallecompraUncheckedUpdateWithoutLoteInput = {
    id?: IntFieldUpdateOperationsInput | number
    compra_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type detallecompraUncheckedUpdateManyWithoutLoteInput = {
    id?: IntFieldUpdateOperationsInput | number
    compra_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type productoterminadoUpdateWithoutLoteInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    ordenproduccion?: ordenproduccionUpdateOneWithoutProductoterminadoNestedInput
  }

  export type productoterminadoUncheckedUpdateWithoutLoteInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type productoterminadoUncheckedUpdateManyWithoutLoteInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type detalleordencompraCreateManyOrdencompraInput = {
    id?: number
    producto_id?: number | null
    cantidad_solicitada: number
    precio_estimado?: Decimal | DecimalJsLike | number | string | null
  }

  export type ordencompracompraCreateManyOrdencompraInput = {
    id?: number
    compra_id?: number | null
  }

  export type detalleordencompraUpdateWithoutOrdencompraInput = {
    cantidad_solicitada?: IntFieldUpdateOperationsInput | number
    precio_estimado?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    producto?: productoUpdateOneWithoutDetalleordencompraNestedInput
  }

  export type detalleordencompraUncheckedUpdateWithoutOrdencompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad_solicitada?: IntFieldUpdateOperationsInput | number
    precio_estimado?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type detalleordencompraUncheckedUpdateManyWithoutOrdencompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad_solicitada?: IntFieldUpdateOperationsInput | number
    precio_estimado?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type ordencompracompraUpdateWithoutOrdencompraInput = {
    compra?: compraUpdateOneWithoutOrdencompracompraNestedInput
  }

  export type ordencompracompraUncheckedUpdateWithoutOrdencompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    compra_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ordencompracompraUncheckedUpdateManyWithoutOrdencompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    compra_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type insumoproduccionCreateManyOrdenproduccionInput = {
    id?: number
    producto_id?: number | null
    cantidad: number
  }

  export type productoterminadoCreateManyOrdenproduccionInput = {
    id?: number
    lote_id?: number | null
    cantidad: number
  }

  export type insumoproduccionUpdateWithoutOrdenproduccionInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    producto?: productoUpdateOneWithoutInsumoproduccionNestedInput
  }

  export type insumoproduccionUncheckedUpdateWithoutOrdenproduccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type insumoproduccionUncheckedUpdateManyWithoutOrdenproduccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type productoterminadoUpdateWithoutOrdenproduccionInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    lote?: loteUpdateOneWithoutProductoterminadoNestedInput
  }

  export type productoterminadoUncheckedUpdateWithoutOrdenproduccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type productoterminadoUncheckedUpdateManyWithoutOrdenproduccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type codigobarraCreateManyProductoInput = {
    id?: number
    codigo: string
  }

  export type detalleordencompraCreateManyProductoInput = {
    id?: number
    orden_id?: number | null
    cantidad_solicitada: number
    precio_estimado?: Decimal | DecimalJsLike | number | string | null
  }

  export type detalleventaCreateManyProductoInput = {
    id?: number
    venta_id?: number | null
    codigo_barra_id?: number | null
    tipo_venta_id?: number | null
    tipo_lista_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type insumoproduccionCreateManyProductoInput = {
    id?: number
    orden_id?: number | null
    cantidad: number
  }

  export type listaprecioCreateManyProductoInput = {
    id?: number
    sucursal_id?: number | null
    tipo_lista_id?: number | null
    precio: Decimal | DecimalJsLike | number | string
  }

  export type ordenproduccionCreateManyProductoInput = {
    id?: number
    fecha_inicio: Date | string
    fecha_fin?: Date | string | null
    estado_id?: number | null
  }

  export type productocomboCreateManyProducto_productocombo_combo_idToproductoInput = {
    id?: number
    producto_id?: number | null
    cantidad: number
  }

  export type productocomboCreateManyProducto_productocombo_producto_idToproductoInput = {
    id?: number
    combo_id?: number | null
    cantidad: number
  }

  export type codigobarraUpdateWithoutProductoInput = {
    codigo?: StringFieldUpdateOperationsInput | string
    detalleventa?: detalleventaUpdateManyWithoutCodigobarraNestedInput
    lote?: loteUpdateManyWithoutCodigobarraNestedInput
  }

  export type codigobarraUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
    detalleventa?: detalleventaUncheckedUpdateManyWithoutCodigobarraNestedInput
    lote?: loteUncheckedUpdateManyWithoutCodigobarraNestedInput
  }

  export type codigobarraUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo?: StringFieldUpdateOperationsInput | string
  }

  export type detalleordencompraUpdateWithoutProductoInput = {
    cantidad_solicitada?: IntFieldUpdateOperationsInput | number
    precio_estimado?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ordencompra?: ordencompraUpdateOneWithoutDetalleordencompraNestedInput
  }

  export type detalleordencompraUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad_solicitada?: IntFieldUpdateOperationsInput | number
    precio_estimado?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type detalleordencompraUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad_solicitada?: IntFieldUpdateOperationsInput | number
    precio_estimado?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type detalleventaUpdateWithoutProductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigobarra?: codigobarraUpdateOneWithoutDetalleventaNestedInput
    tipolistaprecio?: tipolistaprecioUpdateOneWithoutDetalleventaNestedInput
    tipoventa?: tipoventaUpdateOneWithoutDetalleventaNestedInput
    venta?: ventaUpdateOneWithoutDetalleventaNestedInput
  }

  export type detalleventaUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    codigo_barra_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type detalleventaUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    codigo_barra_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type insumoproduccionUpdateWithoutProductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    ordenproduccion?: ordenproduccionUpdateOneWithoutInsumoproduccionNestedInput
  }

  export type insumoproduccionUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type insumoproduccionUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    orden_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type listaprecioUpdateWithoutProductoInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sucursal?: sucursalUpdateOneWithoutListaprecioNestedInput
    tipolistaprecio?: tipolistaprecioUpdateOneWithoutListaprecioNestedInput
  }

  export type listaprecioUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursal_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type listaprecioUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    sucursal_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ordenproduccionUpdateWithoutProductoInput = {
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumoproduccion?: insumoproduccionUpdateManyWithoutOrdenproduccionNestedInput
    estadoproduccion?: estadoproduccionUpdateOneWithoutOrdenproduccionNestedInput
    productoterminado?: productoterminadoUpdateManyWithoutOrdenproduccionNestedInput
  }

  export type ordenproduccionUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    insumoproduccion?: insumoproduccionUncheckedUpdateManyWithoutOrdenproduccionNestedInput
    productoterminado?: productoterminadoUncheckedUpdateManyWithoutOrdenproduccionNestedInput
  }

  export type ordenproduccionUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type productocomboUpdateWithoutProducto_productocombo_combo_idToproductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    producto_productocombo_producto_idToproducto?: productoUpdateOneWithoutProductocombo_productocombo_producto_idToproductoNestedInput
  }

  export type productocomboUncheckedUpdateWithoutProducto_productocombo_combo_idToproductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type productocomboUncheckedUpdateManyWithoutProducto_productocombo_combo_idToproductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type productocomboUpdateWithoutProducto_productocombo_producto_idToproductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    producto_productocombo_combo_idToproducto?: productoUpdateOneWithoutProductocombo_productocombo_combo_idToproductoNestedInput
  }

  export type productocomboUncheckedUpdateWithoutProducto_productocombo_producto_idToproductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    combo_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type productocomboUncheckedUpdateManyWithoutProducto_productocombo_producto_idToproductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    combo_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type compraCreateManyProveedorInput = {
    id?: number
    fecha: Date | string
    total: Decimal | DecimalJsLike | number | string
  }

  export type ordencompraCreateManyProveedorInput = {
    id?: number
    fecha: Date | string
    estado_id?: number | null
    observaciones?: string | null
  }

  export type compraUpdateWithoutProveedorInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    detallecompra?: detallecompraUpdateManyWithoutCompraNestedInput
    ordencompracompra?: ordencompracompraUpdateManyWithoutCompraNestedInput
  }

  export type compraUncheckedUpdateWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    detallecompra?: detallecompraUncheckedUpdateManyWithoutCompraNestedInput
    ordencompracompra?: ordencompracompraUncheckedUpdateManyWithoutCompraNestedInput
  }

  export type compraUncheckedUpdateManyWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ordencompraUpdateWithoutProveedorInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    detalleordencompra?: detalleordencompraUpdateManyWithoutOrdencompraNestedInput
    estadoordencompra?: estadoordencompraUpdateOneWithoutOrdencompraNestedInput
    ordencompracompra?: ordencompracompraUpdateManyWithoutOrdencompraNestedInput
  }

  export type ordencompraUncheckedUpdateWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    detalleordencompra?: detalleordencompraUncheckedUpdateManyWithoutOrdencompraNestedInput
    ordencompracompra?: ordencompracompraUncheckedUpdateManyWithoutOrdencompraNestedInput
  }

  export type ordencompraUncheckedUpdateManyWithoutProveedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type permisoCreateManyRolInput = {
    id?: number
    screen_id?: number | null
    puede_ver?: boolean | null
    puede_crear?: boolean | null
    puede_editar?: boolean | null
    puede_eliminar?: boolean | null
  }

  export type usuarioCreateManyRolInput = {
    id?: number
    nombre: string
    correo: string
    contrasena: string
  }

  export type permisoUpdateWithoutRolInput = {
    puede_ver?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_crear?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_editar?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_eliminar?: NullableBoolFieldUpdateOperationsInput | boolean | null
    screen?: screenUpdateOneWithoutPermisoNestedInput
  }

  export type permisoUncheckedUpdateWithoutRolInput = {
    id?: IntFieldUpdateOperationsInput | number
    screen_id?: NullableIntFieldUpdateOperationsInput | number | null
    puede_ver?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_crear?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_editar?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_eliminar?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type permisoUncheckedUpdateManyWithoutRolInput = {
    id?: IntFieldUpdateOperationsInput | number
    screen_id?: NullableIntFieldUpdateOperationsInput | number | null
    puede_ver?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_crear?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_editar?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_eliminar?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type usuarioUpdateWithoutRolInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    venta?: ventaUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateWithoutRolInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    venta?: ventaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateManyWithoutRolInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
  }

  export type permisoCreateManyScreenInput = {
    id?: number
    rol_id?: number | null
    puede_ver?: boolean | null
    puede_crear?: boolean | null
    puede_editar?: boolean | null
    puede_eliminar?: boolean | null
  }

  export type permisoUpdateWithoutScreenInput = {
    puede_ver?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_crear?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_editar?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_eliminar?: NullableBoolFieldUpdateOperationsInput | boolean | null
    rol?: rolUpdateOneWithoutPermisoNestedInput
  }

  export type permisoUncheckedUpdateWithoutScreenInput = {
    id?: IntFieldUpdateOperationsInput | number
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    puede_ver?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_crear?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_editar?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_eliminar?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type permisoUncheckedUpdateManyWithoutScreenInput = {
    id?: IntFieldUpdateOperationsInput | number
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    puede_ver?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_crear?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_editar?: NullableBoolFieldUpdateOperationsInput | boolean | null
    puede_eliminar?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type listaprecioCreateManySucursalInput = {
    id?: number
    producto_id?: number | null
    tipo_lista_id?: number | null
    precio: Decimal | DecimalJsLike | number | string
  }

  export type listaprecioUpdateWithoutSucursalInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    producto?: productoUpdateOneWithoutListaprecioNestedInput
    tipolistaprecio?: tipolistaprecioUpdateOneWithoutListaprecioNestedInput
  }

  export type listaprecioUncheckedUpdateWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type listaprecioUncheckedUpdateManyWithoutSucursalInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type cuentafinancieraCreateManyTipocuentaInput = {
    id?: number
    nombre: string
    saldo?: Decimal | DecimalJsLike | number | string | null
  }

  export type cuentafinancieraUpdateWithoutTipocuentaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    saldo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transaccionfinanciera?: transaccionfinancieraUpdateManyWithoutCuentafinancieraNestedInput
  }

  export type cuentafinancieraUncheckedUpdateWithoutTipocuentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    saldo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    transaccionfinanciera?: transaccionfinancieraUncheckedUpdateManyWithoutCuentafinancieraNestedInput
  }

  export type cuentafinancieraUncheckedUpdateManyWithoutTipocuentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    saldo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type detalleventaCreateManyTipolistaprecioInput = {
    id?: number
    venta_id?: number | null
    codigo_barra_id?: number | null
    producto_id?: number | null
    tipo_venta_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type listaprecioCreateManyTipolistaprecioInput = {
    id?: number
    producto_id?: number | null
    sucursal_id?: number | null
    precio: Decimal | DecimalJsLike | number | string
  }

  export type detalleventaUpdateWithoutTipolistaprecioInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigobarra?: codigobarraUpdateOneWithoutDetalleventaNestedInput
    producto?: productoUpdateOneWithoutDetalleventaNestedInput
    tipoventa?: tipoventaUpdateOneWithoutDetalleventaNestedInput
    venta?: ventaUpdateOneWithoutDetalleventaNestedInput
  }

  export type detalleventaUncheckedUpdateWithoutTipolistaprecioInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    codigo_barra_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type detalleventaUncheckedUpdateManyWithoutTipolistaprecioInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    codigo_barra_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type listaprecioUpdateWithoutTipolistaprecioInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    producto?: productoUpdateOneWithoutListaprecioNestedInput
    sucursal?: sucursalUpdateOneWithoutListaprecioNestedInput
  }

  export type listaprecioUncheckedUpdateWithoutTipolistaprecioInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    sucursal_id?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type listaprecioUncheckedUpdateManyWithoutTipolistaprecioInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    sucursal_id?: NullableIntFieldUpdateOperationsInput | number | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type transaccionfinancieraCreateManyTipotransaccionInput = {
    id?: number
    cuenta_id?: number | null
    fecha: Date | string
    monto: Decimal | DecimalJsLike | number | string
    descripcion?: string | null
  }

  export type transaccionfinancieraUpdateWithoutTipotransaccionInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    cuentafinanciera?: cuentafinancieraUpdateOneWithoutTransaccionfinancieraNestedInput
  }

  export type transaccionfinancieraUncheckedUpdateWithoutTipotransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    cuenta_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type transaccionfinancieraUncheckedUpdateManyWithoutTipotransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    cuenta_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    monto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type detalleventaCreateManyTipoventaInput = {
    id?: number
    venta_id?: number | null
    codigo_barra_id?: number | null
    producto_id?: number | null
    tipo_lista_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type detalleventaUpdateWithoutTipoventaInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigobarra?: codigobarraUpdateOneWithoutDetalleventaNestedInput
    producto?: productoUpdateOneWithoutDetalleventaNestedInput
    tipolistaprecio?: tipolistaprecioUpdateOneWithoutDetalleventaNestedInput
    venta?: ventaUpdateOneWithoutDetalleventaNestedInput
  }

  export type detalleventaUncheckedUpdateWithoutTipoventaInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    codigo_barra_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type detalleventaUncheckedUpdateManyWithoutTipoventaInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    codigo_barra_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ventaCreateManyUsuarioInput = {
    id?: number
    fecha: Date | string
    estado_id?: number | null
    total: Decimal | DecimalJsLike | number | string
  }

  export type ventaUpdateWithoutUsuarioInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    detalleventa?: detalleventaUpdateManyWithoutVentaNestedInput
    estadoventa?: estadoventaUpdateOneWithoutVentaNestedInput
  }

  export type ventaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    detalleventa?: detalleventaUncheckedUpdateManyWithoutVentaNestedInput
  }

  export type ventaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estado_id?: NullableIntFieldUpdateOperationsInput | number | null
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type detalleventaCreateManyVentaInput = {
    id?: number
    codigo_barra_id?: number | null
    producto_id?: number | null
    tipo_venta_id?: number | null
    tipo_lista_id?: number | null
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
  }

  export type detalleventaUpdateWithoutVentaInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    codigobarra?: codigobarraUpdateOneWithoutDetalleventaNestedInput
    producto?: productoUpdateOneWithoutDetalleventaNestedInput
    tipolistaprecio?: tipolistaprecioUpdateOneWithoutDetalleventaNestedInput
    tipoventa?: tipoventaUpdateOneWithoutDetalleventaNestedInput
  }

  export type detalleventaUncheckedUpdateWithoutVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo_barra_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type detalleventaUncheckedUpdateManyWithoutVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    codigo_barra_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_lista_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}